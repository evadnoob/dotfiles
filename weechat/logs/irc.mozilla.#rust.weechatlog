2016-12-13 15:11:13	◥	d8v3 (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2016-12-13 15:11:13	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-13 15:11:13	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-13 15:11:13	⚡	Channel #rust: 1225 nicks (17 ops, 0 halfops, 3 voices, 1205 normals)
2016-12-13 15:11:15	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-13 15:11:25	⚡	You are now known as boon
2016-12-13 15:12:07	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-13 15:12:56	Aaronepower	fabrice That's a C attitude to the problem. It is not basically multiplication. It's moving bits to the left. If it was it wouldn't have an operator.
2016-12-13 15:13:03	◥	khr (khr@moz-8oaq99.siedlce.vectranet.pl) has joined #rust
2016-12-13 15:13:04	cholcombe	is it just me or is crates.io picking up speed for crates being created?
2016-12-13 15:13:06	luisbg	insaneinside: thank you very much :) this works now
2016-12-13 15:13:14	@steveklabnik	cholcombe: hopefully ;)
2016-12-13 15:13:29	cholcombe	:)
2016-12-13 15:13:30	◣	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has quit (Client exited)
2016-12-13 15:14:02	@steveklabnik	cholcombe: http://www.modulecounts.com/ <- looks pretty steady
2016-12-13 15:14:03	◣	jsbruner (Instantbird@moz-ueok8s.livnmi.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2016-12-13 15:14:23	@steveklabnik	there was a bump in the middle of sepetember?
2016-12-13 15:14:38	cholcombe	steveklabnik, is that an internal page?  It seems to just be spinning for me
2016-12-13 15:14:55	@steveklabnik	nope
2016-12-13 15:14:57	@steveklabnik	give it a second
2016-12-13 15:15:00	@steveklabnik	it takes a bit to load
2016-12-13 15:15:12	cholcombe	ah there we go. application error haha
2016-12-13 15:16:31	◣	rakm (rakm@moz-94s.lqk.115.17.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-13 15:17:27	◣	ghisvail (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2016-12-13 15:17:40	Aaronepower	I wonder why Go's is so bumpy, is there a lot of drama or something?
2016-12-13 15:18:11	◣	stjepang (stjepan@moz-pkt.en1.39.5.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 15:18:48	◣	ptc_ (textual@moz-b8ggmf.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2016-12-13 15:19:07	cholcombe	jeez npm is taking off like a rocket
2016-12-13 15:20:06	◥	nicoch (nicoch@moz-fslb28.2utt.76f9.0e34.2a01.IP) has joined #rust
2016-12-13 15:21:32	◣	Douman (Douman@moz-fqe10i.dynamic.mts-nn.ru) has quit (Quit: )
2016-12-13 15:23:13	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2016-12-13 15:24:33	◣	nicoch (nicoch@moz-fslb28.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2016-12-13 15:24:58	◣	iamrohit7 (uid193791@moz-ks4tse.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-13 15:26:23	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-13 15:27:18	◣	av (av@moz-ck6g9m.80x24.ca) has quit (Quit: Bye!)
2016-12-13 15:27:31	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-13 15:27:31	⚡	rail is now known as rail-away
2016-12-13 15:28:17	◥	arBmind (Andreas@moz-7ch6sq.dyn.telefonica.de) has joined #rust
2016-12-13 15:28:18	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2016-12-13 15:29:31	◥	ytain (ytain@moz-sjhfp3.1n9g.9b41.f2c0.2607.IP) has joined #rust
2016-12-13 15:29:47	◥	av (av@moz-ck6g9m.80x24.ca) has joined #rust
2016-12-13 15:30:44	◣	FreeBird (FreeBird@moz-32g3sn.g3ns.5eqj.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 15:31:34	◥	nom-ent (user@moz-lcjjd9.resnet.messiah.edu) has joined #rust
2016-12-13 15:32:02	Aaronepower	Is there a succinct way of adding two tuples? Like (1, 2, 3) + (3, 2, 1) == (4, 4, 4)
2016-12-13 15:32:40	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-13 15:32:58	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-13 15:33:01	◥	vvv (Thunderbird@moz-mola5p.snap.volia.net) has joined #rust
2016-12-13 15:33:06	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Quit: Leaving)
2016-12-13 15:33:10	◥	jsbruner (Instantbird@moz-ktd1hr.h4gj.q8mm.0306.2602.IP) has joined #rust
2016-12-13 15:34:03	◥	kazagistar (Adium@moz-br6.b81.207.205.IP) has joined #rust
2016-12-13 15:34:05	Fenrir	I imagine you'd have to make a tuple struct of the desired types and arity then impl Add
2016-12-13 15:35:28	◣	Guest2 (textual@moz-ltg.90u.223.117.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-13 15:35:52	◣	nom-ent (user@moz-lcjjd9.resnet.messiah.edu) has quit (Ping timeout: 121 seconds)
2016-12-13 15:36:20	◣	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-13 15:36:22	◥	arBmind1 (Andreas@moz-7ch6sq.dyn.telefonica.de) has joined #rust
2016-12-13 15:36:59	◣	ndhoule (ndhoule@moz-ousraa.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-13 15:37:01	bluss	there are libraries that implement that
2016-12-13 15:37:10	bluss	(probably too many to count)
2016-12-13 15:37:37	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (A TLS packet with unexpected length was received.)
2016-12-13 15:38:22	◣	arBmind (Andreas@moz-7ch6sq.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2016-12-13 15:39:42	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2016-12-13 15:40:38	◣	fede1024 (quassel@moz-96v5ql.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-13 15:41:27	◣	Fanaen (Fanaen@moz-r12t4i.6rfj.92aj.0e35.2a01.IP) has quit (Quit: Leaving)
2016-12-13 15:41:33	◣	wink (fhtagn@moz-0mo9f6.art-core.org) has quit (Ping timeout: 121 seconds)
2016-12-13 15:42:09	◥	Jesin (Jesin@moz-0bqk66.hfc.comcastbusiness.net) has joined #rust
2016-12-13 15:42:39	◥	saimen (saimen@moz-i2kas4.natpool.mwn.de) has joined #rust
2016-12-13 15:43:17	◥	PeterSP (peter@moz-jf28ru.fios.verizon.net) has joined #rust
2016-12-13 15:45:01	◣	Jesin (Jesin@moz-0bqk66.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2016-12-13 15:45:16	◥	xor (xor@moz-5lgrnv.rev.vodafone.pt) has joined #rust
2016-12-13 15:46:03	xor	How long is rust's compilation(debug) supposed to take?
2016-12-13 15:47:18	talchas	of rustc? approximately forever it feels like
2016-12-13 15:47:19	cetra3	xor: 1 thousand years give or take a decade
2016-12-13 15:47:40	talchas	of other things it depends on the crate, certain constructs can certainly make it take a while
2016-12-13 15:47:41	cetra3	lol no, depends on what you're compiling + libraries
2016-12-13 15:47:55	◣	Guest (textual@moz-nfa636.static.sonic.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-13 15:48:00	xor	It's been hours for me...
2016-12-13 15:48:24	xor	I'm just following the instructions on github, with the added flag to enable debug build.
2016-12-13 15:48:33	cetra3	are you compiling on the toaster
2016-12-13 15:48:39	◣	jdm (jdm@moz-5quovd.3t38.sij7.f0c8.2607.IP) has quit (Connection closed)
2016-12-13 15:49:07	◣	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 15:49:14	talchas	anyways, llvm can take a while, rustc's other parts can take a while
2016-12-13 15:49:26	Fenrir	last time i did a full debug build of the compiler it took like 3 hours
2016-12-13 15:49:28	talchas	if it's still burning cpu I wouldn't worry about it being stuck
2016-12-13 15:50:37	xor	talchas, It doesn't seem stuck. Keeps jumping to other files. Building stage keeps changing.
2016-12-13 15:50:43	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-13 15:50:57	◣	arielby (Ariel@moz-te0r0b.cablep.bezeqint.net) has quit (Quit: Leaving)
2016-12-13 15:51:18	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-13 15:51:23	&mbrubeck	xor: By default it only runs one job at a time; you can do `make -j6` to take advantage of multiple cores if you have them. http://www.ncameron.org/blog/how-fast-can-i-build-rust/
2016-12-13 15:51:28	talchas	xor: yeah, it's probably just taking forever then
2016-12-13 15:51:38	◥	Guest (textual@moz-nfa636.static.sonic.net) has joined #rust
2016-12-13 15:51:48	◣	cmyr (cmyr@moz-bfu9ov.cpe.teksavvy.com) has quit (Client exited)
2016-12-13 15:52:35	rkruppe	xor: --enable-debugn without --enable-optimize? IIRC that will built without optimization, which is another big source of slowdown in the later bootstrapping stages.
2016-12-13 15:52:47	xor	mbrubeck, It's using 4 cores. I don't want to imagine a world where it wouldn't do that.
2016-12-13 15:52:59	&mbrubeck	:)
2016-12-13 15:53:48	xor	rkruppe, That's right, I just added debug flag.
2016-12-13 15:53:54	rkruppe	I wish I had 4 cores
2016-12-13 15:53:54	&mbrubeck	If you're on a laptop like mine that has 4 "hyperthreads" but only 2 physical cores, -j2 might be faster than -j4
2016-12-13 15:53:54	◥	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has joined #rust
2016-12-13 15:53:54	rkruppe	oh duh I have 4 HT cores
2016-12-13 15:54:54	rkruppe	xor: I'm curious, why do you need debug?
2016-12-13 15:54:58	xor	mbrubeck, I actually have 4 cores, I'll leave it as is.
2016-12-13 15:55:11	◣	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2016-12-13 15:55:27	◥	Cyderize (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2016-12-13 15:55:51	xor	rkruppe, Nothing in particular, I'm considering contributing to the project, I want to take a look around.
2016-12-13 15:56:04	◣	mexisme2 (mexisme@moz-dlf.n66.149.118.IP) has quit (Connection closed)
2016-12-13 15:56:16	◥	mexisme (mexisme@moz-15mtqr.vf.net.nz) has joined #rust
2016-12-13 15:56:22	rkruppe	Well I contribute occasionally without debug info
2016-12-13 15:56:39	◥	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has joined #rust
2016-12-13 15:56:39	xor	If I kill this build, will the work done so far be usable if I restart it later?
2016-12-13 15:56:43	◥	cjhowe (cjhowe@moz-hlme8b.1cuh.qeg5.a601.2605.IP) has joined #rust
2016-12-13 15:56:58	rkruppe	Is LLVM finished?
2016-12-13 15:58:04	rkruppe	because LLVM will be rebuilt from scratch if you kill the build
2016-12-13 15:58:04	xor	Build state2: rustc_llvm is done.
2016-12-13 15:58:24	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-13 16:00:34	◣	vvv (Thunderbird@moz-mola5p.snap.volia.net) has quit (Client exited)
2016-12-13 16:00:36	rkruppe	I don't even mean rustc_llvm, just LLVM proper
2016-12-13 16:00:36	rkruppe	if you're in stage2 then you're almost done
2016-12-13 16:00:36	rkruppe	and killing it will only lose progress on the crates it is currently compiling, everything that's finished remains
2016-12-13 16:00:36	◥	bfrog (tburdick@moz-2if.9q9.106.38.IP) has joined #rust
2016-12-13 16:00:36	xor	rkruppe, I'll let it do it's thing for now then...
2016-12-13 16:00:36	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-13 16:00:36	◣	urcra (urcra@moz-9lk9gn.cpe.webspeed.dk) has quit (Connection closed)
2016-12-13 16:00:36	xor	<rkruppe> Well I contribute occasionally without debug info: I need all the help I can get. ^_^
2016-12-13 16:01:09	rkruppe	I don't find diving into a huge unfamiliar code base with a debugger very helpful
2016-12-13 16:01:17	rkruppe	but whatever floats your boat
2016-12-13 16:01:31	xor	rkruppe, What would you find helpful?
2016-12-13 16:01:52	◣	Guest21 (textual@moz-t64.lvo.101.155.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-13 16:02:00	rkruppe	I grab small pieces of relatively isolated code and try to read it
2016-12-13 16:02:23	rkruppe	gradually working up to more central places with more dependencies
2016-12-13 16:02:33	◥	hansaplast (hansaplast@moz-hk2rf2.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-13 16:03:00	rkruppe	also I idle in #rust-internals and #rustc and ask stupid questions
2016-12-13 16:03:01	◣	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has quit (Quit: WeeChat 1.6)
2016-12-13 16:03:37	splitty_	rkruppe, I just made my ray tracer multi-threaded, but for some reason the multi-threaded version is always considerably slower.
2016-12-13 16:03:44	◣	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:03:50	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-13 16:03:58	rkruppe	those are two separate things by the way, just hanging out and reading along is extremely helpful
2016-12-13 16:04:08	rkruppe	splitty_: huh. do you have any synchronization?
2016-12-13 16:04:17	splitty_	I thought that maybe the cost of spawning threads was too high for small resolutions, but even for huge images it's considerably slower.
2016-12-13 16:04:28	splitty_	Just a single channel.
2016-12-13 16:04:28	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:04:32	◣	Dahrkael (Dahrkael@moz-6vm.u1p.25.46.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:04:39	splitty_	Well, and a single Arc<Mutex<Vec<Color>>> too
2016-12-13 16:04:40	rkruppe	is it contended by all threads?
2016-12-13 16:04:43	xor	rkruppe, Sounds like a course of action I should consider.
2016-12-13 16:04:51	splitty_	The channel is cloned for every thread
2016-12-13 16:04:54	◥	Eonil (Eonil@moz-n1g.alp.106.222.IP) has joined #rust
2016-12-13 16:04:59	rkruppe	ah yeah that's gonna kill ya
2016-12-13 16:04:59	splitty_	Oh?
2016-12-13 16:05:04	rkruppe	still the same channel
2016-12-13 16:05:22	splitty_	I haven't really worked with threads in Rust, so I just did what the concurrency part of the book suggested
2016-12-13 16:05:24	◥	skeet70 (skeet70@moz-4b4.f3p.90.153.IP) has joined #rust
2016-12-13 16:05:33	◣	bfrog (tburdick@moz-2if.9q9.106.38.IP) has quit (Quit: WeeChat 1.6)
2016-12-13 16:05:59	splitty_	How else would I do it?
2016-12-13 16:06:07	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-13 16:06:10	rkruppe	ideally you should be able to do without any synchronization
2016-12-13 16:06:18	◣	qaz (qaz@moz-jne.0e7.227.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:06:25	splitty_	Does an Arc<_> count as synchronization?
2016-12-13 16:06:34	◣	hansaplast (hansaplast@moz-hk2rf2.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:06:53	rkruppe	just hand out disjoint &mut Color's to each thread
2016-12-13 16:06:58	rkruppe	one per pixel
2016-12-13 16:07:00	Phrohdoh	How can I prevent rustfmt from unindenting my comments? https://github.com/Phrohdoh/tsqlust/blob/a2e93df42b8233d071236d1bc9ca27105fe848b6/src/lib.rs#L161-L164
2016-12-13 16:07:16	rkruppe	Arc not really (but cloning can contend) but Mutex!!
2016-12-13 16:07:52	rkruppe	splitty_: do you know about scoped threads?
2016-12-13 16:08:15	◣	canaltinova (uid191250@moz-l3qbqh.tooting.irccloud.com) has quit (Quit: )
2016-12-13 16:08:25	splitty_	rkruppe, I saw that you used them in your ray tracer, but didn't really understand what they are/do
2016-12-13 16:08:40	rkruppe	They're like ordinary threads
2016-12-13 16:08:58	splitty_	Phrohdoh, create a rustfmt.toml and put normalize_comments = false in it
2016-12-13 16:09:20	Phrohdoh	normalizing is separate from indentation, yeah?
2016-12-13 16:09:30	splitty_	Oh, yeah sorry
2016-12-13 16:09:31	rkruppe	But it is statically guaranteed they terminate before some code block is left, so they can borrow stuff from their parent thrad
2016-12-13 16:09:32	splitty_	Let me take a look
2016-12-13 16:11:00	splitty_	Phrohdoh, could you you try disabling normalize_comments and see what it does? I can't find a separate option for indentation
2016-12-13 16:11:16	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2016-12-13 16:11:17	splitty_	Normalizing converts /* ... */ comments to // comments
2016-12-13 16:11:22	splitty_	So I guess that's probably what you want to disable
2016-12-13 16:11:35	splitty_	rkruppe, sounds good
2016-12-13 16:11:55	rkruppe	Phrohdoh: have you considered indenting those comments? :P
2016-12-13 16:12:08	rkruppe	Phrohdoh: I'm only half joking btw
2016-12-13 16:12:10	Phrohdoh	rkruppe: eh?
2016-12-13 16:12:29	rkruppe	just let rustfmt do its thing
2016-12-13 16:12:42	Phrohdoh	What it's doing is wrong though
2016-12-13 16:12:45	rkruppe	splitty_: what do you need the channel for btw?
2016-12-13 16:12:54	rkruppe	Phrohdoh: eh?
2016-12-13 16:12:59	@steveklabnik	iirc in the future it won't do this
2016-12-13 16:13:20	rkruppe	oh it's REMOVING indentation?
2016-12-13 16:13:20	Phrohdoh	splitty_: so setting normalize_comments to false fixes the unindentation, which is nice, so thanks!
2016-12-13 16:13:22	splitty_	Well.. rkruppe: http://hastebin.com/vexewewuno.swift
2016-12-13 16:13:25	Phrohdoh	rkruppe: Indeed.
2016-12-13 16:13:26	rkruppe	wth
2016-12-13 16:13:50	Phrohdoh	steveklabnik: Meaning I won't have to disable normalization?
2016-12-13 16:13:53	◣	insaneinside (user@moz-ck7c5n.customer.broadstripe.net) has quit (Ping timeout: 121 seconds)
2016-12-13 16:14:00	◣	Yann (yann@moz-i2v.sjc.226.195.IP) has quit (Quit: Leaving.)
2016-12-13 16:14:14	rkruppe	splitty_: oh noes you lock the whole scene?!?
2016-12-13 16:14:29	@steveklabnik	Phrohdoh: i don't know about the indnetation, but the /* -> //
2016-12-13 16:14:32	splitty_	Oh shit
2016-12-13 16:14:39	@steveklabnik	that is, it won't reformat between the two styles
2016-12-13 16:14:42	@steveklabnik	it'll keep the ones you write
2016-12-13 16:14:45	@steveklabnik	i believe
2016-12-13 16:14:50	Phrohdoh	In multi-line /* ... */ do you guys line up the stars or does the */'s star line up with the / in /*?
2016-12-13 16:15:04	rkruppe	splitty_: the scene should be read-only, put it in ab Arc *without* a Mutex
2016-12-13 16:15:11	▷	steveklabnik never /*s
2016-12-13 16:15:13	rkruppe	before you transition to scoped threads
2016-12-13 16:15:15	Phrohdoh	Eh so that won't fix the unindentation it seems
2016-12-13 16:15:27	splitty_	Phrohdoh, I make the *'s line up, but I guess it really doesn't matter
2016-12-13 16:15:30	sp3d	Phrohdoh: /* and */ at opposite corners
2016-12-13 16:15:37	Phrohdoh	O.o psycho
2016-12-13 16:15:44	Phrohdoh	:P
2016-12-13 16:15:54	sp3d	i.e. just directly encose the line-broken text
2016-12-13 16:15:59	sp3d	enclose*
2016-12-13 16:16:02	splitty_	Yeah rkruppe I just realized that haha
2016-12-13 16:16:14	splitty_	I need to get another coffee.
2016-12-13 16:16:17	◣	skeet70 (skeet70@moz-4b4.f3p.90.153.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-13 16:16:18	◥	Darfeel (Thunderbird@moz-m3u.505.53.184.IP) has joined #rust
2016-12-13 16:16:55	splitty_	OH I remember why I did that
2016-12-13 16:17:05	splitty_	the trait bound `engine::scene::RenderObject + Send + 'static: std::marker::Sync` is not satisfied
2016-12-13 16:17:10	◣	rschiffl1n (randy@moz-pq4gsv.9f9c.64c2.8801.2600.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:17:19	◥	Yann (yann@moz-i2v.sjc.226.195.IP) has joined #rust
2016-12-13 16:17:28	splitty_	Okay fixed
2016-12-13 16:17:30	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2016-12-13 16:18:08	splitty_	rkruppe, I'm getting really confused whenever I have to make something + Sync + Send
2016-12-13 16:18:26	rkruppe	Dom't use trait objects then :P
2016-12-13 16:18:29	rkruppe	Who even needs them
2016-12-13 16:18:41	rkruppe	Triangle meshes a day erry day
2016-12-13 16:19:19	splitty_	Well I don't have meshes yet, and that's how I can interface with objects :P
2016-12-13 16:19:38	rkruppe	Bah who need spheres
2016-12-13 16:19:47	rkruppe	Go triangles or go home :D
2016-12-13 16:20:25	splitty_	Rendering...OK (1337ms)
2016-12-13 16:20:27	splitty_	So l33t
2016-12-13 16:20:35	rkruppe	Wonder how fast your ray tracer will be with 70k primitives
2016-12-13 16:20:46	splitty_	Oy vey
2016-12-13 16:20:52	rkruppe	that's a nice small Stanford bunny
2016-12-13 16:22:13	Hail_Spacecake	ooh raytracers
2016-12-13 16:22:15	Hail_Spacecake	those are neat
2016-12-13 16:22:55	Hail_Spacecake	I had a rust raytracer proejct at one point thatI wanted to paralellize
2016-12-13 16:23:03	rkruppe	I told ya we should create a channel
2016-12-13 16:23:06	Hail_Spacecake	and I had trouble finding a way to get every ray tracing thread to write into the same pixel buffer
2016-12-13 16:23:19	Hail_Spacecake	then I got interested in other things and dropped it
2016-12-13 16:23:26	rkruppe	Hail_Spacecake: well scroll up we just covered that :)
2016-12-13 16:23:30	Phrohdoh	So I'm implementing the visitor pattern and currently my single Visitor trait has all the visit_x visit_y visit_z etc fns. If you all were a consumer of this crate would you want individual VisitX traits so you could only impl the nodes you wanted or is one massive trait ok?
2016-12-13 16:23:54	Phrohdoh	To give a bit more info your structs would need to impl my traits to get access to the AST via the visitor pattern, hopefully this makes sense.
2016-12-13 16:24:11	Phrohdoh	Personally I think I'd rather have individual traits but I want the input of others.
2016-12-13 16:24:56	splitty_	Haven't used many rusty parsers yet, the C/C++/C# ones I've used all use one big thing.
2016-12-13 16:25:19	splitty_	But well, traits are pretty inexpensive in quite beautiful in Rust, so.. I guess that could be nice too
2016-12-13 16:25:32	Phrohdoh	Well those can work that way because abstract classes (not sure about C) can have methods that you don't have to implement.
2016-12-13 16:25:41	splitty_	Yeah
2016-12-13 16:25:42	rkruppe	rustc also has the single trait variant for its visitors
2016-12-13 16:25:45	Phrohdoh	But in Rust I at least have to have an empty fn
2016-12-13 16:25:57	Phrohdoh	Which gets quite verbose
2016-12-13 16:26:05	rkruppe	Phrohdoh: you can have default impls
2016-12-13 16:26:12	Phrohdoh	Oh?
2016-12-13 16:26:25	rkruppe	er, provided methods they are called
2016-12-13 16:26:43	Phrohdoh	So the implementor won't have to include them if they want to fall back to the default then?
2016-12-13 16:26:47	rkruppe	all of Iterator's functionality is done that way
2016-12-13 16:27:05	splitty_	uh oh
2016-12-13 16:27:13	splitty_	My ray tracer approaches 4GB of memory
2016-12-13 16:27:18	splitty_	Let's see what happens
2016-12-13 16:27:31	splitty_	Oh this time it didn't freeze my PC
2016-12-13 16:27:36	xor	Famous last words...
2016-12-13 16:27:45	rkruppe	ehhh wat?
2016-12-13 16:27:45	rkruppe	why?
2016-12-13 16:27:46	splitty_	hah
2016-12-13 16:27:56	splitty_	rkruppe, I just rendered an 8000x8000 image
2016-12-13 16:28:02	Phrohdoh	!book
2016-12-13 16:28:02	+rustbot	The Rust Programming Language, read it online at https://doc.rust-lang.org/book/
2016-12-13 16:28:07	rkruppe	why.
2016-12-13 16:28:12	splitty_	Because I can :D
2016-12-13 16:28:12	Phrohdoh	ddg needs a rust-bang
2016-12-13 16:28:13	rkruppe	just. why.
2016-12-13 16:28:17	Phrohdoh	rust-book-bang*
2016-12-13 16:28:31	splitty_	That would actually be helpful haha
2016-12-13 16:28:36	rkruppe	just implement SSAA already for god's sake
2016-12-13 16:28:59	Phrohdoh	How do I search the book? cc steveklabnik
2016-12-13 16:29:01	splitty_	I wanted to do that.. but then I was like.. whatever, I can just render stuff at 20kx20k /s
2016-12-13 16:29:09	rkruppe	can you even open the resulting image?
2016-12-13 16:29:10	splitty_	Yep
2016-12-13 16:29:40	rkruppe	what crate do you use for writing images?
2016-12-13 16:30:01	splitty_	bmp
2016-12-13 16:30:28	splitty_	I only have a bmp backend yet, but luckily the ray tracer itself is backend agnostic so I guess I could just implement png or something like that pretty easily
2016-12-13 16:30:29	rkruppe	oh I thought it crashed on your megarenders
2016-12-13 16:30:55	rkruppe	Ah a custom implementation of a bmp encoder, not the bmp crate?
2016-12-13 16:31:01	splitty_	Well the bmp crate had a hard time blitting 1.1GB of data onto a bitmap
2016-12-13 16:31:13	Phrohdoh	Eh https://doc.rust-lang.org/book/traits.html doesn't show impl-ing default methods for a trait
2016-12-13 16:31:22	Phrohdoh	Or if it does I am missing that entirely
2016-12-13 16:31:26	▷	rkruppe shrugs
2016-12-13 16:31:39	splitty_	<rkruppe> Ah a custom implementation of a bmp encoder, not the bmp crate?
2016-12-13 16:31:44	splitty_	Just the bmp crate
2016-12-13 16:31:59	splitty_	I just need to remember myself not to render a 20Kx20K image again, and I'll be fine
2016-12-13 16:32:11	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2016-12-13 16:32:16	rkruppe	which brings me back to, didn't you tell me not to use it?
2016-12-13 16:32:58	splitty_	"<splitty_> Btw, don't use the "bmp" crate for rendering stuff to images. It crashed my computer while trying to save a 1.1GB bmp :D"
2016-12-13 16:33:03	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-13 16:33:09	splitty_	I told you not to use it for saving 1.1GB images. :P
2016-12-13 16:33:15	rkruppe	ha
2016-12-13 16:33:34	rkruppe	I considered switching to piston-image for PNG
2016-12-13 16:33:47	rkruppe	but my compile times are already atrocious
2016-12-13 16:33:50	splitty_	^
2016-12-13 16:34:16	splitty_	rkruppe: https://puu.sh/sOFI7/3f3d4b42db.png
2016-12-13 16:34:22	splitty_	Part of my last 4k*4k render
2016-12-13 16:34:37	rkruppe	neat
2016-12-13 16:34:44	◣	arBmind1 (Andreas@moz-7ch6sq.dyn.telefonica.de) has quit (Connection closed)
2016-12-13 16:34:50	Phrohdoh	So I just tacked { } onto the end of my fn-defs on my trait and now I get https://gist.github.com/Phrohdoh/74e5f743c6b365cae4b9d49dcb1fef96
2016-12-13 16:34:54	splitty_	Only looks smooth because it's supersampled by an ridiculous amount
2016-12-13 16:35:16	Phrohdoh	But to fix that I either need to ignore it or make them _ but the latter there implies to me that impl-ers would have to name them _ also which is obviously not desired
2016-12-13 16:35:33	splitty_	Well
2016-12-13 16:35:41	◣	jsbruner (Instantbird@moz-ktd1hr.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:35:49	splitty_	The impl-ers are probably gonna rename them anyway
2016-12-13 16:35:58	Phrohdoh	Why would they?
2016-12-13 16:36:02	rkruppe	Phrohdoh: parameter names are not part of the signature, impls can rename them
2016-12-13 16:36:05	splitty_	Because that's what programmers do :P
2016-12-13 16:36:12	Phrohdoh	Oh I didn't realize that.
2016-12-13 16:36:22	rkruppe	but just calling them _ is bad for documentation, use _foo
2016-12-13 16:36:37	splitty_	Oh, that works? Interesting
2016-12-13 16:36:37	◥	martinium (martinium@moz-fce.kt4.181.107.IP) has joined #rust
2016-12-13 16:36:45	Phrohdoh	Very cool, thanks!
2016-12-13 16:36:46	rkruppe	or just foo and slap an #[allow] on it
2016-12-13 16:36:51	Phrohdoh	Rust gets better and better.
2016-12-13 16:37:30	roc	why isn't PhantomData Send+Sync?
2016-12-13 16:37:52	⚡	bc is now known as bc|bbl
2016-12-13 16:38:03	Phrohdoh	rkruppe: As a consumer which would you prefer? _foo or foo and #[allow]?
2016-12-13 16:38:08	Phrohdoh	I know it doesn't _really_ matter.
2016-12-13 16:38:27	rkruppe	I don't see the allow in the rustdoc, but I see the _foos
2016-12-13 16:38:31	splitty_	_foo feels cleaner and I think the intent is clear enough
2016-12-13 16:38:39	◥	saml_ (saml@moz-rkfmct.res.rr.com) has joined #rust
2016-12-13 16:38:41	Phrohdoh	Great, thanks again.
2016-12-13 16:38:54	rkruppe	splitty_: do you have ana acceleration structure yet?
2016-12-13 16:39:09	splitty_	Acceleration? Do I need that?
2016-12-13 16:40:13	rkruppe	for 4 primitives you don't
2016-12-13 16:40:22	rkruppe	otherwise, very much yes
2016-12-13 16:40:28	◥	joone (joone@moz-8cd.7m2.55.192.IP) has joined #rust
2016-12-13 16:40:45	◥	arBmind (Andreas@moz-gdervr.dyn.telefonica.de) has joined #rust
2016-12-13 16:41:01	◣	tobz (textual@moz-p5lcp1.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-13 16:41:18	◥	rschiffl1n (randy@moz-ddf6l4.lv.cox.net) has joined #rust
2016-12-13 16:41:36	rkruppe	I'm asking because building good acceleration structures is a bit involved, and, let's be honest, not as sexy (= translating to nicer renders)
2016-12-13 16:42:13	rkruppe	I have a SAH based BVH builder, reasonably good, reasonably parallelized, and I wanted to put it up on crates.io
2016-12-13 16:42:43	rkruppe	would be nice to know if it would be of use to anyone
2016-12-13 16:42:58	rkruppe	it's primitive-agnostic, only needs a bounding box
2016-12-13 16:43:05	splitty_	Sounds interesting
2016-12-13 16:43:23	splitty_	I was actually looking at https://github.com/svenstaro/bvh earlier
2016-12-13 16:43:37	◣	kazagistar (Adium@moz-br6.b81.207.205.IP) has quit (Quit: Leaving.)
2016-12-13 16:43:38	rkruppe	okay I'll ping you when I polished and published it
2016-12-13 16:43:44	rkruppe	unless I forget
2016-12-13 16:43:51	splitty_	Nice ^
2016-12-13 16:43:57	◥	mchang_ (mchang@moz-786mcj.res.rr.com) has joined #rust
2016-12-13 16:44:11	◥	wallacoloo___ (colin@moz-uilj4i.tukw.qwest.net) has joined #rust
2016-12-13 16:44:13	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2016-12-13 16:44:29	◥	tobz (textual@moz-p5lcp1.fios.verizon.net) has joined #rust
2016-12-13 16:44:34	Phrohdoh	These default/"provided" methods have cleaned up my code quite a bit :-)
2016-12-13 16:44:45	rkruppe	oh neat that one has a SAH builder as we
2016-12-13 16:44:50	rkruppe	as well
2016-12-13 16:45:10	⚡	bholley is now known as bholley_away
2016-12-13 16:45:12	bluss	roc: hi, I think your question wasn't addressed
2016-12-13 16:45:21	◣	rschiffl1n (randy@moz-ddf6l4.lv.cox.net) has quit (Ping timeout: 121 seconds)
2016-12-13 16:45:27	roc	hi
2016-12-13 16:45:30	bluss	roc: PhantomData<T> is Send + Sync if T is
2016-12-13 16:45:38	roc	sure but what if T isn't
2016-12-13 16:45:54	bluss	PhantomData's role is to act as if T exists in the struct
2016-12-13 16:46:04	bluss	so it's important that it preserves that if T isn't
2016-12-13 16:46:09	◣	mchang_ (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2016-12-13 16:46:09	bluss	that's part of how it works
2016-12-13 16:46:13	roc	mmm ok
2016-12-13 16:46:23	◥	chao-tic (chao@moz-258.4aj.101.218.IP) has joined #rust
2016-12-13 16:46:41	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-13 16:47:03	splitty_	oh god
2016-12-13 16:47:06	splitty_	https://puu.sh/sOGC6/be56f12519.png
2016-12-13 16:47:10	splitty_	very helpful :D
2016-12-13 16:47:17	roc	but in the absence of other unsafe code, there's no safety issue preventing it from being Send  + Sync, right?
2016-12-13 16:47:20	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-13 16:47:27	◣	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-12-13 16:47:38	◥	mexisme2 (mexisme@moz-dlf.n66.149.118.IP) has joined #rust
2016-12-13 16:47:57	bluss	I don't think there is
2016-12-13 16:48:04	roc	ok thanks
2016-12-13 16:49:14	◥	junqed (junqed@moz-b2t.crf.70.178.IP) has joined #rust
2016-12-13 16:49:24	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:49:31	roc	I'm using PhantomData to absorb a type parameter that's only used to statically discriminate between instances of a family of types, not for any implementation safety reason
2016-12-13 16:49:58	roc	types in this family need to be Send + Sync but I don't want the discriminator to have to be
2016-12-13 16:50:23	roc	I can just create a wrapper around PhantomData and declare it Send + Sync
2016-12-13 16:50:29	Ralith	roc: does the discriminator need to be a user-supplied type or something?
2016-12-13 16:50:32	◣	mexisme (mexisme@moz-15mtqr.vf.net.nz) has quit (Ping timeout: 121 seconds)
2016-12-13 16:51:11	roc	yes, it has some user-supplied factory methods on it
2016-12-13 16:51:24	◣	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:51:34	Ralith	and it's a real type, used for real values elsewhere?
2016-12-13 16:51:48	eidolon	Is anyone familiar with futures streams and sinks? I want to take a Stream+Sink, split it to a Stream and Sink, and then read from the Stream side and selectively send on the Sink side, but Sink::send consumes the Sink.
2016-12-13 16:52:14	roc	yes
2016-12-13 16:52:27	eidolon	So I can't simply do stream.and_then(|i| sink.send(i + 4));
2016-12-13 16:52:27	Ralith	eidolon: I'm somewhat familiar with them
2016-12-13 16:52:34	◥	cp (cp@moz-in5b5l.asahi-net.or.jp) has joined #rust
2016-12-13 16:52:49	Ralith	you will indeed need to split the objects before you can usefully handle them
2016-12-13 16:53:16	◣	junqed (junqed@moz-b2t.crf.70.178.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 16:53:23	Ralith	how you do that is up to you; the easiest approach is to make separate Stream and Sink wrappers which hold an Rc to the real object
2016-12-13 16:53:38	eidolon	yes, Stream::split does that
2016-12-13 16:53:40	Ralith	(assuming there isn't already some sort of split method supplied)
2016-12-13 16:54:25	Ralith	oh, I see your real question
2016-12-13 16:55:00	Ralith	eidolon: can you do stream.filter(...).forward(sink)?
2016-12-13 16:55:17	◣	kartik (k4rtik@moz-432.r5r.16.138.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-13 16:55:24	LordAro	i'm trying to do a weird thing - turn an empty array into an iterator (then chain it to some others)
2016-12-13 16:55:27	LordAro	how can i do this?
2016-12-13 16:55:49	◣	REMqb (REMqb@moz-vvuhpd.abo.wanadoo.fr) has quit (Client exited)
2016-12-13 16:56:05	Ralith	LordAro: arrays implement IntoIterator
2016-12-13 16:56:13	Ralith	so just call into_iter() on it
2016-12-13 16:56:45	◣	FallingAlways (Ray@moz-q6r.mb0.203.159.IP) has quit (Quit: I got fired.)
2016-12-13 16:56:52	Ralith	(at least, smallish arrays do, which 'empty' certainly qualifies as)
2016-12-13 16:56:57	bluss	to be precise, &[T;N] implements IntoIterator (for N 0..33)
2016-12-13 16:57:01	◥	i-amd3 (i-amd3@moz-glc7rs.ucom.ne.jp) has joined #rust
2016-12-13 16:57:04	eidolon	Ralith: well, for something trivial, but this will get more complicated... It's a stream of incoming message + a sink of outgoing messages, and an incoming message can result in 0 or more outgoing messages
2016-12-13 16:57:04	bluss	arrays don't
2016-12-13 16:57:09	LordAro	"expected struct `std::vec::Vec`, found reference"
2016-12-13 16:57:41	LordAro	(on the first chain)
2016-12-13 16:57:56	eidolon	I need to leave, I'll be back in about 15 minutes
2016-12-13 16:57:57	&mbrubeck	an array can only give an iterator over references
2016-12-13 16:58:07	&mbrubeck	because there's IntoIterator for &[T] but not [T; N]
2016-12-13 16:58:11	Ralith	eidolon: stream.map(<compute outgoing messages>).flatten().forward(sink)
2016-12-13 16:58:25	&mbrubeck	LordAro: You might want to use https://doc.rust-lang.org/std/iter/fn.empty.html as your empty iterator
2016-12-13 16:58:34	&mbrubeck	`None` also works
2016-12-13 16:58:43	&mbrubeck	or Vec::new()
2016-12-13 16:58:43	◥	FallingAlways (Ray@moz-q6r.mb0.203.159.IP) has joined #rust
2016-12-13 16:59:45	Ralith	eidolon: flatten may be overkill if the zero or more messages are best computed synchronously; you may alternatively want to slip a call to buffer or buffer_unordered in somewhere for improved concurrency
2016-12-13 16:59:53	LordAro	none of these are resulting in there being a [] in the resultant vector of vectors
2016-12-13 17:00:12	LordAro	but they are compiling, which i guess is something
2016-12-13 17:00:16	&mbrubeck	LordAro: Oh, if you want an iterator that yields a single Vector
2016-12-13 17:00:23	Ralith	LordAro: you may have better luck if you post code and describe your desired behavior
2016-12-13 17:00:29	&mbrubeck	then you can do vec![vec![]].into_iter()
2016-12-13 17:00:39	&mbrubeck	or std::iter::once(vec![])
2016-12-13 17:00:56	&mbrubeck	or Some(Vec::new())
2016-12-13 17:01:09	LordAro	that is precisely it
2016-12-13 17:01:13	LordAro	thanks very much :)
2016-12-13 17:01:23	▷	Ralith likes the second one best
2016-12-13 17:01:43	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-13 17:01:50	◣	kzan (kzan@moz-qoo.ujr.97.32.IP) has quit (Quit: Leaving)
2016-12-13 17:04:11	◣	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2016-12-13 17:04:27	▷	LordAro too :)
2016-12-13 17:04:35	◥	hub (hub@moz-59grbl.cpe.pppoe.ca) has joined #rust
2016-12-13 17:04:38	◥	jsbruner (Instantbird@moz-5p5tkp.h4gj.q8mm.0306.2602.IP) has joined #rust
2016-12-13 17:05:05	◣	arBmind (Andreas@moz-gdervr.dyn.telefonica.de) has quit (Connection closed)
2016-12-13 17:05:11	⚡	bholley_away is now known as bholley
2016-12-13 17:05:41	◣	gingermusketeer (gingermuske@moz-5anocv.compute.amazonaws.com) has quit (Connection closed)
2016-12-13 17:05:48	◥	gingermusketeer (gingermuske@moz-nbks1n.compute.amazonaws.com) has joined #rust
2016-12-13 17:06:43	Ralith	eidolon: does that make sense?
2016-12-13 17:07:55	◥	jsgf (jsgf@moz-183.9o0.201.199.IP) has joined #rust
2016-12-13 17:08:06	◥	scrogson1 (scrogson@moz-i90639.tftc.9t39.0306.2602.IP) has joined #rust
2016-12-13 17:10:15	◥	arBmind (Andreas@moz-ec5a63.dyn.telefonica.de) has joined #rust
2016-12-13 17:10:16	◥	jsgf_ (jsgf@moz-ga0.9o0.201.199.IP) has joined #rust
2016-12-13 17:10:21	◣	hexagoxel (hexagoxel@moz-4r9qjh.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2016-12-13 17:11:00	◥	indefini (indefini@moz-4p4v25.ucom.ne.jp) has joined #rust
2016-12-13 17:11:23	◣	silven (quassel@moz-28hrbk.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2016-12-13 17:11:31	◣	tobz (textual@moz-p5lcp1.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-13 17:12:10	◣	scrogson1 (scrogson@moz-i90639.tftc.9t39.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 17:12:27	◥	Nezteb (Nezteb@moz-k63.mjc.152.216.IP) has joined #rust
2016-12-13 17:12:56	◣	Nezteb (Nezteb@moz-k63.mjc.152.216.IP) has quit (Quit: Leaving)
2016-12-13 17:13:09	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 17:13:36	◥	silven (quassel@moz-28hrbk.priv.bahnhof.se) has joined #rust
2016-12-13 17:13:46	LordAro	mbrubeck: hmm, this code works fine inside a for loop (with &Vec<String>), but if i abstract it out into a function, everything falls apart
2016-12-13 17:14:19	LordAro	"trait `std::vec::Vec<std::vec::Vec<std::string::String>>: std::iter::FromIterator<std::vec::Vec<&std::string::String>>` not satisfied"
2016-12-13 17:14:41	◣	fabiand (fabiand@moz-3o1gou.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-13 17:15:02	&mbrubeck	LordAro: Would need to see more code to figure out the fix.
2016-12-13 17:15:06	&niconii	ahh, oververbose rust errors
2016-12-13 17:15:11	Ralith	that error usually means you need to be cloning or moving somewhere that you aren't
2016-12-13 17:15:18	◣	wallacoloo___ (colin@moz-uilj4i.tukw.qwest.net) has quit (Client exited)
2016-12-13 17:15:21	◣	handyman (handyman@moz-8edbuf.subp.5lka.0645.2601.IP) has quit (Quit: )
2016-12-13 17:15:40	◣	martinium (martinium@moz-fce.kt4.181.107.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 17:15:41	&mbrubeck	Also note, since Vec and String are already pointer types of a sort, &Vec and &String are usually not very useful and can be simplified to either Vec/String or &[T]/&str
2016-12-13 17:16:49	LordAro	this is possibly the case - https://is.gd/TgVNnh 
2016-12-13 17:17:01	◥	skeet70 (skeet70@moz-m7nopk.blng.qwest.net) has joined #rust
2016-12-13 17:17:38	eidolon	Ralith: kind of. How about the possibility for an message not being the reason for an outgoing message? should I be using a mpsc here?
2016-12-13 17:17:56	◣	rkruppe (rkruppe@moz-g7v5go.dyn.telefonica.de) has quit (Quit: Bye)
2016-12-13 19:37:20	⚡	irc: disconnected from server
2016-12-13 19:37:31	◥	boon (d8v3@moz-cf64oa.eqdp.1nof.0602.2601.IP) has joined #rust
2016-12-13 19:37:31	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-13 19:37:31	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-13 19:37:31	⚡	Channel #rust: 1194 nicks (16 ops, 0 halfops, 3 voices, 1175 normals)
2016-12-13 19:37:35	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-13 19:37:39	◥	tripped (trip@moz-bblhhk.cable.mindspring.com) has joined #rust
2016-12-13 19:37:41	◥	pepper_chico (pepper_chic@moz-o68lqd.telesp.net.br) has joined #rust
2016-12-13 19:37:43	sinclair	mbrubeck: both stdio / tcp are duplex streams
2016-12-13 19:38:49	&mbrubeck	Also instead of using studio directly I would want an abstraction that allows for a TUI or other UI
2016-12-13 19:38:50	Ralith	eidolon: it might be easier to use iter::repeat and stream::iter, but I'm sure unfold can be made to work regardless
2016-12-13 19:39:05	&mbrubeck	But the basic stream routing idea seems right
2016-12-13 19:39:11	sinclair	mbrubeck: so, composing both streams is Rust is not as trivial as it should, the stream (lets call it duplex) for which there are 2 (stdio, tcp), need to share each other at some level, the question is, could you compose each duplex without taking a Arc<T> or similar on either.
2016-12-13 19:39:12	eidolon	oh... I forgot about std::iter::repeat
2016-12-13 19:39:20	Ralith	sinclair: is your abstraction layer published anywhere? it sounds interesting
2016-12-13 19:40:09	&mbrubeck	You may also want, say, separate streams per IRC channel on the terminal end
2016-12-13 19:40:52	sinclair	mbrubeck: well, possibly, but lets not get too hung up on the IRC specifics, it was just "type of application" that highlights a design problem
2016-12-13 19:41:03	&mbrubeck	sinclair: what about a pub sub setup, with all messages passing through a central router of some sort?
2016-12-13 19:41:09	◣	pcwalton (pcwalton@moz-u3dg2t.sfo1.mozilla.com) has quit (Client exited)
2016-12-13 19:41:14	sinclair	mbrubeck: yeah, i like this idea
2016-12-13 19:41:30	◥	kimundi (kimundi@moz-cu010n.ktra.e61q.57bc.2002.IP) has joined #rust
2016-12-13 19:41:51	◣	memorion (memorion@moz-ssjd3f.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2016-12-13 19:42:01	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2016-12-13 19:42:22	sinclair	mbrubeck: not to spend too much time on tokio, but what i would like is to avoid explicit "moves" / "clones" of either duplex. 
2016-12-13 19:43:09	sinclair	mbrubeck: in a pub/sub like setup, i suppose i would be ok with a cloning of the backend queue. 
2016-12-13 19:43:12	◥	memorion (memorion@moz-05nhpn.pools.vodafone-ip.de) has joined #rust
2016-12-13 19:43:49	sinclair	mbrubeck: but assume one approaches things from this standpoint, what does it ultimately mean for composability,  consider...
2016-12-13 19:44:11	sinclair	tcp -> message -> irc protocol reader -> enum message type -> stdout
2016-12-13 19:44:18	sinclair	and
2016-12-13 19:44:25	◣	nom-ent (user@moz-mng.764.42.153.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 19:44:49	sinclair	stdin -> enum message type -> irc protocol writer -> message -> tcp
2016-12-13 19:45:07	◥	jimb (user@moz-1d5sde.ptld.qwest.net) has joined #rust
2016-12-13 19:45:33	◥	aldrio (aldrio@moz-6r4.94b.143.75.IP) has joined #rust
2016-12-13 19:46:01	Sergio	Spend two days with my project no compiling after a major change...
2016-12-13 19:46:03	Sergio	And then..
2016-12-13 19:46:06	Sergio	ICE
2016-12-13 19:46:08	Sergio	:'(
2016-12-13 19:46:13	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 19:46:16	Sergio	not*
2016-12-13 19:46:26	sinclair	mbrubeck: if you introduce a pub/sub like setup, how does your rust code look?
2016-12-13 19:47:28	◣	ytain (ytain@moz-sjhfp3.1n9g.9b41.f2c0.2607.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-13 19:48:50	◥	kevinswiber (kevinswiber@moz-3gd.rbg.217.12.IP) has joined #rust
2016-12-13 19:48:56	&mbrubeck	I've only really done this sort of thing in Servo, which just had a whole lot of mpsc channels... Each task has a receiver and anyone who needs to talk to it gets a sender to do so...
2016-12-13 19:49:39	sinclair	mbrubeck: yeah, mpsc for the win for sure
2016-12-13 19:50:57	sinclair	mbrubeck: i support im just looking at design patterns in rust that don't require explicit moves / clones from the caller, but still allow for a high level of "configuration" of pipes while still remaining "sane" to read and maintain.
2016-12-13 19:51:07	sinclair	*suppose
2016-12-13 19:51:33	◥	s_kunk (s_kunk@moz-1hb0ft.rev.sfr.net) has joined #rust
2016-12-13 19:51:36	&mbrubeck	not sure what you mean by explicit moves, or why to avoid them...
2016-12-13 19:52:00	Sergio	ICE: https://paste.rs/G1G
2016-12-13 19:52:01	Sergio	:'(
2016-12-13 19:52:17	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-13 19:52:52	◣	kevinswiber (kevinswiber@moz-3gd.rbg.217.12.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 19:53:02	sinclair	mbrubeck: something along the lines of .... stdin.recv(move |line| { tcp.send(line); })
2016-12-13 19:53:14	sinclair	mbrubeck: where i have "moved" tcp
2016-12-13 19:53:28	sinclair	mbrubeck: and the inverse...
2016-12-13 19:53:49	Ralith	that wouldn't work very well, since presumably you need the tcp socket to outlive a single message
2016-12-13 19:53:49	sinclair	tcp.recv(move |line| { stdout.send(line) })
2016-12-13 19:54:10	sinclair	Ralith: its a clone
2016-12-13 19:54:25	sinclair	the cloning is implied (via a Arc<T>)
2016-12-13 19:55:04	sinclair	Ralith: read up
2016-12-13 19:55:13	&mbrubeck	In my mind that's just how you write threaded code on rust; unique ownership means you move things out clone them...
2016-12-13 19:55:15	Sergio	Is there any way to force Rust to not use MIR?
2016-12-13 19:55:20	Sergio	Or is that not an option anymore?
2016-12-13 19:55:21	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Connection closed)
2016-12-13 19:55:33	&mbrubeck	Sergio: not an option anymore
2016-12-13 19:55:38	Sergio	:'(
2016-12-13 19:55:44	Sergio	No idea what to do about this ICE.
2016-12-13 19:55:46	◥	nom-ent (user@moz-mng.764.42.153.IP) has joined #rust
2016-12-13 19:55:53	Sergio	Oh, Google.
2016-12-13 19:55:55	Ralith	Clone is always explicit, and I haven't seen any relevant TCP socket implementations that hold an Arc
2016-12-13 19:55:57	&mbrubeck	s/out/or/
2016-12-13 19:56:01	◥	ygrek_ (user@moz-8j9aeu.org.ua) has joined #rust
2016-12-13 19:56:32	&mbrubeck	Is the idea here that 'tcp' is an mpsc::Send?
2016-12-13 19:56:45	sinclair	mbrubeck: yeah, could be
2016-12-13 19:56:46	Sergio	Oh, it's been reported.
2016-12-13 19:57:03	sinclair	mbrubeck: the "mpsc::Send" would be clone
2016-12-13 19:57:29	◣	Soni (SoniEx2@moz-ehu.jdt.104.187.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 19:57:31	&mbrubeck	No need for Arc with Send, it's already cloneable... Yeah
2016-12-13 19:57:47	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-13 19:57:58	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2016-12-13 19:58:07	&mbrubeck	And you only need to clone it if you have multiple seemed on the same channel, of course
2016-12-13 19:58:17	sinclair	mbrubeck: sure, but i just wonder (is there a better way to model this without the move)
2016-12-13 19:59:14	sinclair	mbrubeck: i keep coming back to.... stdin.recv(|context, line| { let tcp = context.get("txp"); tcp.send(line); ]);
2016-12-13 19:59:20	⚡	bc|bbl is now known as bc
2016-12-13 20:00:26	sinclair	mbrubeck: its a minimal, short lived borrow, which might be a bit more "clear" as to the lifetime of the thing you would have moved otherwise. 
2016-12-13 20:00:34	&mbrubeck	If you used scoped threads (from e.g. crossbeam) you could use borrow closures instead of `move` closures. But I don't see any advantage when the thing you're moving is just a Sender.  What is it about this move that is causing problems?
2016-12-13 20:01:18	◣	roc (chatzilla@moz-5i3r2r.nd3p.kiip.e780.2400.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:02:03	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:02:03	◣	Tordek (tordek@moz-49ultj.blinkenshell.org) has quit (Ping timeout: 121 seconds)
2016-12-13 20:02:05	◥	Tordek (tordek@moz-49ultj.blinkenshell.org) has joined #rust
2016-12-13 20:02:28	◣	russ_za (smuxi@moz-nnjjgv.voxdsl.co.za) has quit (Ping timeout: 121 seconds)
2016-12-13 20:03:25	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Connection closed)
2016-12-13 20:03:25	sinclair	mbrubeck: generally, no problems, but there is some verbosity in Rust into what it really means to have moved a value. the lifetime of the thing you have moved, and the fact in this scenario, you have two of them (2 x Arc<T>, 2 x mpsc::Sends), which while works, isn't obvious what that means in the greater scheme of things, especially if you require more duplex like streams to other things...
2016-12-13 20:03:27	sinclair	...(say, the file system) 
2016-12-13 20:03:47	◣	nedp (nedp@moz-n3g.6qu.167.101.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:03:50	◥	cmyr (cmyr@moz-to3mp4.158.electronicbox.net) has joined #rust
2016-12-13 20:04:32	&mbrubeck	clone_army! from https://crates.io/crates/closet can help reduce the boilerplate in code passing around a lot of Arcs and Sends and similar types
2016-12-13 20:04:45	◥	russ_za (smuxi@moz-o7fd6m.voxdsl.co.za) has joined #rust
2016-12-13 20:05:17	sinclair	mbrubeck: in the simplest case, you have to duplex streams, (one to stdio, one to tcp), but what about when you have many tcp connections, or other streams that you need to orchestrate , things get unwieldy (even for the simplest case)
2016-12-13 20:05:23	◥	hansaplast (hansaplast@moz-hk2rf2.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-13 20:05:51	◣	pepper_chico (pepper_chic@moz-o68lqd.telesp.net.br) has quit (Quit: WeeChat 1.6)
2016-12-13 20:06:20	◥	pengowen (Mibbit@moz-lqv5il.phnx.qwest.net) has joined #rust
2016-12-13 20:06:43	◥	nZac (nZac@moz-0knq4t.midco.net) has joined #rust
2016-12-13 20:06:56	◣	Yann (yann@moz-i2v.sjc.226.195.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:07:18	◣	pengowen (Mibbit@moz-lqv5il.phnx.qwest.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-13 20:07:43	sinclair	mbrubeck: ah, well, its a problem worth thinking about, thanks for the chat tho :D
2016-12-13 20:08:58	Ralith	sinclair: where can I read about your tokio competitor?
2016-12-13 20:09:17	&mbrubeck	sinclair: yeah... here's some typical channel-wrangling from Servo https://github.com/servo/servo/blob/master/components/constellation/pipeline.rs#L422-L441
2016-12-13 20:09:21	sinclair	Ralith: its not a competitor, programming is not a competition.
2016-12-13 20:09:37	sinclair	mbrubeck: nice, ill have a read :)
2016-12-13 20:09:39	&mbrubeck	(it uses the old chan/port terminology instead of the new send/recv)
2016-12-13 20:09:56	Ralith	sinclair: where can I read about your tokio not-competitor?
2016-12-13 20:10:20	◣	hansaplast (hansaplast@moz-hk2rf2.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:10:30	◣	cscorley (cscorley@moz-fp90ai.WISOLT3.epbfi.com) has quit (Quit: Leaving)
2016-12-13 20:11:19	◣	kushal (kdas@moz-6qtks2.adsl.inet-telecom.org) has quit (Ping timeout: 121 seconds)
2016-12-13 20:11:26	&Manishearth	steveklabnik: btw, NEVER try to implement a lockfree ringbuffer
2016-12-13 20:11:28	&Manishearth	this stuff is hard
2016-12-13 20:11:37	&Manishearth	unless you are Herlihy
2016-12-13 20:11:39	&Manishearth	then implement it
2016-12-13 20:11:45	&Manishearth	you'll still be wrong
2016-12-13 20:12:27	◣	ohyllad (krl@moz-rprk58.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2016-12-13 20:12:28	◣	nom-ent (user@moz-mng.764.42.153.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-13 20:13:02	hub	isn't there a crate for that? ;-)
2016-12-13 20:13:17	@steveklabnik	Manishearth: heh
2016-12-13 20:13:27	Ralith	hub: that's one of the better reasons not to implement a hard thing, usually
2016-12-13 20:13:31	@steveklabnik	Manishearth: i was ignoring that bit for now but yeah
2016-12-13 20:13:34	&Manishearth	https://github.com/polyfractal/bounded-spsc-queue is SPSC
2016-12-13 20:13:40	&Manishearth	steveklabnik: what exactly do you need?
2016-12-13 20:13:42	&Manishearth	I assume a queue
2016-12-13 20:13:49	&Manishearth	mpmc? spsc? something else?
2016-12-13 20:13:54	&Manishearth	mpmc sounds like death and destruction
2016-12-13 20:14:02	@steveklabnik	yeah so the idea was, most interrupts would put an event in a queue
2016-12-13 20:14:13	@steveklabnik	so spsc even
2016-12-13 20:14:27	&Manishearth	can you have two interrupts happening in parallel?
2016-12-13 20:14:33	@steveklabnik	no
2016-12-13 20:14:33	&Manishearth	spsc is saner
2016-12-13 20:14:39	Ralith	sinclair: I'm quite interested in seeing what other solutions to IO abstractions people have came up with
2016-12-13 20:14:47	@steveklabnik	but i'm not 100% sure if that works permanently
2016-12-13 20:14:52	@steveklabnik	but the interrupt handler would disable interrupts
2016-12-13 20:14:57	@steveklabnik	and then re-enable after
2016-12-13 20:15:08	&Manishearth	steveklabnik: that sounds dodgy
2016-12-13 20:15:09	@steveklabnik	but i'm not sure if that means you don't just drop interrupts. i haven't dug into the dteails enough
2016-12-13 20:15:20	sinclair	Ralith: its a task/stream abstraction, its got nothing to do with io, please stop asking me about it.
2016-12-13 20:15:34	&Manishearth	what if a different thread triggers an interrupt while you are trying to disable them?
2016-12-13 20:15:44	@steveklabnik	well disable is one asm instruction, so
2016-12-13 20:15:51	Ralith	sinclair: I'm interested in tasks and streams too. Are you unable to share it?
2016-12-13 20:16:00	&Manishearth	steveklabnik: does it disable across cores?
2016-12-13 20:16:11	@steveklabnik	yes because my os can't even bring up a second core ;)
2016-12-13 20:16:14	&Manishearth	steveklabnik: and is there a strict happens-before relation there?
2016-12-13 20:16:17	@steveklabnik	heh, basically, i have to do more research
2016-12-13 20:16:20	@steveklabnik	i don't actuall yknow
2016-12-13 20:16:21	◣	cjhowe (cjhowe@moz-hlme8b.1cuh.qeg5.a601.2605.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-13 20:16:30	&Manishearth	I don't trust anything here
2016-12-13 20:16:39	&Manishearth	steveklabnik: what does it actually do? set a CPU-internal flag?
2016-12-13 20:16:46	&Manishearth	in the single core world I guess stuff is simpler
2016-12-13 20:16:47	&Manishearth	hm
2016-12-13 20:16:52	@steveklabnik	regardless
2016-12-13 20:16:55	&Manishearth	still don't trust it
2016-12-13 20:16:58	@steveklabnik	now is not the time for me to discuss it
2016-12-13 20:17:01	&Manishearth	heh
2016-12-13 20:17:02	&Manishearth	np
2016-12-13 20:17:04	@steveklabnik	i am skeptical  aswell
2016-12-13 20:17:07	@steveklabnik	gnight <3
2016-12-13 20:17:12	&Manishearth	lmk if you want to discuss it at any point
2016-12-13 20:17:25	@steveklabnik	+!1: :heart:
2016-12-13 20:18:14	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2016-12-13 20:18:34	◣	Lunatrius (Lunatrius@moz-v2r.12t.38.77.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:19:27	◥	eckhardt_ (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2016-12-13 20:19:52	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (A TLS packet with unexpected length was received.)
2016-12-13 20:20:14	◥	nZac (nZac@moz-0knq4t.midco.net) has joined #rust
2016-12-13 20:20:52	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-13 20:22:18	⚡	bholley is now known as bholley_away
2016-12-13 20:22:24	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:24:16	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (Ping timeout: 121 seconds)
2016-12-13 20:25:10	◥	ohyllad (krl@moz-rprk58.cust.bredbandsbolaget.se) has joined #rust
2016-12-13 20:28:26	◣	saml_ (saml@moz-rkfmct.res.rr.com) has quit (Connection closed)
2016-12-13 20:29:59	◣	mada (mariano@moz-hrb.nhi.170.181.IP) has quit (Ping timeout: 121 seconds)
2016-12-13 20:31:08	◥	plutoniix (q@moz-247.dop.192.159.IP) has joined #rust
2016-12-14 10:11:12	⚡	irc: disconnected from server
2016-12-14 10:11:28	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2016-12-14 10:11:28	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-14 10:11:28	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-14 10:11:28	⚡	Channel #rust: 1238 nicks (16 ops, 0 halfops, 3 voices, 1219 normals)
2016-12-14 10:11:32	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-14 10:12:05	◥	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has joined #rust
2016-12-14 10:12:05	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2016-12-14 10:12:09	◥	tcreeds (tcreeds@moz-r3c3au.pa08.lutu.6000.2604.IP) has joined #rust
2016-12-14 10:12:54	◥	KiChjang (KiChjang@moz-qdqrbs.28m4.nqec.0646.2601.IP) has joined #rust
2016-12-14 10:12:55	◣	bc (bc@moz-l5n.tlf.131.67.IP) has quit (Quit: leaving)
2016-12-14 10:13:13	◥	jsgf (jsgf@moz-ga0.9o0.201.199.IP) has joined #rust
2016-12-14 10:15:14	⚡	botond__ is now known as botond
2016-12-14 10:15:19	◣	sp33dster (sp33der89@moz-7n69br.direct-adsl.nl) has quit (Quit: I'll be back)
2016-12-14 10:15:22	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-14 10:17:09	◥	REMqb (REMqb@moz-7sodvh.abo.wanadoo.fr) has joined #rust
2016-12-14 10:19:11	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 10:19:13	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 10:20:16	◥	ytain (ytain@moz-r1e1j4.3o3s.l2s5.f2c0.2607.IP) has joined #rust
2016-12-14 10:20:53	◥	sgfltx (sgflt@moz-b7jm2s.dip0.t-ipconnect.de) has joined #rust
2016-12-14 10:21:15	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2016-12-14 10:22:59	◥	xor (xor@moz-5lgrnv.rev.vodafone.pt) has joined #rust
2016-12-14 10:23:03	◥	creationix (creationix@moz-69oa2g.cpe.cableone.net) has joined #rust
2016-12-14 10:25:57	LordAro	...how can i get the String out of my enum string?
2016-12-14 10:26:14	◥	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has joined #rust
2016-12-14 10:26:34	◣	santiago (santiago@moz-rlvtng.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2016-12-14 10:27:11	_habnabit	what's an enum string
2016-12-14 10:28:11	staticassert	LordAro:  enum Foo { Bar(String) }; if let Bar(s) = x { // access s}
2016-12-14 10:28:11	LordAro	enum foo { bar(String) }
2016-12-14 10:28:11	staticassert	You'll want to destructure the enum using a match or if let
2016-12-14 10:28:11	LordAro	staticassert: ah, thanks :)
2016-12-14 10:28:29	staticassert	Sure thing
2016-12-14 10:28:42	xor	Manishearth, You were talking yesterday about a lock-free queue, I went and read a bit about it, and I'm still not sure I understand what the specifications are. Is it a queue that if someone wants to write to an object, someone else can ask to write to the same object at the same time, and then maybe some version issues need to be taken care of? Or is it a queue that when an object is locked by someone that might stop responding, the queue can recover 
2016-12-14 10:28:42	xor	from that? Both?
2016-12-14 10:28:43	LordAro	hmm, is there no way to do it without the match or if? the enum is entirely Strings
2016-12-14 10:28:51	LordAro	(i'm really using enums incorrectly, i know)
2016-12-14 10:28:54	◥	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has joined #rust
2016-12-14 10:29:28	◣	Guest (textual@moz-02hvpk.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-14 10:30:28	◣	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has quit (Quit: Leaving)
2016-12-14 10:31:03	&Manishearth	xor: a queue is a thing that has a push and pop operation
2016-12-14 10:31:22	&Manishearth	lock free queue is one which can be used concurrently, and is implemented without locks
2016-12-14 10:31:26	&Manishearth	now, you have different kinds
2016-12-14 10:31:49	&Manishearth	you can have a queue where only one entity (thread) calls push() and only one entity calls pop()
2016-12-14 10:31:56	&Manishearth	but these two entities will do so concurrently
2016-12-14 10:32:09	&Manishearth	this is single-producer single-consumer. spsc
2016-12-14 10:32:09	SneakySnake	LordAro: Not in a safe way, I imagine
2016-12-14 10:32:10	◣	chris_ (chris@moz-mp4hjj.2b9j.4sa0.008b.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:32:15	&Manishearth	you also have multiple-producer multiple-consumer etc
2016-12-14 10:32:20	◣	Sklopi (tobias@moz-f2h84f.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-14 10:32:25	&Manishearth	in Rust Sender<T>/Receiver<T> are mpsc
2016-12-14 10:32:40	LordAro	SneakySnake: boring :p
2016-12-14 10:32:42	&Manishearth	you can have many senders (so many threads calling push) but only one thread calling pop
2016-12-14 10:32:45	◣	tav (tav@moz-3b0gib.range31-52.btcentralplus.com) has quit (Quit: Hakuna Matata!)
2016-12-14 10:32:55	◥	tav (tav@moz-3b0gib.range31-52.btcentralplus.com) has joined #rust
2016-12-14 10:33:02	◣	ludat (ludat@moz-ctb.b0j.173.190.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:33:10	&Manishearth	however, it is not lock free
2016-12-14 10:33:24	&Manishearth	generally a lock free datastructure will use only atomics
2016-12-14 10:33:28	&Manishearth	and generally it does not spin on atomics
2016-12-14 10:33:37	◥	Ketsuban (ketsuban@moz-nqhljq.abqe.tdt5.0c7d.2a02.IP) has joined #rust
2016-12-14 10:33:42	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 10:33:49	◥	Sklopi (tobias@moz-f2h84f.dip0.t-ipconnect.de) has joined #rust
2016-12-14 10:33:50	&Manishearth	well, it kind of does
2016-12-14 10:33:55	&Manishearth	but not in the usual way
2016-12-14 10:34:23	&Manishearth	it will spin on a compare-and-swap, but not spin on a "while atomic == false {}" kind of loop (which can take forever)
2016-12-14 10:34:48	◥	O01eg (o01eg@moz-11l7j2.serh.dpmm.2698.2a02.IP) has joined #rust
2016-12-14 10:35:08	&Manishearth	CAS spins don't take long since you can't "lock" the value, your CAS will go through when other folks' CAS goes through, and CAS can't take infinitely long to occur
2016-12-14 10:35:27	&Manishearth	whereas while atomic == false {} requires you to trust that the other thread does not set atomic to false for too long
2016-12-14 10:35:51	&Manishearth	xor: back to your original question, threads can't write to the same object
2016-12-14 10:35:51	◣	Sklopi (tobias@moz-f2h84f.dip0.t-ipconnect.de) has quit (A TLS packet with unexpected length was received.)
2016-12-14 10:36:01	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-14 10:36:05	&Manishearth	threads can push(x: T) objects
2016-12-14 10:36:07	&Manishearth	and pop() -> T
2016-12-14 10:36:34	◣	TweyII (twey@moz-565.jnt.91.81.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:36:42	&Manishearth	(sometimes you have a failure mode involved, if there is a fixed capacity -- push(x: T) -> Result<(), T>, and pop() -> Result<T, ()>
2016-12-14 10:36:45	&Manishearth	)
2016-12-14 10:37:18	&Manishearth	"lock free" does not have to do with the objects contained in the queue
2016-12-14 10:37:29	&Manishearth	you can stick a mutex in the queue if you want and it won't behave differently
2016-12-14 10:37:32	◥	zyphrus (zyphrus@moz-ter.mu8.224.119.IP) has joined #rust
2016-12-14 10:37:39	&Manishearth	a lock free queue is one that is /implemented/ without locks
2016-12-14 10:37:58	◥	manjaro-kde5 (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2016-12-14 10:38:38	xor	Manishearth, Seems much clearer now. ^_^
2016-12-14 10:38:50	◥	tobz (textual@moz-qpj.f2m.111.18.IP) has joined #rust
2016-12-14 10:39:18	◥	bc (bc@moz-l5n.tlf.131.67.IP) has joined #rust
2016-12-14 10:39:25	xor	I probably shouldn't have added that smiley face at the end, it might seem to imply sarcasm, it is actually much clearer. Thanks.
2016-12-14 10:40:09	&Manishearth	heh
2016-12-14 10:40:19	&Manishearth	xor: there's a lot of literature out there on lock free datastructures
2016-12-14 10:40:21	splitty_	rkruppe, did you write your own vector implementation or did you use nalgebra or something like that for your ray tracer?
2016-12-14 10:40:37	◣	Kynes (Kynes@moz-j2us35.mit.edu) has quit (Quit: Leaving)
2016-12-14 10:40:38	◥	bamorim (bamorim@moz-gm4.232.205.186.IP) has joined #rust
2016-12-14 10:40:49	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-14 10:41:07	rkruppe	splitty_: cgmath
2016-12-14 10:41:11	◣	socumbersome (smuxi@moz-brdu7t.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2016-12-14 10:42:26	splitty_	Ah, I see. Does cgmath have any advantages over nalgebra?
2016-12-14 10:42:43	splitty_	Because I'm considering switching from my own shitty implementation to nalgeba.
2016-12-14 10:42:51	&Manishearth	though I think depending on the language "lock free" is a bit fuzzy. I've seen the term used in Java when synchronized blocks are in play
2016-12-14 10:42:58	◥	J_Arcane (J_Arcane@moz-6veheh.lntk.15po.0999.2001.IP) has joined #rust
2016-12-14 10:43:07	◣	jsbruner (Instantbird@moz-s9fm5p.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:43:29	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Client exited)
2016-12-14 10:43:33	talchas	Manishearth: that seems spectacularly wrong :P
2016-12-14 10:43:54	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2016-12-14 10:43:54	talchas	(now, "lock free" when malloc is in play is also arguable, but at least still reasonable)
2016-12-14 10:44:14	&Manishearth	talchas: idk I think the definition they use is something like "locks are okay for tiny bounded critical sections"
2016-12-14 10:44:14	◣	stephank (stephank@moz-o87p61.1hdc.4dv7.0058.2a02.IP) has quit (Quit: *Poof!*)
2016-12-14 10:44:17	&Manishearth	meh
2016-12-14 10:44:30	J_Arcane	Today's lesson: check your name ideas on crates.io before spending a week and a half writing your library ... :P
2016-12-14 10:44:45	◥	meh (meh@moz-m2c.lgf.42.151.IP) has joined #rust
2016-12-14 10:44:46	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 10:44:55	◥	stephank (stephank@moz-o87p61.1hdc.4dv7.0058.2a02.IP) has joined #rust
2016-12-14 10:44:58	&mbrubeck	In the academic literature, "lock free" is defined in terms of progress guarantees, not in terms of which synchronization primitives are used
2016-12-14 10:45:05	&Manishearth	anyway if you're allowed to use a synchronized block a ringbuffer is easy :)
2016-12-14 10:45:11	&Manishearth	ringbuffer - queue that is
2016-12-14 10:45:27	◥	junqed (junqed@moz-7c0.2s0.70.178.IP) has joined #rust
2016-12-14 10:45:40	▷	whitequark squints and writes &mut [][..]
2016-12-14 10:45:41	&Manishearth	mbrubeck: so basically bounded-execution time critical sections?
2016-12-14 10:45:59	&Manishearth	it's the same situation with CAS spins really
2016-12-14 10:46:05	&Manishearth	you're still spinning
2016-12-14 10:46:21	◥	socumbersome (smuxi@moz-r0ea1c.supernova.orange.pl) has joined #rust
2016-12-14 10:46:22	&Manishearth	but you *know* you have a bound related to the number of active threads on how long you will spin
2016-12-14 10:46:29	talchas	mbrubeck: hmm, that makes sense certainly, but also seems like it would still allow all the most obvious constructs to the point that the terminology has no meaning
2016-12-14 10:46:42	&Manishearth	welcome to academia :p
2016-12-14 10:46:44	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2016-12-14 10:46:45	talchas	(if you have a fair Mutex)
2016-12-14 10:46:46	◥	ygrek_ (user@moz-8j9aeu.org.ua) has joined #rust
2016-12-14 10:46:47	talchas	yeah yeah :P
2016-12-14 10:48:13	◥	jimb (user@moz-cg6gtn.or.comcast.net) has joined #rust
2016-12-14 10:48:19	◣	dark-knight (dark-knight@moz-fg858v.dynamic.surfer.at) has quit (Ping timeout: 121 seconds)
2016-12-14 10:49:07	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Quit: Leaving)
2016-12-14 10:49:11	◥	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has joined #rust
2016-12-14 10:49:44	◣	Ameo (casey@moz-5r2.1ic.228.152.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:50:07	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Quit: Leaving)
2016-12-14 10:50:08	◥	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has joined #rust
2016-12-14 10:50:11	&mbrubeck	I think the progress guarantees are phrased in a way that's supposed to rule out mutex-style locks; for example if the scheduler suspends one thread in a lock-free program, it shouldn't prevent any other thread from running. This isn't true if the suspended thread might hold a mutual exclusion lock.
2016-12-14 10:50:36	talchas	ah
2016-12-14 10:51:02	talchas	yeah, I wasn't thinking about it like that, and that would make sense
2016-12-14 10:53:50	xor	Are there any specifications to where the memory for the queue is? Is it in one thread, is it shared across multiple threads?
2016-12-14 10:53:52	⚡	iSexy is now known as dpyro
2016-12-14 10:54:08	◥	ca1ek (ca1ek@moz-9d1mn7.internetia.net.pl) has joined #rust
2016-12-14 10:54:20	◥	asteriskServes (asteriskSer@moz-ggo.mlv.69.184.IP) has joined #rust
2016-12-14 10:54:27	◥	jethroft (jethro@moz-kot7v5.hfc.comcastbusiness.net) has joined #rust
2016-12-14 10:54:39	sfackler	all threads look at the same view of memory
2016-12-14 10:54:48	jethroft	I'm using syntex and build scripts for some custom #[derive()] attributes
2016-12-14 10:54:56	◥	zeryx (zeryx@moz-6k5tsq.ns.bellaliant.net) has joined #rust
2016-12-14 10:54:58	⚡	zeryx is now known as zeryx_
2016-12-14 10:55:00	jethroft	can I make syntex expand regular macros before doing the derives?
2016-12-14 10:56:02	◣	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 10:56:03	◥	Guest (textual@moz-02hvpk.ca.comcast.net) has joined #rust
2016-12-14 10:56:20	◥	theJPster (theJPster@moz-789mbo.cable.virginm.net) has joined #rust
2016-12-14 10:56:32	xor	There was an argument yesterday about the reliability of using atomic operations on multiple core systems. If the queue is in a single thread, why wouldn't the atomic operations work?
2016-12-14 10:56:53	◣	O01eg (o01eg@moz-11l7j2.serh.dpmm.2698.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:56:57	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-14 10:57:21	◣	kcking (Mibbit@moz-a9iro8.ma.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-14 10:57:57	◥	hansaplast (hansaplast@moz-bm8ens.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 10:58:07	◥	dark-knight (dark-knight@moz-blc4cs.dynamic.surfer.at) has joined #rust
2016-12-14 10:58:07	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2016-12-14 10:58:24	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2016-12-14 10:58:35	◣	asteriskServes (asteriskSer@moz-ggo.mlv.69.184.IP) has quit (Connection closed)
2016-12-14 10:58:55	sfackler	I didn't see that discussion, but a thing that is only accessed by a single thread doesn't need any atomic operations
2016-12-14 10:59:20	◣	nollidj (stu@moz-9ej.dhh.166.205.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 10:59:21	◥	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has joined #rust
2016-12-14 10:59:39	sfackler	Rc is equivalent to Arc for example, but doesn't use atomics in its implementation since it can only be used on one thread
2016-12-14 11:00:08	whitequark	sfackler: interestingly that's not necessarily true on all targets
2016-12-14 11:00:13	◣	maikklein (Mibbit@moz-376j9u.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-14 11:00:18	whitequark	actually, scratch that, it's just not true
2016-12-14 11:00:18	xor	sfackler, The queue is in a single thread, in it's memory. That queue is accessed by several other threads. However if the operations can be made atomic on the thread hosting the queue, why wouldn't they work?
2016-12-14 11:00:25	whitequark	two words: signal handlers
2016-12-14 11:00:39	@steveklabnik	whitequark: i've been wondering about this kind of thing for interrupts
2016-12-14 11:00:45	@steveklabnik	need to read more 
2016-12-14 11:00:53	sfackler	oh sure async signal safety is a whole other issue
2016-12-14 11:01:11	sfackler	xor: if the queue is accessed by multiple threads, how is it in a single thread?
2016-12-14 11:01:18	◥	tim_____ (tim_____@moz-qn9nfd.dip0.t-ipconnect.de) has joined #rust
2016-12-14 11:01:41	whitequark	steveklabnik: so if you have a static mut LARGE_STRUCT (or an Rc shared with a signal handler, which isn't any different here) then you cannot update it atomically
2016-12-14 11:01:45	◣	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 11:01:49	◥	Ameo (casey@moz-bll.un9.123.206.IP) has joined #rust
2016-12-14 11:01:55	◥	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has joined #rust
2016-12-14 11:01:55	talchas	whitequark: yeah, rust just ignores signal handlers in terms of safety
2016-12-14 11:02:03	◣	ville (ville@moz-873s3p.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2016-12-14 11:02:07	talchas	"it's all unsafe, figure it out yourself"
2016-12-14 11:02:12	sfackler	since you are abitrarily screwed in a signal handler
2016-12-14 11:02:12	◣	rakm (rakm@moz-prc.jsh.115.17.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 11:02:14	whitequark	steveklabnik: on some platforms, it's even worse, because very *small* things, like a u8, also can't be shared
2016-12-14 11:02:15	sfackler	allocation is unsafe, etc
2016-12-14 11:02:33	whitequark	in case you don't have byte writes and have to emulate that with an RMW
2016-12-14 11:02:39	whitequark	this I have learned yesterday to my sheer horror
2016-12-14 11:03:06	@steveklabnik	whitequark: yeah so in very broad terms, i was thinking about interrupts dumping stuff into a queue, and having a kernel thread that processes that queue
2016-12-14 11:03:11	◣	sgfltx (sgflt@moz-b7jm2s.dip0.t-ipconnect.de) has quit (Client exited)
2016-12-14 11:03:13	@steveklabnik	but i'm not sure that works
2016-12-14 11:03:28	whitequark	steveklabnik: that's how interrupts are mostly implemented in fact
2016-12-14 11:03:38	@steveklabnik	ah sweet, then i'm not totally off-base
2016-12-14 11:03:51	◣	hansaplast (hansaplast@moz-bm8ens.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2016-12-14 11:03:52	@steveklabnik	all the unix-y stuff i've seen seems to actually do all the processing in the interrupt handler
2016-12-14 11:03:57	whitequark	Windows (DPC) and Linux (threaded interrupt handlers)
2016-12-14 11:03:58	◥	hansaplast (hansaplast@moz-06rkjo.cust.swisscom.ch) has joined #rust
2016-12-14 11:04:04	whitequark	and softirqs
2016-12-14 11:04:07	◥	ville (ville@moz-pep7ip.bb.dnainternet.fi) has joined #rust
2016-12-14 11:04:17	whitequark	so you usually have a "hard" part of the IRQ, that does the absolute time critical stuff
2016-12-14 11:04:19	xor	sfackler, I'm thinking the queue content is in a single thread. Unless... is this queue in some shared memory space with no thread specific to it?
2016-12-14 11:04:38	talchas	steveklabnik: yeah, either you have to disable irqs while removing stuff from the queue, or you have to do something tricky
2016-12-14 11:04:40	whitequark	steveklabnik: let's say you are writing a sound card driver, then the hard part of the IRQ will swap the buffer halves
2016-12-14 11:04:51	jethroft	dtolnay: erickt: is there a syntex channel for questions?
2016-12-14 11:04:54	talchas	but "removing stuff from the queue" can be after all the processing is done
2016-12-14 11:05:06	▷	steveklabnik nods
2016-12-14 11:05:08	whitequark	steveklabnik: and that has bounded latency, O(1) in fact, which is highly desirable
2016-12-14 11:05:08	talchas	(in the most obvious no-cleverness implementation)
2016-12-14 11:05:17	&erickt	jethroft: try #serde
2016-12-14 11:05:22	@steveklabnik	this and reading how to implement context switching are my two big things to learn more about
2016-12-14 11:05:25	whitequark	steveklabnik: stuff like notifying processes to get more data from them can be done later in a thread
2016-12-14 11:05:28	whitequark	pfff
2016-12-14 11:05:31	@steveklabnik	but this is getting a bit far afield from rust, hehe
2016-12-14 11:05:32	whitequark	steveklabnik: have you seen libfringe btw?
2016-12-14 11:05:41	◥	petson__ (petson@moz-0vl6te.dyn.telefonica.de) has joined #rust
2016-12-14 11:05:44	@steveklabnik	yeah, i am psyched about it
2016-12-14 11:05:48	whitequark	steveklabnik: https://crates.io/crates/fringe using this on our softcpu right now
2016-12-14 11:05:51	whitequark	ah
2016-12-14 11:05:59	sfackler	xor: again, all threads in a process see the exact same view of memory (other than thread local data I guess). The more important thing to think about is if the data is accessed by multiple threads or a single thread.
2016-12-14 11:06:08	◥	alx741 (alx741@moz-g95.8va.152.190.IP) has joined #rust
2016-12-14 11:06:23	@steveklabnik	i am just a bit too much of a noob, i understand the high-levels of this but since i haven't implemented it yet, hitting some small roadblocks. maybe i'll ping you sometime
2016-12-14 11:06:31	whitequark	steveklabnik: sure go ahead
2016-12-14 11:06:38	talchas	sfackler: strictly speaking they see the same thread local data, it's just that they each have a register pointing to different areas
2016-12-14 11:06:38	@steveklabnik	<3
2016-12-14 11:06:55	sfackler	oh right yeah
2016-12-14 11:07:07	xor	sfackler, I see.
2016-12-14 11:07:17	◣	jrmuizel (jrmuizel@moz-cdl1g8.3t38.sij7.f0c8.2607.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-14 11:07:41	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2016-12-14 11:08:37	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-14 11:08:54	◣	veer66 (vee@moz-877hcc.asianet.co.th) has quit (Ping timeout: 121 seconds)
2016-12-14 11:08:56	◣	hansaplast (hansaplast@moz-06rkjo.cust.swisscom.ch) has quit (Connection closed)
2016-12-14 11:09:09	tim_____	when i want to represent a null pointer to a "*const _some_struct" or in C "const struct _some_struct *deps;" in a static allocated struct. ptr::null() doesnt work because it's no const.
2016-12-14 11:09:22	◥	hansaplast (hansaplast@moz-bm8ens.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 11:09:31	sfackler	"0 as *const _some_struct" should wokr
2016-12-14 11:09:35	◥	Lynolix (Lynolix@moz-m9qs1g.tpgi.com.au) has joined #rust
2016-12-14 11:10:17	◥	pengowen (Mibbit@moz-lqv5il.phnx.qwest.net) has joined #rust
2016-12-14 11:10:36	◥	O01eg (o01eg@moz-e1cpqh.up2f.dpmm.2698.2a02.IP) has joined #rust
2016-12-14 11:10:44	◥	hansapla_ (hansaplast@moz-c0ftmc.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 11:11:52	◥	mexisme2 (mexisme@moz-i5v.49e.149.118.IP) has joined #rust
2016-12-14 11:11:53	Trangar	https://doc.rust-lang.org/std/ptr/fn.null.html is const, isn't it?
2016-12-14 11:11:59	◥	bereddy (bereddy@moz-2e6qc0.fios.verizon.net) has joined #rust
2016-12-14 11:12:15	sfackler	Trangar: only on nightlies though
2016-12-14 11:12:19	Trangar	Ah
2016-12-14 11:12:29	sfackler	const fn isn't stable yet
2016-12-14 11:12:39	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Ping timeout: 121 seconds)
2016-12-14 11:12:42	tim_____	sfackler: thanks =)
2016-12-14 11:12:45	talchas	why isn't that in the sig in nightly's docs?
2016-12-14 11:12:52	talchas	I swear it used to be
2016-12-14 11:13:24	◣	hansaplast (hansaplast@moz-bm8ens.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 11:14:11	◣	mexisme (mexisme@moz-15mtqr.vf.net.nz) has quit (Ping timeout: 121 seconds)
2016-12-14 11:14:15	bluss	yes
2016-12-14 11:14:41	◣	jethroft (jethro@moz-kot7v5.hfc.comcastbusiness.net) has quit (Connection closed)
2016-12-14 11:15:48	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-14 11:16:59	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2016-12-14 11:18:21	tim_____	what are the possibilities to represent a c short in rust and why libc has no c_short type? the length of the type depends, right?
2016-12-14 11:18:29	◥	dogamak (dogamak@moz-qsn68r.dhcp.inet.fi) has joined #rust
2016-12-14 11:18:35	◥	nZac (nZac@moz-0knq4t.midco.net) has joined #rust
2016-12-14 11:18:37	dogamak	Hello
2016-12-14 11:19:15	&mbrubeck	tim_____: https://doc.rust-lang.org/libc/x86_64-unknown-linux-gnu/libc/type.c_short.html
2016-12-14 11:19:16	◥	daschl (daschl@moz-kvc.ipu.178.62.IP) has joined #rust
2016-12-14 11:19:29	&mbrubeck	also https://doc.rust-lang.org/std/os/raw/type.c_short.html
2016-12-14 11:19:33	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 11:19:43	&mbrubeck	(both aliases should always point to the same type, so it doesn't matter which you use)
2016-12-14 11:19:47	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2016-12-14 11:20:19	◥	m-n (user@moz-pbpr3a.il.comcast.net) has joined #rust
2016-12-14 11:20:36	◥	woboats (lee@moz-8rajde.ca.comcast.net) has joined #rust
2016-12-14 11:20:37	tim_____	mbrubeck: thanks!, libc defines c_short - seems that i had an issue with racer
2016-12-14 11:20:37	dogamak	Is it possible to make a Service whose Response varies depending on the Request type with tokio 
2016-12-14 11:20:48	dogamak	On call-to-call basis
2016-12-14 11:21:15	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 11:21:20	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-14 11:21:27	◣	alva_ (alva@moz-ost.dlu.172.163.IP) has quit (Quit: WeeChat 1.4)
2016-12-14 11:21:36	◥	asteriskServes (asteriskSer@moz-ggo.mlv.69.184.IP) has joined #rust
2016-12-14 11:21:55	&mbrubeck	dogamak: I think since Service::Request is an associated type, a given type can only impl can only impl Service with a single Request type
2016-12-14 11:22:01	◥	zelda (Mibbit@moz-1egt8c.dsl.as9105.com) has joined #rust
2016-12-14 11:22:04	◥	alva (alva@moz-ost.dlu.172.163.IP) has joined #rust
2016-12-14 11:22:36	xor	mbrubeck, Isn't short platform dependent?
2016-12-14 11:22:36	◥	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has joined #rust
2016-12-14 11:22:36	dogamak	mbrubeck: Hmm, so i thought too
2016-12-14 11:22:36	carllerche	dogamak: You probably will have better luck in Gitter: https://gitter.im/tokio-rs/tokio
2016-12-14 11:22:36	&mbrubeck	xor: Right, but on any platform, `std::os::raw::c_short` and `libc::c_short` are the same type
2016-12-14 11:22:39	carllerche	dogamak: also, `Request` is generic :P
2016-12-14 11:22:53	zelda	How would I write a struct that has a field that implements Iterator?
2016-12-14 11:23:29	_habnabit	dogamak, perhaps what you want is a root service that can issue other services
2016-12-14 11:23:29	&mbrubeck	dogamak: I think this might be a case where "associated type constructors" would help: https://internals.rust-lang.org/t/blog-post-series-alternative-type-constructors-and-hkt/4300
2016-12-14 11:23:29	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-14 11:23:43	&mbrubeck	(it's a possible feature for a future version of Rust)
2016-12-14 11:23:43	zelda	Iterator where item= <sometype>
2016-12-14 11:23:43	xor	mbrubeck, I see.
2016-12-14 11:23:43	◥	scrogson1 (scrogson@moz-i90639.tftc.9t39.0306.2602.IP) has joined #rust
2016-12-14 11:23:43	◥	chris_ (chris@moz-n3a0dk.nj.comcast.net) has joined #rust
2016-12-14 11:23:43	Arnavion	zelda: Do you know what is the type that implements Iterator or do you want it to be generic?
2016-12-14 11:24:18	◥	tav_ (tav@moz-3b0gib.range31-52.btcentralplus.com) has joined #rust
2016-12-14 11:24:18	dogamak	carllerche, _habnabit, mbrubeck: Thanks, i will look in to these
2016-12-14 11:24:18	zelda	Arnavion: generic
2016-12-14 11:24:34	◣	tcreeds (tcreeds@moz-r3c3au.pa08.lutu.6000.2604.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 11:24:48	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:26:51	◥	niconii (nicole@moz-o2ja53.midco.net) has joined #rust
2016-12-14 11:26:51	⚡	Mode #rust [+ao niconii niconii] by ChanServ
2016-12-14 11:26:51	◣	tav (tav@moz-3b0gib.range31-52.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2016-12-14 11:26:51	⚡	tav_ is now known as tav
2016-12-14 11:26:51	Arnavion	zelda: Then either borrow it as a reference   field: &Iterator   or own it as a boxed trait object   field: Box<Iterator>   or be generic on it   struct Foo<I> where I: Iterator { field: I; }
2016-12-14 11:26:51	zelda	something like this:  https://is.gd/jAKEK3
2016-12-14 11:26:51	Arnavion	(Apply Item = ... as necessary)
2016-12-14 11:26:51	zelda	wait
2016-12-14 11:26:51	zelda	oh
2016-12-14 11:26:51	◣	Guest (textual@moz-02hvpk.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-14 11:26:51	◣	brson (brson@moz-g6c.7dk.58.172.IP) has quit (Quit: leaving)
2016-12-14 11:26:51	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Quit: WeeChat 1.5)
2016-12-14 11:26:51	◣	Guest21 (textual@moz-t64.lvo.101.155.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 11:26:51	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2016-12-14 11:27:05	zelda	Arnavion: is this ok? https://is.gd/uiZ6pl
2016-12-14 11:27:06	◣	manjaro-kde5 (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2016-12-14 11:27:08	KiChjang	does calling drop early break some guarantees that rustc gives to LLVM?
2016-12-14 11:27:28	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:27:38	_habnabit	KiChjang, by 'drop' do you mean Drop::drop?
2016-12-14 11:27:50	KiChjang	both mem::drop and Drop::drop
2016-12-14 11:27:52	Arnavion	zelda: If you don't want to own the iterator, sure
2016-12-14 11:28:06	&niconii	KiChjang: mem::drop is just an empty function that takes something by value
2016-12-14 11:28:14	_habnabit	KiChjang, well, those do different things, but i would certainly never call Drop::drop directly
2016-12-14 11:28:15	◣	mattwoodyard__ (Mibbit@moz-60q9g9.aoa.twosigma.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-14 11:28:18	rkruppe	KiChjang: you can't call Drop::drop manually
2016-12-14 11:28:20	&mbrubeck	KiChjang: `std::mem::drop` is just a regular function
2016-12-14 11:28:23	zelda	Arnavion: why might I want to?
2016-12-14 11:28:33	&mbrubeck	It's no different from calling any other function that takes an argument by value and doesn't return it
2016-12-14 11:29:00	KiChjang	ok, so what is special about of Drop::drop that makes it not cool to call?
2016-12-14 11:29:04	Arnavion	zelda: Whether you own or borrow something depends on what you design your structs for
2016-12-14 11:29:15	rkruppe	the compiler special cases it
2016-12-14 11:29:29	zelda	oh ok
2016-12-14 11:29:38	whitequark	KiChjang: it's Drop::drop(&mut self). imagine you could call it. then you could call it twice.
2016-12-14 11:29:46	◣	xor (xor@moz-5lgrnv.rev.vodafone.pt) has quit (Quit: Leaving)
2016-12-14 11:29:47	whitequark	that would violate the assumptions of drop implementations
2016-12-14 11:30:03	KiChjang	ah ok, so it does violate the contract from rustc to llvm
2016-12-14 11:30:09	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:30:11	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:30:14	whitequark	no
2016-12-14 11:30:21	rkruppe	it violates a contract period
2016-12-14 11:30:34	rkruppe	nothing llvm specific
2016-12-14 11:30:34	whitequark	think of what drop could be used for: e.g. freeing some allocated raw pointer
2016-12-14 11:30:49	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (Quit: Leaving)
2016-12-14 11:30:54	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:30:59	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:31:07	whitequark	if you could call drop twice then all drop implementations that free a pointer would have to guard from double free conditions
2016-12-14 11:31:16	whitequark	this is wasteful and error-prone
2016-12-14 11:31:31	whitequark	which is why drop's contract includes the fact that it can't be called directly, and why compiler enforces it
2016-12-14 11:31:33	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2016-12-14 11:31:42	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:31:46	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:31:53	◣	dark-knight (dark-knight@moz-blc4cs.dynamic.surfer.at) has quit (Quit: Leaving.)
2016-12-14 11:32:05	&mbrubeck	Instead of compiler enforcement, could it be `unsafe fn drop(&mut self);`?
2016-12-14 11:32:25	&mbrubeck	especially given that we have the unsafe https://doc.rust-lang.org/std/ptr/fn.drop_in_place.html
2016-12-14 11:32:30	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:32:36	tim_____	is there a way to get the size of an struct std::mem::size_of::<fooo>() statically? just with the lazy_static crate?
2016-12-14 11:32:36	rkruppe	it could from a soundness perspective but that"s pointless
2016-12-14 11:32:39	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:33:13	◥	jsbruner (Instantbird@moz-9d77cu.h4gj.q8mm.0306.2602.IP) has joined #rust
2016-12-14 11:33:18	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:33:19	◣	Jackneill (Jackneill@moz-tpevc5.pool.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-14 11:33:22	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:33:30	pengowen	is there a nice way of telling whether an enum value is of a certain variant, without doing `if let Foo::Bar(_) = x { true } else { false }`
2016-12-14 11:33:56	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 11:33:58	◣	orks (orks@moz-hdm.ee2.85.93.IP) has quit (Connection closed)
2016-12-14 11:34:01	◣	iiddnn__ (iacopodeeno@moz-fompeo.retail.telecomitalia.it) has quit (Client exited)
2016-12-14 11:34:03	whitequark	pengowen: nope
2016-12-14 11:34:06	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:34:07	&niconii	pengowen: nah, that's basically how you do it
2016-12-14 11:34:10	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:34:11	◥	xor (xor@moz-5lgrnv.rev.vodafone.pt) has joined #rust
2016-12-14 11:34:27	◥	orks (orks@moz-hdm.ee2.85.93.IP) has joined #rust
2016-12-14 11:34:32	whitequark	I wonder why size_of isn't a const fn
2016-12-14 11:34:37	◥	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has joined #rust
2016-12-14 11:34:37	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2016-12-14 11:34:41	&niconii	pengowen: you could make a macro for it if you wanted to, but otherwise you need `if let`/`match`
2016-12-14 11:34:45	whitequark	https://github.com/rust-lang/rfcs/issues/1144
2016-12-14 11:34:46	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2016-12-14 11:34:54	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:35:22	&mbrubeck	tim_____: No, I don't think it's possible currently. https://github.com/rust-lang/rfcs/issues/1144
2016-12-14 11:35:25	KiChjang	yeah, i was thinking why the compiler has to enforce it
2016-12-14 11:35:26	◣	chris_ (chris@moz-n3a0dk.nj.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 11:35:30	&mbrubeck	darn, too slow
2016-12-14 11:35:31	KiChjang	instead of providing an unsafe interface
2016-12-14 11:35:43	KiChjang	in fact, why ISN'T it unsafe?
2016-12-14 11:35:47	xor	On that lock-free queue subject earlier... is there a test suit one can use to test out an implementation, to catch some common corner cases?
2016-12-14 11:36:22	whitequark	KiChjang: because drop implementations aren't inherently unsafe
2016-12-14 11:36:31	◣	zelda (Mibbit@moz-1egt8c.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-14 11:36:37	whitequark	so making the function an `unsafe fn` would be too lax towards them
2016-12-14 11:36:38	KiChjang	some people in the chinese community is actually calling Drop::drop and i had to hit it hard into their head that it's a very, very bad idea
2016-12-14 11:36:40	Trangar	Is there a difference between "".to_string() and "".to_owned() ?
2016-12-14 11:37:03	⚡	rail is now known as rail-away
2016-12-14 11:37:05	KiChjang	ohh, i see
2016-12-14 11:37:08	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 11:37:09	◣	bamorim (bamorim@moz-gm4.232.205.186.IP) has quit (Connection closed)
2016-12-14 11:37:22	&niconii	oh, yeah, i guess that'd be one disadvantage; if it was `unsafe fn`, then everything would implicitly be in an unsafe block
2016-12-14 11:37:25	KiChjang	would it make more sense to make only calling it unsafe?
2016-12-14 11:37:31	KiChjang	wait, no
2016-12-14 11:37:34	◥	Guest21 (textual@moz-t64.lvo.101.155.IP) has joined #rust
2016-12-14 11:37:35	KiChjang	that still doesn't make sense
2016-12-14 11:37:39	rkruppe	we don't have a feature for that
2016-12-14 11:37:50	KiChjang	the compiler can't distinguish between explicit calling and implicit yet
2016-12-14 11:38:39	Fenrir	Trangar, they use the same implementation these days.
2016-12-14 11:39:14	◣	jimb (user@moz-cg6gtn.or.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 11:39:27	◥	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has joined #rust
2016-12-14 11:40:25	◥	manjaro-kde5 (manjaro-kde@moz-uke9g4.r4a5.s6a3.8108.2a02.IP) has joined #rust
2016-12-14 11:41:39	◣	freezing-point (mikko@moz-so9dtr.elisa-laajakaista.fi) has quit (Connection closed)
2016-12-14 11:42:52	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2016-12-14 11:42:58	KiChjang	can it be understood easily as similar to how you should never call C++ destructors directly?
2016-12-14 11:43:44	Fenrir	what would be the motivation for directly calling a destructor in either language?
2016-12-14 11:44:23	rkruppe	Calling C++ destructors directly makes sense
2016-12-14 11:44:37	_habnabit	rkruppe, it does?
2016-12-14 11:44:49	rkruppe	To destroy objects before you deallocate their memory
2016-12-14 11:44:54	◣	xor (xor@moz-5lgrnv.rev.vodafone.pt) has quit (Quit: Leaving)
2016-12-14 11:44:56	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-14 11:45:01	rkruppe	Drop::drop is not analogous to that
2016-12-14 11:45:13	rkruppe	It doesn't destroy the fields recursively
2016-12-14 11:45:17	◣	tim_____ (tim_____@moz-qn9nfd.dip0.t-ipconnect.de) has quit (Connection closed)
2016-12-14 11:45:35	rkruppe	Calling Drop::drop directly would result in a "shallow" drop
2016-12-14 11:45:42	rkruppe	which never makes sense
2016-12-14 11:45:45	KiChjang	wait what?
2016-12-14 11:45:59	◥	tim_____ (tim_____@moz-qn9nfd.dip0.t-ipconnect.de) has joined #rust
2016-12-14 11:46:02	KiChjang	so why can't you impl Drop such that it does recursively drop its own fields?
2016-12-14 11:46:35	rkruppe	That's not what Drop is *for*
2016-12-14 11:46:45	&mbrubeck	Some relevant discussion at https://github.com/rust-lang/rust/issues/4514
2016-12-14 11:46:59	rkruppe	The compiler drops the fields after calling Drop::drop
2016-12-14 11:47:09	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2016-12-14 11:47:09	&mbrubeck	well, mostly in https://github.com/rust-lang/rust/issues/4330
2016-12-14 11:47:20	rkruppe	Drop::drop is *in addition* to that
2016-12-14 11:47:22	rkruppe	e.g
2016-12-14 11:47:37	rkruppe	if you need to free some memory or close a file
2016-12-14 11:48:58	whitequark	KiChjang: to make an analogy, an equivalent of a C++ destructor in Rust is autogenerated, and Drop::drop is inserted into it
2016-12-14 11:48:59	KiChjang	so if you actually manually drop all the fields in a Drop impl, would you also double-free them by accident?
2016-12-14 11:49:09	rkruppe	yes
2016-12-14 11:49:16	rkruppe	so don't do that :P
2016-12-14 11:49:20	KiChjang	wow, how is this not unsafe?
2016-12-14 11:49:24	bluss	KiChjang: impl Drop is more or less just the way how to attach destructor code to a type; it's not the full destructor, and there are destructors for types that don't impl Drop
2016-12-14 11:49:24	◥	ubsandroid_ (ubsan@moz-fmtvol.n7a3.v8la.fb90.2607.IP) has joined #rust
2016-12-14 11:49:31	J_Arcane	Are there plans to add rustdoc hosting to crates.io?
2016-12-14 11:49:32	sfackler	KiChjang: you can't safely drop fields in a drop impl
2016-12-14 11:49:42	KiChjang	does rustc complain if i do?
2016-12-14 11:49:47	bluss	KiChjang: it is unsafe! std::ptr::drop_in_place is an unsafe function
2016-12-14 11:49:54	sfackler	KiChjang: how would you do it?
2016-12-14 11:50:01	◣	tim_____ (tim_____@moz-qn9nfd.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-14 11:50:10	◥	Lynolix_ (Lynolix@moz-m9qs1g.tpgi.com.au) has joined #rust
2016-12-14 11:50:12	KiChjang	huh, i guess that's a good question
2016-12-14 11:50:28	sfackler	J_Arcane: docs.rs is the pseudo official version of that, and I'd imagine it could merge in with crates.io in the future?
2016-12-14 11:50:36	sfackler	KiChjang: drop only gets &mut self
2016-12-14 11:50:42	◥	insaneinside (user@moz-ck7c5n.customer.broadstripe.net) has joined #rust
2016-12-14 11:50:42	◣	Lynolix (Lynolix@moz-m9qs1g.tpgi.com.au) has quit (A TLS packet with unexpected length was received.)
2016-12-14 11:50:44	◣	Lynolix_ (Lynolix@moz-m9qs1g.tpgi.com.au) has quit (A TLS packet with unexpected length was received.)
2016-12-14 11:50:48	◣	xliiv (xliiv@moz-893luh.icpnet.pl) has quit (Ping timeout: 121 seconds)
2016-12-14 11:51:02	◥	irrequietus (irqus@moz-vlhdta.home.otenet.gr) has joined #rust
2016-12-14 11:51:21	J_Arcane	sfackler, ahh, cool. I didn't realize docs.rs was automatic like that. Rad.
2016-12-14 11:52:03	◥	Guest (textual@moz-nfa636.static.sonic.net) has joined #rust
2016-12-14 11:52:06	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 11:52:21	◣	ubsandroid (ubsan@moz-1dsu0q.subnet.rcn.com) has quit (Ping timeout: 121 seconds)
2016-12-14 11:52:39	@steveklabnik	sfackler: J_Arcane yeah we've talked about it, it's not clear what everyone invovled desires
2016-12-14 11:52:45	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-14 11:53:04	◣	insaneinside (user@moz-ck7c5n.customer.broadstripe.net) has left #rust ("restarting X")
2016-12-14 11:53:06	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-14 11:53:09	◥	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has joined #rust
2016-12-14 11:53:14	◥	mchang (mchang@moz-786mcj.res.rr.com) has joined #rust
2016-12-14 11:54:05	◥	mr-bt (mr-bt@moz-8r4eoh.range109-155.btcentralplus.com) has joined #rust
2016-12-14 11:54:23	◣	madmalik (uid13697@moz-mac7ts.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-14 11:55:05	◣	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 11:55:25	◥	oln (smuxi@moz-h6kap0.customer.cdi.no) has joined #rust
2016-12-14 11:55:30	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-14 11:55:38	◥	sscott (Thunderbird@moz-bs8.kc7.15.94.IP) has joined #rust
2016-12-14 11:55:40	◥	nicoch (nicoch@moz-il3svh.2utt.76f9.0e34.2a01.IP) has joined #rust
2016-12-14 11:55:43	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 11:56:09	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2016-12-14 11:56:38	Arnavion	http://stackoverflow.com/q/41151080/545475   If anyone has a better answer than the one I found on my own, I'd appreciate it
2016-12-14 11:56:55	◥	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has joined #rust
2016-12-14 11:57:44	◣	ubsandroid_ (ubsan@moz-fmtvol.n7a3.v8la.fb90.2607.IP) has quit (Quit: <3)
2016-12-14 11:57:58	◥	ubsandroid (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has joined #rust
2016-12-14 11:58:15	J_Arcane	steveklabnik, cool.
2016-12-14 11:59:02	◣	mr-bt (mr-bt@moz-8r4eoh.range109-155.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2016-12-14 11:59:11	◣	petson__ (petson@moz-0vl6te.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2016-12-14 11:59:40	◥	ubsandroid_ (ubsan@moz-2u9q90.4bil.8nvg.fb90.2607.IP) has joined #rust
2016-12-14 12:00:31	◥	tim_____ (tim_____@moz-qn9nfd.dip0.t-ipconnect.de) has joined #rust
2016-12-14 12:00:50	◣	ubsandroid_ (ubsan@moz-2u9q90.4bil.8nvg.fb90.2607.IP) has quit (Quit: <3)
2016-12-14 12:00:54	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Quit: WeeChat 1.5)
2016-12-14 12:00:57	◥	ubsandroid_ (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has joined #rust
2016-12-14 12:01:06	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-14 12:02:41	◣	angusi (angusai@moz-o6824l.g3dg.soik.0104.2620.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 12:02:43	◣	ubsandroid (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has quit (Ping timeout: 121 seconds)
2016-12-14 12:02:54	◥	anjumkaiser (anjumkaiser@moz-jl6.03r.50.39.IP) has joined #rust
2016-12-14 12:03:07	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2016-12-14 12:03:33	◥	kevinburke (uid56852@moz-ke6gi5.ealing.irccloud.com) has joined #rust
2016-12-14 12:03:40	kevinburke	Hi there
2016-12-14 12:03:51	kevinburke	Any ideas for a small-ish C codebase that could be converted to Rust?
2016-12-14 12:04:13	◣	manjaro-kde5 (manjaro-kde@moz-uke9g4.r4a5.s6a3.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 12:04:27	◥	manjaro-kde5 (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2016-12-14 12:04:59	⚡	jntrnr is now known as jntrnr_vacation
2016-12-14 12:05:17	◥	rakm (rakm@moz-ppv.34b.114.17.IP) has joined #rust
2016-12-14 12:05:57	◥	Fishrock123 (Fishrock123@moz-hfbsie.dsl.bell.ca) has joined #rust
2016-12-14 12:05:57	◥	ot (ot@moz-gmtpic.cpe.webspeed.dk) has joined #rust
2016-12-14 12:06:30	◥	newpavlov1 (newpavlov@moz-0lh.tq3.23.89.IP) has joined #rust
2016-12-14 12:07:17	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2016-12-14 12:07:29	◣	rakm (rakm@moz-ppv.34b.114.17.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 12:08:31	◣	theJPster (theJPster@moz-789mbo.cable.virginm.net) has quit (Client exited)
2016-12-14 12:08:36	◣	xfix (konrad@moz-3smirc.pw) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2016-12-14 12:08:48	KiChjang	kevinburke, https://github.com/jameysharp/corrode
2016-12-14 12:09:17	kevinburke	Right, that's the tool I'd like to use, but I want to apply it to a codebase
2016-12-14 12:09:40	◥	rakm (rakm@moz-ppv.34b.114.17.IP) has joined #rust
2016-12-14 12:10:00	◣	sgflt (sgflt@moz-41a469.dip0.t-ipconnect.de) has quit (Client exited)
2016-12-14 12:10:03	◥	sgflt (sgflt@moz-41a469.dip0.t-ipconnect.de) has joined #rust
2016-12-14 12:10:21	KiChjang	how about any of the coreutils in GNU?
2016-12-14 12:10:33	◣	nicoch (nicoch@moz-il3svh.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2016-12-14 12:11:06	j_ey	cat!
2016-12-14 12:12:56	slomo	kevinburke: maybe zlib
2016-12-14 12:14:05	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2016-12-14 12:14:06	⚡	Mode #rust [+ao brson brson] by ChanServ
2016-12-14 12:14:24	J_Arcane	I've made a dice rolling library for Rust. https://crates.io/crates/rouler
2016-12-14 12:15:06	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2016-12-14 12:15:28	◣	rakm (rakm@moz-ppv.34b.114.17.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 12:16:21	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-14 12:16:29	◣	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has quit (Ping timeout: 121 seconds)
2016-12-14 12:16:32	◥	Alek (alek@moz-h5408n.bb.online.no) has joined #rust
2016-12-14 12:17:07	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-14 12:17:43	pengowen	I have an iterator that I want to conditionally extend with chain and iter::once: https://is.gd/Ykokgu
2016-12-14 12:18:00	pengowen	extra is Option<T>, and iter::once takes a T
2016-12-14 12:18:32	◣	qaz (qaz@moz-c02.mig.232.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 12:18:44	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-14 12:18:58	◥	qaz (qaz@moz-luj.45s.233.117.IP) has joined #rust
2016-12-14 12:19:24	rkruppe	pengowen: Option<T>::into_iter gives an iterator that yields one T if there is one and otherwise nothing
2016-12-14 12:19:40	pengowen	rkruppe: I think that's what I am looking for
2016-12-14 12:19:58	◥	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has joined #rust
2016-12-14 12:20:14	◣	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 12:22:56	◥	xliiv (xliiv@moz-893luh.icpnet.pl) has joined #rust
2016-12-14 12:24:21	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-14 12:25:26	◥	tcreeds (tcreeds@moz-61c.2us.21.129.IP) has joined #rust
2016-12-14 12:27:53	◣	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-14 12:28:08	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Client exited)
2016-12-14 12:28:12	◥	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has joined #rust
2016-12-14 12:28:48	◥	woboats_ (woboats@moz-8rajde.ca.comcast.net) has joined #rust
2016-12-14 12:30:37	◣	sigma (sigma@moz-9epccp.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-14 12:32:14	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2016-12-14 12:33:34	◥	Psilidae (Psilidae@moz-kng1rg.at.cox.net) has joined #rust
2016-12-14 12:33:48	Ploppz	Rust Nightly has different error format than Rust Stable right?
2016-12-14 12:34:14	@steveklabnik	they should be the same by now
2016-12-14 12:34:25	@steveklabnik	i thought
2016-12-14 12:34:55	talchas	yeah, it looks like they're generally the same now
2016-12-14 12:35:08	◥	brendan (brendaneich@moz-gkg7o7.ca.comcast.net) has joined #rust
2016-12-14 12:35:10	◥	pepper_chico (pepper_chic@moz-o68lqd.telesp.net.br) has joined #rust
2016-12-14 12:36:30	Ploppz	okay
2016-12-14 12:36:42	◣	rodarmor (rodarmor@moz-aur1lg.fkdv.ulf6.3c01.2600.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 12:36:43	◣	tobz (textual@moz-qpj.f2m.111.18.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 12:37:40	◥	rodarmor (rodarmor@moz-aur1lg.fkdv.ulf6.3c01.2600.IP) has joined #rust
2016-12-14 12:38:32	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-14 12:38:35	◣	pepper_chico (pepper_chic@moz-o68lqd.telesp.net.br) has quit (Quit: WeeChat 1.6)
2016-12-14 12:39:52	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2016-12-14 12:41:31	◣	manjaro-kde5 (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2016-12-14 12:41:55	◥	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has joined #rust
2016-12-14 12:44:37	◣	woboats_ (woboats@moz-8rajde.ca.comcast.net) has quit (Client exited)
2016-12-14 12:44:37	⚡	WindowsBunnyNaptime is now known as WindowsBunnySuperposition
2016-12-14 12:44:44	◣	Church (hatter@moz-1mfs8d.dyn.optonline.net) has quit (Quit: WeeChat 1.5)
2016-12-14 12:44:57	◥	sigma (sigma@moz-v7r.it7.249.89.IP) has joined #rust
2016-12-14 12:45:33	@steveklabnik	whitequark: with regards to your comments on the orange website about the stack probes stuff: bless you. can't wait till that's fixed
2016-12-14 12:46:02	◥	c0170 (c0170@moz-3nkvrk.cable.virginm.net) has joined #rust
2016-12-14 12:46:16	whitequark	steveklabnik: same
2016-12-14 12:46:30	◥	pylbrecht (pylbrecht@moz-4r5f2d.6km4.884h.8109.2a02.IP) has joined #rust
2016-12-14 12:46:53	◥	Lynolix (Lynolix@moz-m9qs1g.tpgi.com.au) has joined #rust
2016-12-14 12:47:07	whitequark	steveklabnik: https://github.com/rust-lang/rfcs/pull/1808#issuecomment-267114173
2016-12-14 12:47:29	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-14 12:48:14	@steveklabnik	:(
2016-12-14 12:48:22	◣	fmdkdd (fmdkdd@moz-pkmmg9.erq3.p0s9.0e35.2a01.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 12:48:40	whitequark	just... need to finish this TCP/IP stack...
2016-12-14 12:48:48	▷	whitequark stares into nothingness
2016-12-14 12:49:13	@steveklabnik	:)
2016-12-14 12:49:17	whitequark	planning to do a writeup on how to use collections (the concept, not *lib*collections) without liballoc
2016-12-14 12:49:37	whitequark	it's really not obvious how to do it in safe rust, coming from C
2016-12-14 12:49:48	▷	mbrubeck goes looking for whitequark comments, finds an account named "whitequark" with one comment from 5 years ago
2016-12-14 12:49:57	whitequark	mbrubeck: whitequark_
2016-12-14 12:50:01	◥	mvyskocil (mvyskocil@moz-8pacse.net.upcbroadband.cz) has joined #rust
2016-12-14 12:50:07	&mbrubeck	thanks :)
2016-12-14 12:50:17	◥	futile (felix@moz-52ig8c.pools.vodafone-ip.de) has joined #rust
2016-12-14 12:50:18	whitequark	i lost the password for that one and the orange website doesn't have a password reset form because... turtle?
2016-12-14 12:50:27	@steveklabnik	that'd be an awesome writeup
2016-12-14 12:50:41	whitequark	steveklabnik: you've seen my last one right?
2016-12-14 12:50:45	whitequark	https://lab.whitequark.org/notes/2016-12-13/abstracting-over-mutability-in-rust/
2016-12-14 12:50:49	@steveklabnik	the mutability... yeah!
2016-12-14 12:50:51	@steveklabnik	very very intersting
2016-12-14 12:50:58	whitequark	:3
2016-12-14 12:51:25	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-14 12:51:30	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Ping timeout: 121 seconds)
2016-12-14 12:51:34	◣	dogamak (dogamak@moz-qsn68r.dhcp.inet.fi) has quit (Ping timeout: 121 seconds)
2016-12-14 12:51:34	◥	ai (ai@moz-0bh.58o.60.92.IP) has joined #rust
2016-12-14 12:52:05	◥	canaltinova (uid191250@moz-l3qbqh.tooting.irccloud.com) has joined #rust
2016-12-14 12:52:18	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-14 12:52:27	◣	arBmind (Andreas@moz-h63s7a.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-14 12:52:39	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 12:53:10	◥	arBmind (Andreas@moz-h63s7a.dyn.telefonica.de) has joined #rust
2016-12-14 12:53:38	◥	sepp2k (Sepp2k@moz-j1idvi.dyn.telefonica.de) has joined #rust
2016-12-14 12:53:51	◥	woboats_ (woboats@moz-8rajde.ca.comcast.net) has joined #rust
2016-12-14 12:54:23	◥	JuanPotato (JuanPotato@moz-v8jbl9.wv.comcast.net) has joined #rust
2016-12-14 12:55:02	SneakySnake	Nice. Only one failed build for today's nightly.
2016-12-14 12:55:09	SneakySnake	Hopefully that number will become zero tomorrow.
2016-12-14 12:55:23	talchas	whitequark: re why "<'a, T: AsRef<[u8]> + 'a> " doesn't work: it doesn't work for the same reasons that just <T: AsRef<[u8]>> doesn't work - as_ref() is &'x self -> &'x [u8]
2016-12-14 12:55:23	◥	mr-bt (mr-bt@moz-8r4eoh.range109-155.btcentralplus.com) has joined #rust
2016-12-14 12:55:28	◥	Church (hatter@moz-1mfs8d.dyn.optonline.net) has joined #rust
2016-12-14 12:55:45	talchas	and an additional Self: 'a doesn't have any way to change the signature of as_ref
2016-12-14 12:55:47	◣	Church (hatter@moz-1mfs8d.dyn.optonline.net) has quit (Quit: WeeChat 1.5)
2016-12-14 12:55:59	◥	Church (hatter@moz-1mfs8d.dyn.optonline.net) has joined #rust
2016-12-14 12:56:39	talchas	(after all [u8; 2] (and Vec<u8> _does_ iirc) can reasonably implement AsRef<[u8]> + 'static, but obviously can't produce a &'static [u8])
2016-12-14 12:56:56	whitequark	talchas: ahhh I see, this and a reddit comment from yesterday clarify this much
2016-12-14 12:57:07	◥	jimb (user@moz-d2np1l.or.comcast.net) has joined #rust
2016-12-14 12:57:49	@steveklabnik	dtolnay: ping
2016-12-14 12:57:59	◣	woboats_ (woboats@moz-8rajde.ca.comcast.net) has quit (Client exited)
2016-12-14 12:58:06	◣	Trangar (Trangar@moz-scf.k7b.97.185.IP) has quit (Quit: Leaving)
2016-12-14 12:58:16	◣	scrogson1 (scrogson@moz-i90639.tftc.9t39.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 12:58:19	@steveklabnik	dtolnay: actually, i have meeting in 3 minutes. i was wondering if syn is purely for macros 1.1, or if it'd be useful for parsing general rust source code
2016-12-14 12:58:27	@steveklabnik	(or if anyone else knows)
2016-12-14 12:59:02	@steveklabnik	it looks like it is, but if that's not a use case it's intended for, then i don't want to twist it into something it's not supposed to be :)
2016-12-14 12:59:51	◣	brendan (brendaneich@moz-gkg7o7.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 13:00:17	◣	sigma (sigma@moz-v7r.it7.249.89.IP) has quit (Connection closed)
2016-12-14 13:00:41	talchas	(oh, [T; 2] implements AsRef, it's just Index that they only get from implicit [T] conversions)
2016-12-14 13:00:49	◥	Quxxy2 (Quxxy@moz-0nv.jkp.167.59.IP) has joined #rust
2016-12-14 13:03:40	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2016-12-14 13:05:21	bholley	wycats: yt?
2016-12-14 13:05:55	◥	ghisvail (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2016-12-14 13:07:08	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 13:07:11	◥	woboats_ (woboats@moz-8rajde.ca.comcast.net) has joined #rust
2016-12-14 13:07:16	Sergio	There's a gitter for Rust as well? :\
2016-12-14 13:07:19	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-12-14 13:08:35	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-14 13:08:52	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-14 13:08:58	◣	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has quit (Ping timeout: 121 seconds)
2016-12-14 13:09:18	WindowsBunnySuperposition	Sergio: There is
2016-12-14 13:09:25	Sergio	Weird.
2016-12-14 13:09:46	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2016-12-14 13:12:00	◣	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 13:13:10	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-14 13:13:11	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 13:13:21	◥	thills (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2016-12-14 13:13:45	◥	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has joined #rust
2016-12-14 13:15:49	◣	pengowen (Mibbit@moz-lqv5il.phnx.qwest.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-14 13:15:57	◥	ludat (ludat@moz-ctb.b0j.173.190.IP) has joined #rust
2016-12-14 13:16:41	◥	tobz (textual@moz-d45.gl9.56.172.IP) has joined #rust
2016-12-14 13:16:49	maurer	Seems unlikely, but is there a way to generate a random number in rust macros? I'm looking to attach something like a uuid to a trait implementation that would ideally change every compile
2016-12-14 13:16:54	◣	hansapla_ (hansaplast@moz-c0ftmc.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2016-12-14 13:17:07	Sergio	maurer: You'd need to use a syntax extension.
2016-12-14 13:17:13	◣	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has quit (Ping timeout: 121 seconds)
2016-12-14 13:17:18	&mbrubeck	or a build script
2016-12-14 13:17:22	◥	hansaplast (hansaplast@moz-c0ftmc.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 13:17:27	◥	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2016-12-14 13:17:33	whitequark	maurer: that would be an anti-feature IMO, wrecking reproducible builds...
2016-12-14 13:17:45	maurer	whitequark: I'd be fine if it was a hash of the sources too :P
2016-12-14 13:17:48	whitequark	(also forcing everything downstream of you to rebuild)
2016-12-14 13:18:01	whitequark	a hash of the source, well, doesn't rust metadata already include that?
2016-12-14 13:18:05	_habnabit	maurer, you'd have to canonicalize the source
2016-12-14 13:18:12	◥	ubsandroid (ubsan@moz-jsia2u.d1nr.figv.fb90.2607.IP) has joined #rust
2016-12-14 13:18:15	whitequark	well not quite
2016-12-14 13:18:32	whitequark	maurer: you could hash the sources in build.rs, sure
2016-12-14 13:18:58	maurer	Yeah, I was hoping to avoid build.rs, but that might be the only real way
2016-12-14 13:19:44	maurer	(The actual goal here is that for my extensible types thingy for my datalog engine, I want to ensure that the instance of a library being used to encode/decode the type is the same as the one that created the value)
2016-12-14 13:20:06	maurer	(Since I don't want to actually have to deal with versioning on my extended types yet)
2016-12-14 13:20:07	◣	ubsandroid (ubsan@moz-jsia2u.d1nr.figv.fb90.2607.IP) has quit (Quit: <3)
2016-12-14 13:20:12	◣	ubsandroid_ (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has quit (Connection closed)
2016-12-14 13:20:15	◥	ubsandroid (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has joined #rust
2016-12-14 13:20:23	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Connection closed)
2016-12-14 13:20:30	◣	jsbruner (Instantbird@moz-9d77cu.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 13:21:24	◣	hansaplast (hansaplast@moz-c0ftmc.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 13:21:59	maurer	Oh, while I'm here, am I correct in reading Macros 1.1 as only providing the ability to #[derive()], and not to create procedural foo!() style macros?
2016-12-14 13:22:01	talchas	maurer: I'm trying to think of shenanigans you could pull to get the full symbol including crate hash
2016-12-14 13:22:30	maurer	talchas: It's not super vital, I was just trying to avoid some classes of errors before I encountered them
2016-12-14 13:22:43	◥	hansaplast (hansaplast@moz-pt4pdr.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 13:22:45	talchas	but I don't think there's anything simple, so build.rs or such is probably easiest
2016-12-14 13:22:47	maurer	talchas: For now I can just use static keys and care
2016-12-14 13:24:37	◣	hansaplast (hansaplast@moz-pt4pdr.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2016-12-14 13:25:03	◥	hansaplast (hansaplast@moz-pt4pdr.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 13:25:12	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-14 13:25:21	◣	woboats_ (woboats@moz-8rajde.ca.comcast.net) has quit (Client exited)
2016-12-14 13:26:50	◥	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has joined #rust
2016-12-14 14:12:51	⚡	irc: disconnected from server
2016-12-14 14:13:08	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2016-12-14 14:13:08	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-14 14:13:08	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-14 14:13:08	⚡	Channel #rust: 1260 nicks (17 ops, 0 halfops, 3 voices, 1240 normals)
2016-12-14 14:13:11	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-14 14:13:17	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 14:13:43	Sergio	!help
2016-12-14 14:13:48	bananabas	i was thinking of combining it with something useful and maybe contributing to servo
2016-12-14 14:13:58	◥	saimen (saimen@moz-i2kas4.natpool.mwn.de) has joined #rust
2016-12-14 14:14:12	bananabas	but my PRs might get rejected for extra newbieness
2016-12-14 14:14:17	J_Arcane	Oh, and Codewars has Rust now, if you want to do something web-based.
2016-12-14 14:14:22	carols10cents	:3
2016-12-14 14:14:34	Havvy	bananabas: Look for E-Easy issues.
2016-12-14 14:14:47	Havvy	CodingGame also has Rust.
2016-12-14 14:14:48	bananabas	yea, that's an option
2016-12-14 14:15:02	bananabas	I think I might have seen it on HackerRank as well
2016-12-14 14:15:15	J_Arcane	I like Exercism because I get to use my own tools. 
2016-12-14 14:15:23	J_Arcane	VS Code + Rusty Code = <3.
2016-12-14 14:15:32	@steveklabnik	bananabas: servo is very interested in newbie contributors
2016-12-14 14:15:36	bananabas	:)
2016-12-14 14:16:08	PeterSP	is there any way to specialize a function by the size of an array (i.e. [0;5] vs [0;10]) it uses?
2016-12-14 14:16:08	KiChjang	bananabas, is servo not welcoming enough for you?
2016-12-14 14:16:28	KiChjang	that sounds like a huge part on us if you didn't feel comfortable contributing
2016-12-14 14:16:56	bananabas	KiChjang: Oh, far from it. I didn't try yet.
2016-12-14 14:17:05	◣	jimb (user@moz-d2np1l.or.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 14:17:26	bananabas	KiChjang: I'm very new to Rust, and feel like it would be a burden to review any code I might come up with.
2016-12-14 14:17:53	Havvy	bananabas: It's a burden to review any code, even expert's code. ;)
2016-12-14 14:18:06	KiChjang	there's absolutely no problem in taking an E-Easy issue
2016-12-14 14:18:20	◣	tim_____ (tim_____@moz-qn9nfd.dip0.t-ipconnect.de) has quit (Quit: Leaving...)
2016-12-14 14:18:22	KiChjang	we specifically made them for people new to the Rust language
2016-12-14 14:18:26	◥	cgar__ (cgar@moz-9eiloi.dyn.optonline.net) has joined #rust
2016-12-14 14:18:31	⚡	bholley is now known as bholley_away
2016-12-14 14:18:33	◣	cgar__ (cgar@moz-9eiloi.dyn.optonline.net) has quit (Connection closed)
2016-12-14 14:18:34	bananabas	KiChjang: well, that sounds fantastic
2016-12-14 14:18:43	◣	cgar_ (cgar@moz-9eiloi.dyn.optonline.net) has quit (Quit: Leaving)
2016-12-14 14:18:47	KiChjang	however, they do go get claimed pretty fast
2016-12-14 14:19:10	◣	cmyr (cmyr@moz-to3mp4.158.electronicbox.net) has quit (Client exited)
2016-12-14 14:19:10	◣	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-14 14:19:17	KiChjang	some of the servo team members call them "easy piranhas"
2016-12-14 14:19:22	◣	cpup (cpup@moz-jp2.jct.218.32.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:19:24	bananabas	:D
2016-12-14 14:19:24	◣	futile (felix@moz-52ig8c.pools.vodafone-ip.de) has quit (Quit: WeeChat 1.6)
2016-12-14 14:19:38	Havvy	KiChjang: You should make an !E-Easy factoid.
2016-12-14 14:19:54	◥	Kingsqueeee (kingsley@moz-46ia3t.bchsia.telus.net) has joined #rust
2016-12-14 14:19:57	KiChjang	bananabas, anyway, let me know if you can't find any E-Easy in starters.servo.org, and i'll see if i can file one
2016-12-14 14:19:58	PeterSP	hmm: https://github.com/rust-lang/rfcs/pull/1062
2016-12-14 14:20:22	◥	qaz (qaz@moz-luj.45s.233.117.IP) has joined #rust
2016-12-14 14:20:25	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 14:20:54	◣	eckhardt_ (eckhardt@moz-vsv4eg.uceu.9vus.fb90.2607.IP) has quit (Quit: Leaving...)
2016-12-14 14:21:01	bananabas	KiChjang: tnx!
2016-12-14 14:21:05	◣	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has quit (Ping timeout: 121 seconds)
2016-12-14 14:21:19	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-14 14:22:25	◥	orks_ (orks@moz-hdm.ee2.85.93.IP) has joined #rust
2016-12-14 14:24:38	◣	orks (orks@moz-hdm.ee2.85.93.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:25:43	◥	Chane (Mibbit@moz-2gq.82u.101.160.IP) has joined #rust
2016-12-14 14:25:45	◥	futile (felix@moz-52ig8c.pools.vodafone-ip.de) has joined #rust
2016-12-14 14:26:04	bananabas	Wikipedia: Despite the syntactic resemblance, Rust is semantically very different from C and C++.
2016-12-14 14:26:21	bananabas	thank god for that :P
2016-12-14 14:27:11	◥	Dima (textual@moz-0ko.c7a.21.120.IP) has joined #rust
2016-12-14 14:27:26	◣	Akien (akien@moz-gs2ia6.dyn.telefonica.de) has quit (A TLS packet with unexpected length was received.)
2016-12-14 14:27:39	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 14:27:49	KiChjang	rust has a variety of ancestors
2016-12-14 14:29:43	KiChjang	it's a systems programming language in ML coating
2016-12-14 14:29:45	Chane	I'm using the builder pattern for an object. The build function returns a result consuming the builder if it succeeds or a tuple with the builder and an error so the user can try again. I'm having issues trying to handle errors succinctly, and I think I might be missing something:
2016-12-14 14:30:04	Chane	I have this pattern a lot: match **expr** {             Err(e) => {             return Err((self, e));             },             Ok(v) => v         };
2016-12-14 14:30:24	staticassert	Chane: sounds like you want a try macro to handle that
2016-12-14 14:30:30	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2016-12-14 14:30:43	Chane	which made me think I should use map_err to wrap the error type, but the return value moves the self so the rest of the function fails
2016-12-14 14:30:52	staticassert	Chane: https://github.com/insanitybit/typed-imap/blob/master/src/lib.rs
2016-12-14 14:30:57	staticassert	I used that macro to deal with a similar pattern
2016-12-14 14:30:58	Chane	I wanted to use the ? operator, but the expr has a different return value
2016-12-14 14:31:06	staticassert	macro_rules! try_imap {
2016-12-14 14:31:32	bananabas	KiChjang: would you say it's close to LISP/Scheme than C/C++?
2016-12-14 14:31:45	Chane	staticassert I'll check it out thanks
2016-12-14 14:32:09	KiChjang	bananabas, syntactically it looks pretty much like C/C++, with its scopes and curly braces
2016-12-14 14:32:36	Havvy	bananabas: It's closer to C and C++ than any Lisp.
2016-12-14 14:32:37	bananabas	KiChjang: well, so does JS
2016-12-14 14:32:37	◣	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has quit (Connection closed)
2016-12-14 14:32:40	KiChjang	however semantically it's closer to the ML
2016-12-14 14:32:48	KiChjang	family
2016-12-14 14:32:57	◥	cpup (cpup@moz-jp2.jct.218.32.IP) has joined #rust
2016-12-14 14:33:06	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-14 14:33:10	insaneinside	bananabas: Rust is an exotic hybrid of numerous languages; there's not much point to trying to pidgeonhole it :)
2016-12-14 14:33:38	KiChjang	yeah, instead i think we should point out some specific features
2016-12-14 14:33:38	◥	jsgf (jsgf@moz-ejpern.ca.comcast.net) has joined #rust
2016-12-14 14:33:38	KiChjang	e.g. everything is an expression
2016-12-14 14:33:38	ai	bananabas: it's kinda close to haskell, with it's type system and all.
2016-12-14 14:33:38	KiChjang	except let
2016-12-14 14:33:55	Havvy	ai: Except that Haskell is lazy and Rust is eager.
2016-12-14 14:34:03	Havvy	So it's not really like Haskell at all.
2016-12-14 14:34:04	bananabas	:)
2016-12-14 14:34:12	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:34:29	KiChjang	also, rust doesn't have a GC
2016-12-14 14:34:33	◥	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2016-12-14 14:34:35	Havvy	Rust is its own language. Trying to treat it like any other language is bound to fail.
2016-12-14 14:34:37	bananabas	but it's also not like C++'s hey let's make everything an object
2016-12-14 14:34:44	◣	Dima (textual@moz-0ko.c7a.21.120.IP) has quit (Connection closed)
2016-12-14 14:34:59	insaneinside	bananabas: eh?
2016-12-14 14:35:07	insaneinside	playbot: 5.pow(3)
2016-12-14 14:35:09	⚡	Notice(playbot): error: no method named `pow` found for type `{integer}` in the current scope
2016-12-14 14:35:09	⚡	Notice(playbot):   --> <anon>:10:11
2016-12-14 14:35:09	⚡	Notice(playbot):    |
2016-12-14 14:35:09	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hxKMkc)
2016-12-14 14:35:11	insaneinside	...
2016-12-14 14:35:14	◣	qaz (qaz@moz-luj.45s.233.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:35:14	misdreavus	powi?
2016-12-14 14:35:24	KiChjang	playbot, 5.powi(3)
2016-12-14 14:35:24	⚡	Notice(playbot): error: no method named `powi` found for type `{integer}` in the current scope
2016-12-14 14:35:24	⚡	Notice(playbot):   --> <anon>:10:11
2016-12-14 14:35:24	⚡	Notice(playbot):    |
2016-12-14 14:35:24	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hmFQ3x)
2016-12-14 14:35:28	misdreavus	welp
2016-12-14 14:35:34	KiChjang	playbot, 5i32.powi(3)
2016-12-14 14:35:36	⚡	Notice(playbot): error: no method named `powi` found for type `i32` in the current scope
2016-12-14 14:35:36	⚡	Notice(playbot):   --> <anon>:10:14
2016-12-14 14:35:36	⚡	Notice(playbot):    |
2016-12-14 14:35:36	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hxHtJI)
2016-12-14 14:35:39	KiChjang	uh oh
2016-12-14 14:35:42	hodapp	Havvy: But if one uses the GHC pragma to make the entire module strict, then are they suddenly alike?
2016-12-14 14:35:48	◣	PeterSP (peter@moz-jf28ru.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2016-12-14 14:36:08	insaneinside	bananabas: well, the point here is that it's unclear what you mean by "object" :P
2016-12-14 14:36:08	bananabas	is 5.pow(3) supposed to work
2016-12-14 14:36:14	◣	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has quit (Client exited)
2016-12-14 14:36:23	insaneinside	playbot: 5u32.pow(3u32)
2016-12-14 14:36:25	⚡	Notice(playbot): 125
2016-12-14 14:36:28	ai	playbot: 5u32.pow(3)
2016-12-14 14:36:29	⚡	Notice(playbot): 125
2016-12-14 14:36:35	ai	Aww, to late.
2016-12-14 14:36:35	bananabas	aha
2016-12-14 14:36:39	Havvy	hodapp: No. Because Rust still allows mutable state while Haskell enforces immutability except via monadic structures.
2016-12-14 14:36:47	◥	meloc (geomyidae@moz-4fd.4ui.175.52.IP) has joined #rust
2016-12-14 14:36:50	KiChjang	omg not the M word again
2016-12-14 14:37:03	Chane	When should I favor &str vs String?
2016-12-14 14:37:04	ai	bananabas: so, it's even closer to „let's make everything an object“ than C++.
2016-12-14 14:37:06	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2016-12-14 14:37:16	insaneinside	Chane: when you don't need to own the data
2016-12-14 14:37:27	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-14 14:37:36	hodapp	Havvy: Ehh? Monads have pretty much nothing to do with that.
2016-12-14 14:37:36	&niconii	bananabas: as for 5.pow(3), it doesn't work because they're inherent methods instead of trait methods, so rust can't figure out which type's method it should use for reasons which i keep forgetting
2016-12-14 14:37:40	◣	xliiv (xliiv@moz-893luh.icpnet.pl) has quit (Ping timeout: 121 seconds)
2016-12-14 14:37:54	insaneinside	Chane, i.e. when it's okay to be using a reference instead of a plain value
2016-12-14 14:38:18	bananabas	ok, it's probably best to get some real-world experience with it at this point
2016-12-14 14:38:32	bananabas	as i see it's not going to fit nicely in any pre-defined box
2016-12-14 14:38:34	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Quit: WeeChat 1.5)
2016-12-14 14:39:06	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2016-12-14 14:39:11	misdreavus	i feel like "let's compare rust to other languages" is a cluster-tangent in a box
2016-12-14 14:39:16	insaneinside	playbot: Box::new("Rust")
2016-12-14 14:39:16	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Quit: Konversation terminated!)
2016-12-14 14:39:18	⚡	Notice(playbot): "Rust"
2016-12-14 14:39:23	◣	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 14:39:23	insaneinside	bananabas: ^^^
2016-12-14 14:39:25	insaneinside	:D
2016-12-14 14:39:29	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-14 14:39:35	misdreavus	/facepalm
2016-12-14 14:39:39	hodapp	I feel like if "let's compare Rust to other languages" has an easy answer, Rust doesn't really have an excuse for existing :P
2016-12-14 14:40:13	bananabas	one thing i notice is it's quite new
2016-12-14 14:40:16	bananabas	ie 6 yrs old
2016-12-14 14:40:34	misdreavus	only reached 1.0 mid last year
2016-12-14 14:40:52	bananabas	i hope it breaks less than julia
2016-12-14 14:41:00	hodapp	Julia breaks a lot?
2016-12-14 14:41:03	◣	meloc (geomyidae@moz-4fd.4ui.175.52.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 14:41:15	bananabas	in my experience, more than i cared for
2016-12-14 14:41:35	◥	qaz (qaz@moz-luj.45s.233.117.IP) has joined #rust
2016-12-14 14:41:39	hodapp	huh. I haven't learned Julia yet, but have been curious
2016-12-14 14:41:41	bananabas	but it's pre 1.0 still
2016-12-14 14:42:08	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 14:42:17	bananabas	well it felt like matlab from the future
2016-12-14 14:42:24	◣	stjepang (stjepan@moz-c3v164.dynamic.amis.hr) has quit (Ping timeout: 121 seconds)
2016-12-14 14:43:19	hodapp	MATLAB to me always felt like dusty FORTRAN with cheap paint on it.
2016-12-14 14:43:26	◣	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-14 14:43:39	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2016-12-14 14:43:48	bananabas	oh, you used fortran?
2016-12-14 14:43:53	hodapp	have used both
2016-12-14 14:44:06	bananabas	yeah
2016-12-14 14:44:20	hodapp	used MATLAB pretty extensively, still hate it quite passionately
2016-12-14 14:44:33	bananabas	so then julia is what fortran should have been
2016-12-14 14:44:36	Chane	staticassert that macro was just about perfect for what I needed to do. Thanks!
2016-12-14 14:44:53	hodapp	it rivals R for making anything resembling "production" code almost impossible
2016-12-14 14:45:14	◣	junqed (junqed@moz-7c0.2s0.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-14 14:45:21	◣	anjumkaiser (anjumkaiser@moz-jl6.03r.50.39.IP) has quit (Quit: Leaving.)
2016-12-14 14:45:40	◥	Philpax (Philpax@moz-gs3.3j5.186.115.IP) has joined #rust
2016-12-14 14:45:43	bananabas	but it's not modernized fortran, that's fortran 20078
2016-12-14 14:45:45	bananabas	2008
2016-12-14 14:45:51	◣	talchas (user@moz-i75sak.ca.comcast.net) has left #rust ("ERC (IRC client for Emacs 24.5.1)")
2016-12-14 14:45:58	⚡	rail-away is now known as rail
2016-12-14 14:45:58	◥	talchas (user@moz-i75sak.ca.comcast.net) has joined #rust
2016-12-14 14:46:00	bananabas	it's like if fortran were designed from scratch
2016-12-14 14:46:10	bananabas	losing backwards compatibility and all
2016-12-14 14:46:19	jrmuizel	nrc: rustw doesn't build for me
2016-12-14 14:46:36	◥	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has joined #rust
2016-12-14 14:46:41	◥	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has joined #rust
2016-12-14 14:46:43	J_Arcane	IT is so hard to test things when random numbers are involved.
2016-12-14 14:46:58	j_ey	seed 'em
2016-12-14 14:47:01	hodapp	what sort of stuff?
2016-12-14 14:47:03	bananabas	hodapp: well i always thought R and MATLAB were meant for fast prototyping, followed by reimplementation in a real(TM) language
2016-12-14 14:47:06	◣	sscott (Thunderbird@moz-bs8.kc7.15.94.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:47:12	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-14 14:47:33	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 14:48:13	hodapp	bananabas: in the land of software there is almost no such thing as just a prototype - only code that's being used for the first time
2016-12-14 14:48:44	◥	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has joined #rust
2016-12-14 14:48:47	KiChjang	heh, every "prototype" is just the first iteration of a piece of software
2016-12-14 14:49:13	◣	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has quit (Quit: Konversation terminated!)
2016-12-14 14:49:51	hodapp	worked with a floor of engineers who dominantly considered it hogwash that there was any real difference between MATLAB and any other language
2016-12-14 14:49:54	◥	PeterSP (peter@moz-jf28ru.fios.verizon.net) has joined #rust
2016-12-14 14:50:06	hodapp	to them, all a programming language did was push numbers around so it made no difference
2016-12-14 14:50:13	bananabas	hahaha
2016-12-14 14:50:32	bananabas	"a language calculates stuff for me"
2016-12-14 14:51:09	Havvy	So, should we hire an electrical engineer to build the next bridge?
2016-12-14 14:51:19	Havvy	You're all just engineers after all. ;)
2016-12-14 14:51:21	hodapp	wheatstone bridge?
2016-12-14 14:51:30	bananabas	while i share your hatred for these meta-languages, i do see some value in being about to call an R library in 2 lines which solves your problem
2016-12-14 14:51:42	KiChjang	it's not like you can't with servo
2016-12-14 14:51:46	◣	Philpax (Philpax@moz-gs3.3j5.186.115.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:51:48	KiChjang	you can just make everything a macro
2016-12-14 14:51:51	hodapp	yeah, I've used enough R to know that R has value from that standpoint
2016-12-14 14:51:58	KiChjang	so essentially your main function would look like this
2016-12-14 14:51:59	insaneinside	hodapp: next time someone tries to make that assertion, tell them to write their code in Dwarf Fortress and see what they say: http://dwarffortresswiki.org/index.php/User:BaronW#The_Almighty_Dwarven_Calculator
2016-12-14 14:51:59	KiChjang	run!()
2016-12-14 14:52:16	hodapp	insaneinside: that's just ridiculous(tm) whereas MATLAB is already handy and what they have
2016-12-14 14:52:23	◣	irrequietus (irqus@moz-vlhdta.home.otenet.gr) has quit (Quit: )
2016-12-14 14:52:35	insaneinside	so?  DF doesn't have a license fee ;P
2016-12-14 14:52:41	hodapp	insaneinside: this is true
2016-12-14 14:52:56	KiChjang	(i meant rust not servo btw)
2016-12-14 14:53:10	KiChjang	interestingly, i heard servo was initially called rust
2016-12-14 14:53:18	◣	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has quit (Connection closed)
2016-12-14 14:53:27	J_Arcane	omg. I did not know it was so easy to turn things into iterators.
2016-12-14 14:53:33	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-14 14:53:38	KiChjang	yup, just .iter()
2016-12-14 14:53:47	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 14:54:00	J_Arcane	rouler::Roller is soon to be an iterator. :D
2016-12-14 14:54:18	◥	dm3 (dm3@moz-mbu6cp.dclient.hispeed.ch) has joined #rust
2016-12-14 14:55:11	◣	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has quit (A TLS packet with unexpected length was received.)
2016-12-14 14:55:33	misdreavus	oh yeah, all you need to make an Iterator is to pin your type and make a next() function
2016-12-14 14:55:38	◥	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has joined #rust
2016-12-14 14:55:52	◣	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has quit (Client exited)
2016-12-14 14:56:16	misdreavus	and if you're not maintaining a bunch of state between next() calls it's not that crazy
2016-12-14 14:56:59	◣	meh (meh@moz-m2c.lgf.42.151.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:57:09	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:57:28	bananabas	heh, rust is to C++ as _____ is to JavaScript
2016-12-14 14:57:33	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 14:57:37	◣	ai (ai@moz-0bh.58o.60.92.IP) has quit (Quit: Leaving.)
2016-12-14 14:57:47	cjm	also rust
2016-12-14 14:57:53	◣	urcra (urcra@moz-9lk9gn.cpe.webspeed.dk) has quit (Connection closed)
2016-12-14 14:57:57	◣	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has quit (Quit: WeeChat 1.5)
2016-12-14 14:58:00	◥	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has joined #rust
2016-12-14 14:58:02	kazagistar	MATLAB has some awful bits, but what really makes it awful is math grad students who slowly write piecemeal codebases one paper at a time (papers also doubling as the only documentation)
2016-12-14 14:58:04	J_Arcane	Hmm. There are some interesting consequences of how it works with a mutable object though. 
2016-12-14 14:58:16	J_Arcane	Or perhaps my implementation is naive.
2016-12-14 14:58:42	bananabas	cjm: really?
2016-12-14 14:59:00	misdreavus	yeah, if you're cursoring over a collection the pattern is usually to make a separate struct and stuff all your state into that
2016-12-14 14:59:03	cjm	once the emscripten backend is stable!
2016-12-14 14:59:38	◣	kazagistar (Adium@moz-br6.b81.207.205.IP) has quit (Quit: Leaving.)
2016-12-14 14:59:40	bananabas	cjm: do you see it replacing JS in the future?
2016-12-14 15:00:02	Havvy	bananabas: Nothing is going to be replacing JS in the near future.
2016-12-14 15:00:02	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Connection closed)
2016-12-14 15:00:18	Havvy	Certainly not Rust.
2016-12-14 15:00:21	dm3	is it possible to compile a 64bit (linux-gnu) target so that all allocations happen in the first 4Gb of memory? I need to interface with a lib that accepts pointers as `int`, but is compiled for 64bit...
2016-12-14 15:00:35	◣	wak-work (wak-work@moz-qsrkev.hjoo.ubad.015c.2620.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:00:41	bananabas	Havvy: will anything be replacing Java, you think?
2016-12-14 15:00:47	splitty_	I feel like 'ResolutionNotDivisableByFactorWithoutRest' is not a good name for an enum value..
2016-12-14 15:01:02	◥	dsantiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-14 15:01:10	◥	JoshTriplett (josh@moz-8pt5ri.or.frontiernet.net) has joined #rust
2016-12-14 15:01:24	◣	qaz (qaz@moz-luj.45s.233.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:01:24	JoshTriplett	Why can a Rust program not "use somecrate::main;" and have that work as main()?
2016-12-14 15:01:25	splitty_	How do you handle error messages in your own crates?
2016-12-14 15:01:28	maurer	dm3: I don't know the answer to your question, but it sounds like what you actually want to ask is "Is it possible to compile for the x32 ABI"
2016-12-14 15:01:28	Havvy	bananabas: Well, Java != JavaScript, but I think Kotlin is trying hard to replace Java.
2016-12-14 15:01:34	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Quit: WeeChat 1.5)
2016-12-14 15:01:39	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 15:01:39	JoshTriplett	I tried that, and got "error: main function not found".
2016-12-14 15:01:52	◥	qaz (qaz@moz-ukl.hqn.232.117.IP) has joined #rust
2016-12-14 15:01:58	JoshTriplett	splitty_: What do you mean?
2016-12-14 15:02:01	Havvy	JoshTriplett: What if it's `pub use`?
2016-12-14 15:02:11	maurer	dm3: (x32 is likely what your other library was built with)
2016-12-14 15:02:25	@steveklabnik	JoshTriplett: iirc there's an RFC/bug open for this
2016-12-14 15:02:30	JoshTriplett	Havvy: Nope.
2016-12-14 15:02:33	J_Arcane	misdreavus, Rollers keep their last roll in a "total" field. Calling Roller::reroll() generates a new value, stores it in total, and returns. But even defining next() in terms of reroll() doesn't seem to do what one would expect, it seems like the iterator makes a copy and leaves the original alone.
2016-12-14 15:02:44	JoshTriplett	steveklabnik: Oh, interesting. Looking...
2016-12-14 15:03:06	◣	asteriskServes (asteriskSer@moz-ggo.mlv.69.184.IP) has quit (Connection closed)
2016-12-14 15:03:12	splitty_	JoshTriplett, I'm providing image downsampling. Downsampling only works with values divisible by the downsampling factor without rest. So I'm returning a Result<Foo, SamplingError>
2016-12-14 15:03:26	splitty_	SamplingError is an enum, but I don't know if that's a good way of doing that.
2016-12-14 15:03:28	JoshTriplett	splitty_: That sounds reasonable.
2016-12-14 15:03:37	@steveklabnik	https://github.com/rust-lang/rust/issues/28937 <- unimplemented RFC
2016-12-14 15:03:47	splitty_	ResolutionNotDivisableByFactorWithoutRest is just extremely long and I don't know how to make it shorter :D
2016-12-14 15:03:48	dm3	maurer: the ELF says `ELF 64-bit LSB shared object, x86-64, version 1 (SYSV)`, do you think it's still possible that it's compiled for x32 ABI?
2016-12-14 15:03:50	JoshTriplett	splitty_: Your error type should implement Error, Debug, and ideally Display.  Personally, I'd recommend using error-chain to generate a type.
2016-12-14 15:04:14	◣	rovar (rovar@moz-qa6fd4.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2016-12-14 15:04:17	JoshTriplett	splitty_: NonIntegral?
2016-12-14 15:04:18	◣	jsbruner (Instantbird@moz-thbbko.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:04:22	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:04:38	◣	zv (zv@moz-aa65e6.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 15:04:46	◣	manjaro-kde5 (manjaro-kde@moz-uke9g4.r4a5.s6a3.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:04:47	bobross	splitty_ how much memory do you need to pass it?
2016-12-14 15:05:00	◣	saimen (saimen@moz-i2kas4.natpool.mwn.de) has quit (Ping timeout: 121 seconds)
2016-12-14 15:05:08	◥	Guest21 (textual@moz-t64.lvo.101.155.IP) has joined #rust
2016-12-14 15:05:18	misdreavus	J_Arcane: hmm, i'd have to take a closer look, there might be something else weird going on
2016-12-14 15:05:19	splitty_	JoshTriplett, just usizes, nothing special. bobross not much, it's only a struct with two usize fields.
2016-12-14 15:05:29	◣	bananabas (bananabas@moz-2ve.4l1.123.86.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 15:05:51	◣	ato (sid11@moz-vhmn17.0j4i.jtu0.0101.2620.IP) has quit (Quit: )
2016-12-14 15:05:56	JoshTriplett	splitty_: I meant, you could name it NonIntegral. :)
2016-12-14 15:05:56	maurer	dm3: Yes, that lists the bitsize of the ELF format, the cpu, and the revision of the elf format, all of which are the same for x32 (x32 is a 64-bit calling convention/syscall interface where pointers are 32-bit)
2016-12-14 15:06:01	splitty_	Ooh
2016-12-14 15:06:05	JoshTriplett	splitty_: As in, "the result after resampling isn't integral".
2016-12-14 15:06:14	J_Arcane	misdreavus, I can commit and link to github if you've got time to look.
2016-12-14 15:06:23	bobross	splitty_ what normally is in the first 4GB of memory on linux? I think the kernel is memory mapped and then what? if its the stack, you could allocate on the stack and pass that
2016-12-14 15:06:26	misdreavus	J_Arcane: sure, i've got a bit of time
2016-12-14 15:06:35	splitty_	JoshTriplett, that's pretty good, thank you :)
2016-12-14 15:06:48	◣	mewp (quassel@moz-457q3h.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2016-12-14 15:06:52	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2016-12-14 15:07:01	JoshTriplett	steveklabnik: Good to know about the RFC; unfortunate that it doesn't already work. :(
2016-12-14 15:07:12	splitty_	Ooh, bobross, this is not for my kernel, it's for a RayTracer.
2016-12-14 15:07:18	splitty_	I won't have problems with memory management.
2016-12-14 15:07:22	JoshTriplett	steveklabnik: I have a library that really wants to provide a function named "main" that you can just directly `use`.
2016-12-14 15:07:41	◥	jimb (user@moz-1d5sde.ptld.qwest.net) has joined #rust
2016-12-14 15:07:52	bobross	splitty_ what I'm saying is you just need an address that is in the first 2GB if is an int 
2016-12-14 15:07:56	◥	scrogson1 (scrogson@moz-i90639.tftc.9t39.0306.2602.IP) has joined #rust
2016-12-14 15:08:11	bobross	splitty_ what library is made like that that you would need for a ray tracer?
2016-12-14 15:08:23	◣	bennofs (benno@moz-09pfht.qn0t.tnpg.c1a0.2a00.IP) has quit (Quit: WeeChat 1.6)
2016-12-14 15:08:29	splitty_	Why though? I don't quite understand what you're trying to say.
2016-12-14 15:08:38	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2016-12-14 15:09:05	splitty_	I may have missed something, I'm confused now lol
2016-12-14 15:09:07	◥	ubsandroid_ (ubsan@moz-7gu6nl.hi9m.kdv0.fb90.2607.IP) has joined #rust
2016-12-14 15:09:50	◣	ubsandroid_ (ubsan@moz-7gu6nl.hi9m.kdv0.fb90.2607.IP) has quit (Connection closed)
2016-12-14 15:09:50	@steveklabnik	JoshTriplett: yeah. seems like it was almost recently implemented, but has some small bootstrapping issues
2016-12-14 15:09:56	◥	ubsandroid_ (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has joined #rust
2016-12-14 15:09:56	splitty_	bobross, I have a Resolution struct which holds the width and height of the image to be generated. Now, for supersampling and subsampling I provided two functions to calculate the new values.
2016-12-14 15:10:20	J_Arcane	misdreavus, here's the main code: https://github.com/jarcane/rouler/blob/iterators/src/roll.rs And the test I'm trying to pass: https://github.com/jarcane/rouler/blob/iterators/tests/roller.rs#L67
2016-12-14 15:10:22	◥	ubsandroid__ (ubsan@moz-7gu6nl.hi9m.kdv0.fb90.2607.IP) has joined #rust
2016-12-14 15:10:22	maurer	dm3: Given https://github.com/rust-lang/rfcs/issues/1339 and https://github.com/rust-lang/rust/issues/37976 I'm guessing there's not an easy way to do this at the moment, but there are also more experienced folk in this channel
2016-12-14 15:10:25	splitty_	But downsampling can fail, so I need to return a Result<T, E>
2016-12-14 15:10:37	maurer	ls
2016-12-14 15:10:39	maurer	oops
2016-12-14 15:10:40	bobross	splitty_ I got you mixed up with dm3 who was trying to pass a memory address as an int
2016-12-14 15:10:44	talchas	bobross: the kernel is mapped in the upper half of address space on 64-bit and iirc 32-bit too
2016-12-14 15:11:02	◥	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has joined #rust
2016-12-14 15:11:06	bobross	talchas good to know
2016-12-14 15:11:33	dm3	maurer: thx, I'll read about it!
2016-12-14 15:11:44	misdreavus	J_Arcane: alright, let's take a look
2016-12-14 15:12:10	splitty_	bobross, ooh that makes sense now haha
2016-12-14 15:12:18	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (Quit: Leaving...)
2016-12-14 15:12:20	◣	ubsandroid (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has quit (Ping timeout: 121 seconds)
2016-12-14 15:12:24	talchas	(whether or not it is in -2GB..0 is iirc "yes" for the code at the moment, but not for allocations)
2016-12-14 15:12:27	dm3	maurer: do you know if I can check for the calling convention given the ELF somehow?
2016-12-14 15:13:35	bobross	splitty_ but for enlarging an image you can use bilinear filtering, and for scaling down you can use a gaussian filter
2016-12-14 15:14:13	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Quit: WeeChat 1.5)
2016-12-14 15:14:20	misdreavus	J_Arcane: okay so what's happening is that take() consumes the iterator by-value, and Roller is Copy, so it's iterating over a copy of the roller
2016-12-14 15:14:20	talchas	dm3: maurer: I think x32 may actually be "a.out: ELF 32-bit LSB  executable, x86-64, "
2016-12-14 15:14:33	bobross	splitty_ if you are doing any rendering I recommend the book 'physically based rendering' if you don't have it already 
2016-12-14 15:14:35	J_Arcane	misdreavus, I thought that might be the case. 
2016-12-14 15:14:41	◣	ubsandroid_ (ubsan@moz-90r0dm.NATPOOL.NYU.EDU) has quit (Ping timeout: 121 seconds)
2016-12-14 15:14:41	◣	qaz (qaz@moz-ukl.hqn.232.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:14:43	maurer	talchas: I could be wrong, but I _think_ it's legal to store it in either.
2016-12-14 15:14:45	talchas	at least that's why my ubuntu machine spits out for -mx32, but I don't have it specifically set up to make sure x32 is correct
2016-12-14 15:14:48	talchas	maurer: might be
2016-12-14 15:14:53	misdreavus	J_Arcane: adding .by_ref() to the start of the iterator chain will make it work
2016-12-14 15:15:01	◣	insert_name_here (genericname@moz-flkg77.static.twtelecom.net) has quit (Ping timeout: 121 seconds)
2016-12-14 15:15:06	talchas	in any case, bad C libs might well take int for pointers anyway
2016-12-14 15:15:16	splitty_	bobross, yep I'm already looking into that stuff
2016-12-14 15:15:18	maurer	Yeah, it's also possible this is something less sane than x32
2016-12-14 15:15:20	⚡	bholley_away is now known as bholley
2016-12-14 15:15:22	splitty_	I wanna use Lanczos for scaling down
2016-12-14 15:15:27	maurer	I was just suspicious when I heard 32-bit pointers and 64-bit code
2016-12-14 15:15:40	talchas	you can mmap with MAP_32BIT to get what you need
2016-12-14 15:15:44	insaneinside	I'd never heard the term "x32" until a year or so ago.  Did it happen because of kids' disregard for the actual history of x86 or something? ;P
2016-12-14 15:15:45	talchas	but that won't help with Box
2016-12-14 15:15:53	⚡	bholley is now known as bholley_away
2016-12-14 15:15:55	⚡	bholley_away is now known as bholley
2016-12-14 15:16:10	talchas	insaneinside: I'm not really sure what the derivation of x32 is
2016-12-14 15:16:11	maurer	insaneinside: Nah, it's actually been an idea for a long time
2016-12-14 15:16:23	J_Arcane	misdreavus, yup, so it will. Is there any way to make that the default behavior, so the explicit call is unnecessary?
2016-12-14 15:16:26	maurer	insaneinside: Knuth actually proposed it months after amd64 first came out, before intel shipped consumer 64-bit products
2016-12-14 15:16:28	◣	Guest21 (textual@moz-t64.lvo.101.155.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 15:16:31	◥	qaz (qaz@moz-ukl.hqn.232.117.IP) has joined #rust
2016-12-14 15:16:35	bobross	splitty_ you can use sharp filters like sinc etc, but anything with negative lobes can lead to ringing - I've done pretty obsessive filtering tests and after many years of trial and error I end up using 2.2 width gaussian 
2016-12-14 15:16:49	Mutabah	Afaik, x32 is the 32-bit pointer ABI for x86-64/amd64?
2016-12-14 15:16:49	maurer	insaneinside: and you can see it on a lot of other architectures under the name "ILP32"
2016-12-14 15:16:54	talchas	Mutabah: yeah
2016-12-14 15:17:00	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-14 15:17:09	insaneinside	but... x86 is not an 86-bit pointer ABI!
2016-12-14 15:17:28	misdreavus	J_Arcane: unfortunately, not that i know of - you could make an .iter() function that just returned `self.by_ref()` but even that is one more than it sounds like you want
2016-12-14 15:17:32	talchas	the main annoyance is that it's _also_ not immediately obvious that time_t is also 64bit for example
2016-12-14 15:17:33	splitty_	bobross, thank you, I'll consider that :)
2016-12-14 15:17:36	◥	liamstask (Mibbit@moz-9qig5a.static.sonic.net) has joined #rust
2016-12-14 15:17:38	◥	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has joined #rust
2016-12-14 15:17:46	splitty_	I wouldn't use sinc directly anyway, it's just way too slow
2016-12-14 15:17:56	◣	ubsandroid__ (ubsan@moz-7gu6nl.hi9m.kdv0.fb90.2607.IP) has quit (Quit: <3)
2016-12-14 15:18:07	dm3	talchas, maurer: I need a pointer to something that will live as long as the program does. I won't be putting it into Boxes, just need to allocate a struct and pass the pointer down to the C lib. Is there a hack I could use (you mentioned MAP_32BIT - I'll look into it)!
2016-12-14 15:18:11	◥	ubsandroid (ubsan@moz-1dsu0q.subnet.rcn.com) has joined #rust
2016-12-14 15:18:12	talchas	and it's not always clear which things like that should be 32-bit vs 64-bit and iirc the very first implementations in linux made wrong choices
2016-12-14 15:18:14	J_Arcane	misdreavus, I wouldn't be opposed to that; it seems like a more intuitive interface than requiring by_ref(). 
2016-12-14 15:18:20	dm3	thanks for the hints!
2016-12-14 15:18:23	talchas	dm3: yeah, you can manually mmap with MAP_32BIT to get one
2016-12-14 15:18:24	bobross	splitty_ usually a look up table is used
2016-12-14 15:18:56	talchas	on windows there's probably a similar way, but I don't know it
2016-12-14 15:18:59	bobross	also the guy that posted on /r/rust today - will usher seems to know what he is doing
2016-12-14 15:19:02	◣	alx741 (alx741@moz-g95.8va.152.190.IP) has quit (Connection closed)
2016-12-14 15:19:10	splitty_	Ah, yeah that would make sense :D
2016-12-14 15:19:54	◣	Lunatrius (Lunatrius@moz-v2r.12t.38.77.IP) has quit (Connection closed)
2016-12-14 15:20:05	misdreavus	J_Arcane: yeah, it's more memorable than by_ref which i always have to look up to know i'm using the right name
2016-12-14 15:20:10	◣	Douman (Douman@moz-r4taf9.dynamic.mts-nn.ru) has quit (Connection closed)
2016-12-14 15:20:12	◥	alx741 (alx741@moz-g95.8va.152.190.IP) has joined #rust
2016-12-14 15:20:15	misdreavus	J_Arcane: (and that i occasionally forget exists)
2016-12-14 15:20:16	dm3	I'm 90% sure this is a normal x64 binary with the standard calling convention, just an unfortunate API because it's a port from Windows
2016-12-14 15:20:45	talchas	eh, that's not windows foolishness
2016-12-14 15:20:48	talchas	just foolishness
2016-12-14 15:22:54	◣	arBmind (Andreas@moz-h63s7a.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-14 15:24:40	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-14 15:26:17	J_Arcane	misdreavus, pub fn iter(&mut self) -> &mut Self { self.by_ref()  } // Works a treat! Thanks for the pointers. :)
2016-12-14 15:26:19	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2016-12-14 15:26:26	misdreavus	J_Arcane: (^^)b no problem
2016-12-14 15:26:49	◣	sepp2k (Sepp2k@moz-j1idvi.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-14 15:27:01	◥	insert_name_here (genericname@moz-flkg77.static.twtelecom.net) has joined #rust
2016-12-14 15:27:13	◣	JoshTriplett (josh@moz-8pt5ri.or.frontiernet.net) has left #rust
2016-12-14 15:27:41	◥	hansaplast (hansaplast@moz-j5mh3l.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-14 15:28:19	◣	dm3 (dm3@moz-mbu6cp.dclient.hispeed.ch) has quit (Ping timeout: 121 seconds)
2016-12-14 15:28:23	◣	futile (felix@moz-52ig8c.pools.vodafone-ip.de) has quit (Quit: WeeChat 1.6)
2016-12-14 15:28:24	◥	ubsandroid_ (ubsan@moz-s1mofk.bf8g.05jv.fb90.2607.IP) has joined #rust
2016-12-14 15:29:27	◣	c0170 (c0170@moz-3nkvrk.cable.virginm.net) has quit (Connection closed)
2016-12-14 15:30:03	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-14 15:30:16	◥	hub (hub@moz-59grbl.cpe.pppoe.ca) has joined #rust
2016-12-14 15:30:40	◥	Lunatrius (Lunatrius@moz-v2r.12t.38.77.IP) has joined #rust
2016-12-14 15:31:43	◣	hansaplast (hansaplast@moz-j5mh3l.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:32:06	◥	geemili (geemili@moz-v6j.c8a.50.50.IP) has joined #rust
2016-12-14 15:32:10	◣	ubsandroid (ubsan@moz-1dsu0q.subnet.rcn.com) has quit (Ping timeout: 121 seconds)
2016-12-14 15:32:39	geemili	I'm having issues installing rust on GuixSD
2016-12-14 15:32:52	◣	mexisme2 (mexisme@moz-i5v.49e.149.118.IP) has quit (Connection closed)
2016-12-14 15:32:56	◥	mexisme (mexisme@moz-15mtqr.vf.net.nz) has joined #rust
2016-12-14 15:33:52	geemili	When I run rustup-init.sh it downloads the installer, and then says it can
2016-12-14 15:34:08	geemili	't find anything in the tmp folder
2016-12-14 15:35:04	@steveklabnik	what is guixsd?
2016-12-14 15:35:11	geemili	When I download the installer manually, it says, `The file './rustup-init' does not exist or could not be executed.`
2016-12-14 15:35:34	geemili	steveklabnik: It's a distribution of linux based on Guix
2016-12-14 15:35:35	◣	julien (julien@moz-3182hc.static.cablecom.ch) has quit (Quit: leaving)
2016-12-14 15:35:42	@steveklabnik	ah, interesting
2016-12-14 15:35:45	geemili	Guix being a functional package manager
2016-12-14 15:36:04	◥	njn (chatzilla@moz-alnh9n.optusnet.com.au) has joined #rust
2016-12-14 15:36:04	@steveklabnik	yeah for some reason the SD made me not quite get it, i've heard of guix
2016-12-14 15:37:25	@steveklabnik	anyway. yeah, seems odd
2016-12-14 15:38:53	◣	jbradberry (jrb@moz-kpp3mi.biz.rr.com) has quit (Ping timeout: 121 seconds)
2016-12-14 15:39:22	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-14 15:39:30	◥	xfix (konrad@moz-3smirc.pw) has joined #rust
2016-12-14 15:40:43	◣	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:40:45	◣	mastizada (Thunderbird@moz-288.r0a.3.188.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:41:04	J_Arcane	cooool. Now I can do fun stuff like this: assert!(Roller::new("4d6").iter().skip_while(|&x| x < 13).take(1).last().unwrap() >= 13);
2016-12-14 15:43:29	◣	mr-bt (mr-bt@moz-8r4eoh.range109-155.btcentralplus.com) has quit (Connection closed)
2016-12-14 15:45:19	◣	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-14 15:46:53	◥	wak-work (wak-work@moz-usnsuh.hjoo.ubad.015c.2620.IP) has joined #rust
2016-12-14 15:47:03	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Ping timeout: 121 seconds)
2016-12-14 15:47:07	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2016-12-14 15:47:32	◣	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2016-12-14 15:47:50	◣	creationix (creationix@moz-69oa2g.cpe.cableone.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 15:48:06	◣	canaltinova (uid191250@moz-l3qbqh.tooting.irccloud.com) has quit (Quit: )
2016-12-14 15:49:14	◣	rafaeldelucena (Rafael@moz-dfh5vg.floripa.net.br) has quit (Connection closed)
2016-12-14 15:49:29	hub	J_Arcane: does it roll better than my dice?
2016-12-14 15:50:44	J_Arcane	hub, It's just using the standard thread_rng for the time being. So it depends on whether your real dice are more or less true than your computer's RNG. ;)
2016-12-14 15:51:14	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-14 15:52:12	bluss	skip_while().take(1).last() ? That's .find() :)
2016-12-14 15:53:23	◣	fwiw (matematikaa@moz-kur.9p4.81.36.IP) has quit (Quit: Leaving)
2016-12-14 15:55:11	◣	undeadleech (undeadleech@moz-131abv.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2016-12-14 15:56:00	◣	mjs2600 (mjs2600@moz-363rui.vt.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 15:56:47	Ralith	J_Arcane: s/new/FromStr::from_str/
2016-12-14 15:56:53	◣	wccole (quassel@moz-bm54rh.al.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-14 15:57:23	J_Arcane	Ralith, hmm?
2016-12-14 15:57:45	J_Arcane	Making a feature request? 
2016-12-14 15:58:00	Ralith	just an API design suggestion
2016-12-14 15:58:49	Ralith	geemili: you should use a properly packaged rust rather than trying to cram such a stateful thing as rustup into your environment
2016-12-14 15:59:03	◣	stack (urb@moz-6jc048.retail.telecomitalia.it) has quit (Ping timeout: 121 seconds)
2016-12-14 15:59:18	Ralith	NixOS has official packages, plus https://github.com/solson/rust-nightly-nix for nightlies, maybe you can crib
2016-12-14 15:59:34	◣	skeet70 (skeet70@moz-1r774t.static.bresnan.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-14 15:59:48	geemili	Ralith: I know. There
2016-12-14 15:59:51	◥	stack (urb@moz-fj8.0m5.234.95.IP) has joined #rust
2016-12-14 15:59:59	geemili	is actually a package in development
2016-12-14 16:00:31	geemili	I compiling it right now, but I hoped to get it done sooner.
2016-12-14 16:00:33	◥	rootnode (rootnode@moz-jnhkca.ap.nuro.jp) has joined #rust
2016-12-14 16:00:50	J_Arcane	Ralith, I'll consider it. The requirements of the FromStr type may need better support from the parser, which at present just panics on bad syntax rather than returning an Err().
2016-12-14 16:00:53	geemili	Also, the compiler ran out of memory the first time I tried 
2016-12-15 10:59:01	◥	d8v3 (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2016-12-15 10:59:01	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-15 10:59:01	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-15 10:59:01	⚡	Channel #rust: 1243 nicks (17 ops, 0 halfops, 3 voices, 1223 normals)
2016-12-15 10:59:01	◥	sck_ (sck@moz-6hf9u4.dyn.as47377.net) has joined #rust
2016-12-15 10:59:03	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-15 10:59:14	◣	TweyII (twey@moz-565.jnt.91.81.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 10:59:38	⚡	You are now known as boon
2016-12-15 10:59:54	◣	mathstuf (mathstuf@moz-gq4995.kitware.com) has quit (Quit: leaving)
2016-12-15 10:59:56	⚡	You are now known as d8v3
2016-12-15 11:00:00	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2016-12-15 11:00:07	breeden_	idk, i feel dubious about registering domains designated for another country
2016-12-15 11:00:17	◣	dinfuehr (dinfuehr@moz-f71fes.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2016-12-15 11:00:51	◣	lucian (lucian@moz-iuo.htl.74.194.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 11:01:02	◣	iiddnn__ (iacopodeeno@moz-fompeo.retail.telecomitalia.it) has quit (Client exited)
2016-12-15 11:01:19	⚡	rail-lunch is now known as rail
2016-12-15 11:02:29	jdub	breeden_: The .rs domain policy makes it non-dubious. Anyone can register one.
2016-12-15 11:02:57	⚡	You are now known as boon
2016-12-15 11:03:22	breeden_	oh ya?
2016-12-15 11:03:45	◣	Jackneill (Jackneill@moz-b3b4c7.pool.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-15 11:03:56	◥	kartik (k4rtik@moz-rnf.e4k.16.138.IP) has joined #rust
2016-12-15 11:04:19	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2016-12-15 11:04:23	◣	madmalik (uid13697@moz-mac7ts.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-15 11:04:34	◥	dinfuehr (dinfuehr@moz-5chm5l.highway.telekom.at) has joined #rust
2016-12-15 11:04:37	◣	arnaud (arnaud@moz-s2u8u8.dsl.cantv.net) has quit (Ping timeout: 121 seconds)
2016-12-15 11:04:43	◣	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has quit (Quit: WeeChat 1.6)
2016-12-15 11:05:03	◥	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has joined #rust
2016-12-15 11:05:34	◥	ygrek_ (user@moz-8j9aeu.org.ua) has joined #rust
2016-12-15 11:05:56	◥	jerknextdoor (Cameron@moz-4jmrvk.in.comcast.net) has joined #rust
2016-12-15 11:06:10	@steveklabnik	yeah
2016-12-15 11:06:14	@steveklabnik	i have multiple
2016-12-15 11:06:15	@steveklabnik	no issues
2016-12-15 11:06:30	jdub	steveklabnik: Did you get them via istanco.com?
2016-12-15 11:07:05	@steveklabnik	net.im
2016-12-15 11:07:19	@steveklabnik	which is not that great of a registrar to be honest
2016-12-15 11:08:10	◣	jnvsor (j@moz-v7j3fh.dynamic.ziggo.nl) has quit (Connection closed)
2016-12-15 11:08:27	◣	kartik (k4rtik@moz-rnf.e4k.16.138.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 11:09:21	◥	sluggo (Mibbit@moz-t5bevs.ar.comcast.net) has joined #rust
2016-12-15 11:09:25	◥	mexisme2 (mexisme@moz-hj7.ait.149.118.IP) has joined #rust
2016-12-15 11:09:56	jdub	steveklabnik: Gives me another price point to compare against though - thanks!
2016-12-15 11:10:49	jdub	More expensive as it happens, by about USD$10
2016-12-15 11:11:04	◣	mexisme (mexisme@moz-15mtqr.vf.net.nz) has quit (Ping timeout: 121 seconds)
2016-12-15 11:11:21	jdub	Let me save you some money, steveklabnik.
2016-12-15 11:11:44	@steveklabnik	:)
2016-12-15 11:11:53	◥	Freyskeyd (Freyskeyd@moz-9m9m23.dsl.ovh.fr) has joined #rust
2016-12-15 11:11:53	@steveklabnik	yeah id never heard of that registrar
2016-12-15 11:11:55	@steveklabnik	i only use this one for.rs
2016-12-15 11:11:56	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2016-12-15 11:12:00	@steveklabnik	so maybe i should switch
2016-12-15 11:12:43	jdub	steveklabnik: As it happens, transfers to ISTanCo for .rs are $0.
2016-12-15 11:13:09	▷	jdub stops using his infomercial voice.
2016-12-15 11:13:09	@steveklabnik	nice
2016-12-15 11:13:16	◣	InaneBob (InaneBob@moz-jhsj5b.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2016-12-15 11:13:35	jdub	I hasten to add that I know nothing of their admin system or business practices, etc.
2016-12-15 11:14:50	◣	seif (uid11725@moz-4dsro4.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-15 11:15:13	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2016-12-15 11:16:31	◣	Freyskeyd (Freyskeyd@moz-9m9m23.dsl.ovh.fr) has quit (A TLS packet with unexpected length was received.)
2016-12-15 11:16:34	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-15 11:16:42	◥	jedahan (jedahan@moz-2vb1rk.ftas.verizon.net) has joined #rust
2016-12-15 11:17:00	◣	jedahan (jedahan@moz-2vb1rk.ftas.verizon.net) has quit (Connection closed)
2016-12-15 11:17:21	◥	jedahan (jedahan@moz-2vb1rk.ftas.verizon.net) has joined #rust
2016-12-15 11:17:44	◥	petson__ (petson@moz-8lele1.dyn.telefonica.de) has joined #rust
2016-12-15 11:20:19	◥	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2016-12-15 11:20:38	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-15 11:21:12	◥	briansmith (uid140735@moz-3mpm8c.highgate.irccloud.com) has joined #rust
2016-12-15 11:21:13	◥	jrmuizel (jrmuizel@moz-vc2goe.3t38.sij7.f0c8.2607.IP) has joined #rust
2016-12-15 11:22:11	◣	petson__ (petson@moz-8lele1.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2016-12-15 11:22:16	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2016-12-15 11:22:40	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-15 11:23:23	◥	manjaro-kde5 (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2016-12-15 11:24:10	wcrichto	is there any better solution for String literals than `"...".to_string()`?
2016-12-15 11:24:16	wcrichto	(i.e. less verbose)
2016-12-15 11:24:51	vegai	to be irritatingly technical, there's no such thing as a String literal
2016-12-15 11:24:58	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-15 11:25:02	vegai	so you need to always built them up from something
2016-12-15 11:25:05	vegai	build
2016-12-15 11:25:16	◥	freefall (ff@moz-vvd.78t.166.46.IP) has joined #rust
2016-12-15 11:25:37	wcrichto	Yeah which is fine
2016-12-15 11:25:39	vegai	would you prefer String::from("meep")?
2016-12-15 11:25:47	◥	tobz (textual@moz-29b6oo.dyn.mit.edu) has joined #rust
2016-12-15 11:25:53	wcrichto	I prefer something that is a) standard and b) less characters
2016-12-15 11:26:05	wcrichto	e.g.
2016-12-15 11:26:08	wcrichto	s"...."
2016-12-15 11:26:23	wcrichto	kind of like python regex format, r"..."
2016-12-15 11:26:40	vegai	no syntax, no
2016-12-15 11:26:42	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-15 11:26:45	briansmith	I find myself wondering what 'static means. I thought I knew, but then I saw the documentation for Box::downcast uses 'static and I don't see how Box can be used with 'static lifetime things at all.
2016-12-15 11:26:47	Fenrir	"...".into() should work too
2016-12-15 11:26:51	vegai	you might also consider let x: String = "meep".into() 
2016-12-15 11:27:02	tromey	you could write a s! macro perhaps
2016-12-15 11:27:32	wcrichto	all fair suggestions, although i don't like `.into()` because it's very unclear what you're into-ing
2016-12-15 11:27:32	◥	Ploppz (ploppz@moz-qal8cm.studby.ntnu.no) has joined #rust
2016-12-15 11:28:01	briansmith	In particular, can I use &'static to force a reference to be only to things defined using "static NAME: Type"?
2016-12-15 11:28:12	briansmith	And, if not, is there a way to do that?
2016-12-15 11:28:32	bluss	briansmith: there is no way to do that with types
2016-12-15 11:28:34	◥	SeanTater (bzlandfill@moz-545.198.244.168.IP) has joined #rust
2016-12-15 11:28:35	vegai	perhaps downcast is unsafe and makes static out of non-static
2016-12-15 11:28:48	talchas	&'static means "will never be freed (until the program exits)"
2016-12-15 11:29:04	vegai	https://doc.rust-lang.org/src/alloc/up/src/liballoc/boxed.rs.html#107
2016-12-15 11:29:19	talchas	static FOO: Type is the easiest way to get that, but string literals do that, and leaking a Box also does that
2016-12-15 11:29:22	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2016-12-15 11:29:24	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2016-12-15 11:29:35	vegai	https://doc.rust-lang.org/src/alloc/up/src/liballoc/boxed.rs.html#432 <- correct line
2016-12-15 11:29:39	jdub	tromey: Mmm, rather like vec!, there should be a string!
2016-12-15 11:29:43	briansmith	I see. I think there's a use for a &'really-static that can only reference things defined as `static NAME: Type`.
2016-12-15 11:30:02	jdub	tromey: Oh, Tromey tromey! Hi.
2016-12-15 11:30:06	tromey	hi!
2016-12-15 11:30:07	briansmith	For example, macOS has an API that takes a pointer to memory that must have been statically allocated.
2016-12-15 11:30:13	◥	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has joined #rust
2016-12-15 11:30:25	talchas	what does it do that needs that?
2016-12-15 11:30:39	talchas	(because on the face of it, that API is insane unless it's doing something really weird)
2016-12-15 11:31:22	KiChjang	playbot, "string".into()
2016-12-15 11:31:25	⚡	Notice(playbot): error[E0282]: unable to infer enough type information about `_`
2016-12-15 11:31:25	⚡	Notice(playbot):  --> <anon>:9:5
2016-12-15 11:31:25	⚡	Notice(playbot):   |
2016-12-15 11:31:25	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hAwgID)
2016-12-15 11:31:31	jdub	steveklabnik: btw, istanco seems pretty good so far. Inoffensive admin, autorenew...
2016-12-15 11:31:46	KiChjang	yeah, can't infer enough info simply by using into()
2016-12-15 11:31:53	KiChjang	needs target type
2016-12-15 11:32:02	◥	weaksauce (weaksauce@moz-sd5l47.oc.cox.net) has joined #rust
2016-12-15 11:32:16	◣	lnostdal (lnostdal@moz-kuocn6.90-149-73.nextgentel.com) has quit (Connection closed)
2016-12-15 11:32:31	◣	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2016-12-15 11:32:43	briansmith	talchas: It is their "run once" API, and it is to avoid memory barriers 
2016-12-15 11:33:02	briansmith	In particular, the implementation of the function relies on the fact that there has never been a non-zero value in that memory.
2016-12-15 11:33:33	◣	jdm (jdm@66.207.193.21) has quit (Connection closed)
2016-12-15 11:33:42	◥	jdm (jdm@moz-jg5d3s.3t38.sij7.f0c8.2607.IP) has joined #rust
2016-12-15 11:33:42	⚡	Mode #rust [+o jdm] by ChanServ
2016-12-15 11:34:16	◣	sluggo (Mibbit@moz-t5bevs.ar.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-15 11:35:01	talchas	that seems like a fundamentally insane way to do it
2016-12-15 11:35:25	briansmith	It makes a lot of sense, because every time but the first, there will be a non-zero value there.
2016-12-15 11:35:28	talchas	that's the basic problem of multithreaded initialization, and that is completely unnecessary
2016-12-15 11:36:13	briansmith	So, they basically do something like "read without barrier, if not zero, done. otherwise, read with barrier. if not zero done. otherwise, call the init function."
2016-12-15 11:36:35	talchas	"all zeros is the legal initialization state, it's your problem to make sure that every thread that might call once(&x) see those zeros written"
2016-12-15 11:36:36	▷	rkruppe shrieks in terror
2016-12-15 11:36:49	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2016-12-15 11:37:19	talchas	"it was initialized that way" is one solution to that, "we wrote zeros there before publishing the pointer (and use release/consume on that publish)" is another
2016-12-15 11:37:51	◥	ixti (ixti@moz-bfujrv.dynamicip.rima-tde.net) has joined #rust
2016-12-15 11:38:12	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2016-12-15 11:38:16	talchas	also on x86 you don't need that barrier, and on not-x86 you probably need a barrier on the first read
2016-12-15 11:38:23	bluss	isn't this something where you use Rust's abstraction powers to wrap this in a safe interface using unsafe code. It's not surprising the type system can't express this natively
2016-12-15 11:38:34	rkruppe	bluss++
2016-12-15 11:39:00	rkruppe	see e.g. std::sync::Once
2016-12-15 11:39:11	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-15 11:39:24	talchas	also this API is insane and you should just use Once
2016-12-15 11:39:55	talchas	or give it a known-zeros memory and see if it refuses or is just badly documented
2016-12-15 11:41:00	briansmith	talchas: It says anything except static/global is undefined behavior: https://developer.apple.com/reference/dispatch/dispatch_once_t
2016-12-15 11:41:15	@steveklabnik	jdub: cool! :)
2016-12-15 11:41:18	briansmith	bluss: rkruppe: I am actually trying to improve std::sync::once.
2016-12-15 11:41:24	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-15 11:42:08	◥	wccole (quassel@moz-bm54rh.al.comcast.net) has joined #rust
2016-12-15 11:42:14	⚡	bholley is now known as bholley_away
2016-12-15 11:42:24	SeanTater	Is there a way I can use a mut-ref method like a value-passing one, e.g. o.mth(&mut self,..) as o.mth(self,..), so I can return the result without worrying about the lifetime of "o"?
2016-12-15 11:42:38	rkruppe	briansmith: well then what's the problem?
2016-12-15 11:42:42	◥	undeadleech (undeadleech@moz-1gdrfe.dip0.t-ipconnect.de) has joined #rust
2016-12-15 11:43:03	emilsp	so, I have a struct that has a member that is only specified as a trait, is there a way I could also have a let trait_impl = if true { one_impl } else {other_impl}; let my_struct = {trait: trait_impl}; ?
2016-12-15 11:43:35	◣	`jpg (jpg@moz-9lrik3.id.au) has quit (Ping timeout: 121 seconds)
2016-12-15 11:43:52	◥	kitsu (kitsu@moz-knt.i35.130.188.IP) has joined #rust
2016-12-15 11:44:51	briansmith	In more detail, I'm prototyping an extension to lazy_static! to better support CPUID-needing applications.
2016-12-15 11:44:57	◥	Guest86 (textual@moz-akl.16j.140.62.IP) has joined #rust
2016-12-15 11:45:05	talchas	briansmith: well, assuming that that is the reason for them requiring globals, they are insane and/or incompetent
2016-12-15 11:45:16	rkruppe	emilsp: no, and a struct like Foo { x: Trait } can't even be defined
2016-12-15 11:45:48	briansmith	talchas: I don't want to debate the merits of them requiring that. From my perspective, if I can use the type system to guarantee the thing they require, I'd like to do that.
2016-12-15 11:45:50	@steveklabnik	can't it? it'd be unsized
2016-12-15 11:45:53	talchas	more reasonable reasons would be doing hacky things where it uses &dispatch_once_t as a magic value or something
2016-12-15 11:45:57	bluss	briansmith: ok, I see then it's not necessarily possible to redesign the API to handle this requirement
2016-12-15 11:46:04	@steveklabnik	(which is not what you'd want but i thought it'd work)_
2016-12-15 11:46:16	talchas	briansmith: yeah, I'm just saying that it's no surprise that no one wants this
2016-12-15 11:46:18	rkruppe	steveklabnik: uh right
2016-12-15 11:46:25	talchas	(or rather, no one thought of it)
2016-12-15 11:46:32	talchas	(and there's no way it would be added)
2016-12-15 11:46:38	◥	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has joined #rust
2016-12-15 11:46:38	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2016-12-15 11:47:01	◥	xrash (smuxi@moz-e2t.naj.60.189.IP) has joined #rust
2016-12-15 11:47:05	briansmith	I'm not sure why there's "no way" it would be added, since it would be relatively easy to add, AFAICT.
2016-12-15 11:47:27	briansmith	Perhaps there's only one possible need for it, and that need can be met another way. Not clear that's the case yet.
2016-12-15 11:47:37	emilsp	rkruppe: it can, I've got that working
2016-12-15 11:47:44	talchas	it would be a lifetime longer than 'static, which would mess up all kinds of things
2016-12-15 11:47:46	emilsp	but I guess I'll just branch a lot in main
2016-12-15 11:48:01	rkruppe	emilsp: yeah it can but it won't do what you want
2016-12-15 11:48:26	talchas	and the APIs that would the slightest use for it are this piece of weirdness and wildly unsafe code
2016-12-15 11:48:40	rkruppe	briansmith: I still don't understand what your issue is. why can't you wrap that API for a Once-analogue
2016-12-15 11:49:15	◣	PeterSP (peter@moz-jf28ru.fios.verizon.net) has quit (Connection closed)
2016-12-15 11:49:43	◥	bereddy (bereddy@moz-2e6qc0.fios.verizon.net) has joined #rust
2016-12-15 11:49:52	◥	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has joined #rust
2016-12-15 11:50:18	◥	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has joined #rust
2016-12-15 11:51:04	briansmith	I am trying to understand what 'static means *exactly*, and also learn why it might be problematic to make a 'really-static. Which, mission accomplished, I think.
2016-12-15 11:51:38	briansmith	In particular, if it were straightfoward to do it that way, that would be the safest and fastest and so the best way.
2016-12-15 11:51:53	briansmith	There are other ways of doing it too.
2016-12-15 11:52:31	◥	Rusky (rpjohnst@moz-e94.tqe.98.155.IP) has joined #rust
2016-12-15 11:52:36	@steveklabnik	WindowsBunnySuperposition: https://www.codeproject.com/Tips/1053658/Win-GUI-Programming-In-Rust-Language <- randomly ran into some of your work today
2016-12-15 11:52:56	talchas	given that half of SO suggests that the API isn't doing anything interesting and is in fact just unwilling to assume users have even two brain cells, I wouldn't worry about it
2016-12-15 11:53:36	talchas	though it's still possible they intend to allow centralized shenanigans based on address, and that's why they don't
2016-12-15 11:54:01	◣	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has quit (Ping timeout: 121 seconds)
2016-12-15 11:54:02	briansmith	talchas: That's something I didn't consider, though I don't think that's the case.
2016-12-15 11:54:39	briansmith	In my own code, I do use a lazy_static! deap within code that is frequently triggered, so avoiding barriers in general is attractive.
2016-12-15 11:54:55	Rusky	anybody who knows rustc's parser- when handling numeric/string literals, is there a reason the lexer just passes through a Symbol and lets the parser convert them to their actual value?
2016-12-15 11:54:57	briansmith	And, that would be the case for any CPUID-dispatched code for SIMD, etc.
2016-12-15 11:55:02	◥	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has joined #rust
2016-12-15 11:55:08	◣	wcrichto (wcrichto@moz-mta.kan.12.128.IP) has quit (Quit: Adios!)
2016-12-15 11:55:22	talchas	lazy_static uses Once, which should be fine
2016-12-15 11:55:31	@steveklabnik	Rusky: #rust-internals or #rustc should be more helpful, i'd think
2016-12-15 11:55:41	Rusky	ah yeah that'd make sense
2016-12-15 11:55:43	◥	pylbrecht (pylbrecht@moz-4r5f2d.6km4.884h.8109.2a02.IP) has joined #rust
2016-12-15 11:55:44	◣	handyman (handyman@moz-4ijoho.subp.5lka.0645.2601.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-15 11:56:06	talchas	(though at the moment it is overly cautious, which results in no slowdown on x86, but I can't swear to other platforms)
2016-12-15 11:56:41	talchas	I'm not sure if there are actual platforms where load-seqcst is more expensive than load-acquire
2016-12-15 11:56:42	briansmith	talchas: Yes, in fact this is just me investigating that issue.
2016-12-15 11:57:20	talchas	(on most platforms either load-seqcst has to be expensive or store-seqcst does, and every library picks store-seqcst)
2016-12-15 11:57:20	briansmith	ARM provides guidance on which to use on which platforms.
2016-12-15 11:57:35	◣	O01eg (o01eg@moz-k394mt.7p34.dpmm.2698.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 11:58:24	◥	Norf (norfen@moz-sl4.eu3.112.66.IP) has joined #rust
2016-12-15 11:58:41	briansmith	What ARM says, in particular, is that all languages/libraries need to be consistent so that cross-language synchronization works. Though that probably doesn't apply to the lazy_static! case.
2016-12-15 11:58:52	◥	mpdrescher (Thunderbird@moz-ka9lpo.dip0.t-ipconnect.de) has joined #rust
2016-12-15 11:59:49	◣	eckhardt (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-15 12:00:16	◥	eckhardt (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-15 12:00:17	◥	petson__ (petson@moz-8lele1.dyn.telefonica.de) has joined #rust
2016-12-15 12:00:21	◣	Ploppz (ploppz@moz-qal8cm.studby.ntnu.no) has quit (Quit: WeeChat 1.6)
2016-12-15 12:00:46	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2016-12-15 12:01:09	◥	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has joined #rust
2016-12-15 12:02:13	◣	mpdrescher (Thunderbird@moz-ka9lpo.dip0.t-ipconnect.de) has quit (Client exited)
2016-12-15 12:02:24	◣	angusi (angusai@moz-v8q.do5.71.82.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:02:32	◥	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has joined #rust
2016-12-15 12:02:42	◣	rakm (rakm@moz-prc.jsh.115.17.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 12:02:53	◥	xliiv (xliiv@moz-893luh.icpnet.pl) has joined #rust
2016-12-15 12:03:08	Norf	Is there a way to get more symbol information out of rustc for debugging? Gdb can't find some of my extern c symbols.
2016-12-15 12:03:42	◥	eckhard__ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-15 12:03:51	◣	eckhardt (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-15 12:04:02	talchas	are they also marked #[no_mangle] and public?
2016-12-15 12:04:07	◣	SeanTater (bzlandfill@moz-545.198.244.168.IP) has quit (Quit: CGI:IRC)
2016-12-15 12:04:29	◣	gyng (faux@moz-urnmhv.singnet.com.sg) has quit (Connection closed)
2016-12-15 12:04:37	talchas	if gdb doesn't find them, they aren't there, (or possibly have gotten inlined, but that's unlikely for extern C)
2016-12-15 12:04:47	Sergio	Hmm. I have a function: f<'v: 'h>(values: &mut Thing<'v>) { use_values }, and I'm getting, "the lifetime 'v does not necessarily outlive the lifetime 'h"
2016-12-15 12:04:53	Sergio	Isn't that the point of the 'v: 'h annoation?
2016-12-15 12:05:05	tromey	fwiw I'm always interested in test cases showing gdb problems with rust
2016-12-15 12:05:09	tromey	you can just email them to me
2016-12-15 12:05:11	talchas	but they can get dropped if they aren't pub (and thus rustc can prove nothing is using them), and they may not have the names you expect (if you don't have #[no_mangle])
2016-12-15 12:05:12	@steveklabnik	Sergio: maybe its the code that's wrong, not the signature?
2016-12-15 12:05:17	_habnabit	Sergio, doesn't that mean the compiler can't prove that?
2016-12-15 12:05:25	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-15 12:05:40	◥	Alek (alek@moz-h5408n.bb.online.no) has joined #rust
2016-12-15 12:05:47	KiChjang	when is a ZST useful?
2016-12-15 12:05:48	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-15 12:05:57	Sergio	steveklabnik: Maybe. But I moved that code over from a different module, where it compiled with a similar signature.
2016-12-15 12:06:02	@steveklabnik	huh
2016-12-15 12:06:07	KiChjang	i've heard comments saying that they can be used in type parameters, but that looks very odd
2016-12-15 12:06:11	◥	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has joined #rust
2016-12-15 12:06:14	Sergio	But I think Rust was able to infer more in the previous context.
2016-12-15 12:06:15	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-15 12:06:26	◣	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has quit (Client exited)
2016-12-15 12:06:27	_habnabit	clearly there's something different
2016-12-15 12:06:28	◥	Alek (alek@moz-h5408n.bb.online.no) has joined #rust
2016-12-15 12:06:31	&mbrubeck	 KiChjang: example of ZTS as type parameters: https://blog.mozilla.org/research/2014/06/23/static-checking-of-units-in-servo/
2016-12-15 12:06:36	◣	rapdorian (james@moz-lju231.37.liberty.edu) has quit (Connection closed)
2016-12-15 12:06:38	Norf	talchas: they're not marked no_mangle, I'll give that a try. They come from the linker script so I didn't think they'd get mangled.
2016-12-15 12:06:51	◥	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has joined #rust
2016-12-15 12:07:03	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-15 12:07:06	KiChjang	ohhh, as actual calculation units
2016-12-15 12:07:06	Sergio	Hmm.
2016-12-15 12:07:13	talchas	Norf: well, are you doing extern "C" { fn something_declared_outside_of_rust(); } (or static)
2016-12-15 12:07:16	◥	Alek (alek@moz-h5408n.bb.online.no) has joined #rust
2016-12-15 12:07:20	◥	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has joined #rust
2016-12-15 12:07:27	talchas	or are you doing extern "C" fn something_used_outside_of_rust() { ... }
2016-12-15 12:07:36	talchas	if it's the former, no you odn't need no_mangle
2016-12-15 12:07:50	Norf	talchas: first one, with a static struct
2016-12-15 12:07:51	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-15 12:08:00	&mbrubeck	KiChjang: Another example is http://burntsushi.net/rustdoc/byteorder/enum.BigEndian.html and LittleEndian
2016-12-15 12:08:05	talchas	but it's also not _rust_'s problem strictly
2016-12-15 12:08:13	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2016-12-15 12:08:17	talchas	you can do cargo rustc -v or something to get the exact ld lines being invoked
2016-12-15 12:08:18	KiChjang	so essentially it's used as metadata
2016-12-15 12:08:32	◣	petson__ (petson@moz-8lele1.dyn.telefonica.de) has quit (Client exited)
2016-12-15 12:09:00	KiChjang	i was having serious doubts when someone told me that it's used for extensibility because you can impl traits on them
2016-12-15 12:09:28	KiChjang	but what's the point of implementing a trait on a ZST when it doesn't have data it can work with?
2016-12-15 12:09:29	Sergio	It's probably this HashMap entry lifetime.
2016-12-15 12:09:42	talchas	hmm, what _is_ the flag
2016-12-15 12:09:56	Sergio	I'm pretty sure this code is right...
2016-12-15 12:09:58	Sergio	Hmm.
2016-12-15 12:10:03	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-15 12:10:28	◣	ubsandroid (ubsan@moz-okdb7e.subnet.rcn.com) has quit (Ping timeout: 121 seconds)
2016-12-15 12:10:44	&mbrubeck	KiChjang: It lets you have multiple impls
2016-12-15 12:10:44	briansmith	KiChjang: Consider a value that you only need on one platform, e.g. 64-bit platforms but not 32-bit platforms.
2016-12-15 12:11:04	briansmith	On 64-bit platforms, you can define the type to have a field containing the actual value.
2016-12-15 12:11:28	briansmith	On 32-bit platforms, you can leave the struct empty. This lets you reduce the amount of conditional code.
2016-12-15 12:11:55	&mbrubeck	KiChjang: Here's an example I wrote yesterday: https://is.gd/6G6cDs
2016-12-15 12:12:04	&mbrubeck	context for that example: https://gist.github.com/mbrubeck/3961b9285842325ea955fbce2611959d
2016-12-15 12:13:03	Norf	talchas: actually, it looks like rust's default debug level is 2. I had to crank gcc up to 3 to get some missing symbols. That might be it.
2016-12-15 12:13:59	◥	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has joined #rust
2016-12-15 12:14:02	tromey	gcc -g3 is mostly about emitting cpp macros
2016-12-15 12:14:05	Sergio	Hmm, I read the error incorrectly. The fix is now obvious.
2016-12-15 12:14:14	Sergio	But, I don't think that requirement is necessary. Here's the code: https://is.gd/g5kPw0
2016-12-15 12:14:29	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2016-12-15 12:14:41	Sergio	Why should 'h outlive 'v? Seems like you want the opposite. Maybe the issue is that the entry API isn't as permissive.
2016-12-15 12:14:56	◥	petson__ (petson@moz-8lele1.dyn.telefonica.de) has joined #rust
2016-12-15 12:16:04	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2016-12-15 12:16:15	Sergio	Oh!
2016-12-15 12:16:25	Sergio	Got it.
2016-12-15 12:16:27	Sergio	Oh, Rust.
2016-12-15 12:16:56	Sergio	Actually, no, don't got it.
2016-12-15 12:16:57	◥	ubsandroid (ubsan@moz-okdb7e.subnet.rcn.com) has joined #rust
2016-12-15 12:17:00	KiChjang	mbrubeck, hmm, so essentially when you want a uniform API you can use traits and then ZSTs to "select" which branch of the code to take
2016-12-15 12:17:02	◣	petson__ (petson@moz-8lele1.dyn.telefonica.de) has quit (Client exited)
2016-12-15 12:17:26	KiChjang	when i encounter these though, i often think that it's an enclosed set
2016-12-15 12:17:30	KiChjang	rather than an open set
2016-12-15 12:17:40	KiChjang	so an enum may have been more appropriate
2016-12-15 12:17:52	&mbrubeck	but an enum would mean branching at runtime
2016-12-15 12:18:33	Sergio	Yeah, not sure why https://is.gd/g5kPw0
2016-12-15 12:18:54	◥	Kingsqueeee (kingsley@moz-46ia3t.bchsia.telus.net) has joined #rust
2016-12-15 12:19:28	◣	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2016-12-15 12:19:59	jdub	mbrubeck: Oh, so byteorder really properly does *nothing* when you're converting a value that doesn't need converting in context
2016-12-15 12:20:09	&mbrubeck	right!
2016-12-15 12:20:20	◣	kohelet (kohelet@moz-a0o.fmp.15.216.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:20:20	jdub	Nothing up its sleeve!
2016-12-15 12:20:51	jdub	mbrubeck: thanks for another rust epiphany :-)
2016-12-15 12:21:05	◣	Chane (Mibbit@moz-2gq.82u.101.160.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-15 12:21:20	◥	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has joined #rust
2016-12-15 12:21:38	◣	eckhardt_ (eckhardt@moz-0b0.bm2.248.98.IP) has quit (Connection closed)
2016-12-15 12:21:41	Ploppz	is it possible to static dispatch on boolean value?
2016-12-15 12:21:41	Ploppz	eventually enum
2016-12-15 12:21:54	Ploppz	e.g. have enum/boolean as generic parameter
2016-12-15 12:22:32	◣	bholley_away (bholley@moz-8d0g9h.ca.comcast.net) has quit (Connection closed)
2016-12-15 12:22:50	Sergio	What does that mean?
2016-12-15 12:23:09	XMPPwocky	if i understand you correctly, no
2016-12-15 12:23:11	◥	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2016-12-15 12:23:11	Sergio	You want to do something if the value is true or false?
2016-12-15 12:23:12	Sergio	And you want the decision to be made statically?
2016-12-15 12:23:14	briansmith	Ploppz: trait Boolean {} struct True {} struct False {} unsafe impl Boolean for True {} unsafe impl Boolean for False {}.
2016-12-15 12:23:31	briansmith	Then use `True` and `False` instead of `true` and `false`.
2016-12-15 12:23:36	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2016-12-15 12:23:40	Ploppz	thanks; why is it `unsafe`?
2016-12-15 12:23:48	◣	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:23:52	◣	sp3d (s@moz-l4nlea.mnmb.msaa.0240.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:24:14	briansmith	Ploppz: `unsafe impl` means something different than `unsafe`.
2016-12-15 12:24:18	◣	talklittle (talklittle@moz-8den4m.l0lm.9cq6.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:24:24	◣	KiChjang (KiChjang@moz-fe7dn3.28m4.nqec.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:24:24	◣	cyphase (cyphase@moz-nec92m.c70l.44fu.0640.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:24:32	◣	jrmuizel (jrmuizel@moz-vc2goe.3t38.sij7.f0c8.2607.IP) has quit (Connection closed)
2016-12-15 12:24:34	◣	thirtythreeforty (quassel@moz-lae5en.j7ob.v0gv.0558.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:24:40	briansmith	Imagine the disaster of `struct Null {} impl Boolean for Null {}`.
2016-12-15 12:25:08	briansmith	Then you'd have three-value logic, but your code would be expecting only two-value logic.
2016-12-15 12:25:38	◣	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has quit (Ping timeout: 121 seconds)
2016-12-15 12:25:41	◣	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:25:52	◥	fyolnish (fyolnish@moz-01nphm.so-net.ne.jp) has joined #rust
2016-12-15 12:26:01	◣	jackpot51 (jackpot@moz-0bkcrd.qmki.1413.0280.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:26:21	◥	thirtythreeforty (quassel@moz-n0p.1hi.252.73.IP) has joined #rust
2016-12-15 12:26:29	rkruppe	briansmith: the trait needs to be unsafe too
2016-12-15 12:26:39	talchas	Norf: ah, back, and it's "cargo rustc -- -Z print-link-args" to see what is being passed to the linker
2016-12-15 12:27:14	◥	ws__ (ws@moz-qnkaha.customer.cdi.no) has joined #rust
2016-12-15 12:27:27	talchas	it's possible unused stuff in linker scripts is getting stripped by the -O1 being passed to the linker, I'm not sure exactly what ld does with that these days
2016-12-15 12:27:59	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2016-12-15 12:28:47	◥	talklittle (talklittle@moz-lnrf2a.l0lm.9cq6.0646.2601.IP) has joined #rust
2016-12-15 12:28:51	briansmith	Does #[cfg(not(target_feature="sse"))] mean "sse is definitely not available (so don't try to detect it at runtime" or "sse isn't guaranteed to be available, so you must detect it at runtime before you try to use it"
2016-12-15 12:28:54	◥	cyphase (cyphase@moz-nec92m.c70l.44fu.0640.2601.IP) has joined #rust
2016-12-15 12:28:57	◣	ghisvail_ (ghisvail@moz-3pvolo.ic.ac.uk) has quit (Client exited)
2016-12-15 12:29:12	◥	KiChjang (KiChjang@moz-fe7dn3.28m4.nqec.0646.2601.IP) has joined #rust
2016-12-15 12:29:27	◣	vadix_ (vadix@moz-jmj.0nm.219.24.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:29:31	talchas	I believe target_feature sse generally means "you can use sse without checking"
2016-12-15 12:29:54	◣	fyolnish (fyolnish@moz-01nphm.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2016-12-15 12:30:01	◥	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has joined #rust
2016-12-15 12:30:04	◥	wcrichto (wcrichto@moz-mta.kan.12.128.IP) has joined #rust
2016-12-15 12:30:15	◥	jackpot51 (jackpot@moz-0bkcrd.qmki.1413.0280.2601.IP) has joined #rust
2016-12-15 12:30:22	◥	Quxxy2 (Quxxy@moz-0nv.jkp.167.59.IP) has joined #rust
2016-12-15 12:30:27	whitequark	briansmith: "sse is definitely not available" seems like an impossible condition, with x86 isa being backwards compatible and all
2016-12-15 12:30:29	◥	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has joined #rust
2016-12-15 12:31:09	briansmith	whitequark: Sure, pick AVX2 or whatever.
2016-12-15 12:31:17	◥	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has joined #rust
2016-12-15 12:31:25	briansmith	Actually, the case I care more about is ARM NEON.
2016-12-15 12:31:46	◣	Douman (Douman@moz-d9ssbq.dynamic.mts-nn.ru) has quit (Quit: )
2016-12-15 12:31:53	briansmith	If the target is guaranteed to not have NEON then I don't want to include the NEON code and feature detection logic.
2016-12-15 12:31:55	rkruppe	briansmith: target_feature=foo means the feature is known to be available and not(..) is just negation. do the math
2016-12-15 12:32:06	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2016-12-15 12:32:41	briansmith	OK, then what would be a good way to extend that to allow us to check "known not to be available" or "must not be used at all."
2016-12-15 12:33:10	rkruppe	I don't think that's a thing
2016-12-15 12:34:00	briansmith	Yes, I'll make an RFC to add it.
2016-12-15 12:34:15	rkruppe	there is -feat (complement to +feat) but that just means not assuming the feature if it's the default for the target
2016-12-15 12:34:22	◥	mpdrescher (Thunderbird@moz-ka9lpo.dip0.t-ipconnect.de) has joined #rust
2016-12-15 12:35:12	rkruppe	between + and - there isn't really a convenient syntax left for this
2016-12-15 12:35:35	rkruppe	briansmith: also I meant not a thing *in LLVM*
2016-12-15 12:35:45	◣	eckhard__ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-15 12:35:46	jdub	briansmith: I imagine this will factor into acrichto's ideas about scenarios, once it expands beyond operating system things.
2016-12-15 12:36:12	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-15 12:37:22	◣	wcrichto (wcrichto@moz-mta.kan.12.128.IP) has quit (Quit: Sleeping...)
2016-12-15 12:37:22	◥	eckhard__ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-15 12:37:22	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-15 12:38:00	◣	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Connection closed)
2016-12-15 12:38:21	◣	tobz (textual@moz-29b6oo.dyn.mit.edu) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 12:38:27	◣	mcoffin (mcoffin@moz-fc3f8c.ga.charter.com) has quit (Ping timeout: 121 seconds)
2016-12-15 12:38:52	◣	eckhard__ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-15 12:39:16	briansmith	rkruppe: I am OK with an inconvenient syntax.
2016-12-15 12:39:18	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-15 12:39:57	rkruppe	briansmith: can you give an example of a case where such a cfg would be true?
2016-12-15 12:40:00	◣	creationix (creationix@moz-69oa2g.cpe.cableone.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-15 12:40:02	briansmith	Also, I don't know that it matters at the LLVM level. The distinction between "must not assume without checking" and "must not use even if you check" seems like purely a front-end issue.
2016-12-15 12:40:12	briansmith	rkruppe: Cortex-M0 doesn't have NEON.
2016-12-15 12:40:25	◥	jrmuizel (jrmuizel@moz-2ajjoa.3t38.sij7.f0c8.2607.IP) has joined #rust
2016-12-15 12:40:41	briansmith	And also, my library generally wouldn't fit in the ROM of a device using a Cortex-M0 if I included the NEON code.
2016-12-15 12:40:46	◣	freefall (ff@moz-vvd.78t.166.46.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:40:56	rkruppe	briansmith: I mean LLVM may not have that information
2016-12-15 12:41:13	briansmith	LLVM doesn't need to have it. Only rustc needs it.
2016-12-15 12:41:16	◥	m-n (user@moz-pbpr3a.il.comcast.net) has joined #rust
2016-12-15 12:41:32	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-15 12:41:52	rkruppe	yeah but if we have to assemble the information manually that's another issue with the feature
2016-12-15 12:42:01	◣	chris_ (chris@moz-4esita.hfc.comcastbusiness.net) has quit (Quit: Ex-Chat)
2016-12-15 12:42:21	◥	mchang (mchang@moz-786mcj.res.rr.com) has joined #rust
2016-12-15 12:42:23	briansmith	Targetting these embedded systems is mostly a heap of this.
2016-12-15 12:42:25	rkruppe	briansmith: also can't you do all this with the existing cfg's?
2016-12-15 12:43:07	jdub	briansmith: Hrm, cargo started exposing target features to build scripts...
2016-12-15 12:43:20	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:43:22	◣	bholley (bholley@moz-8d0g9h.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-15 12:43:27	rkruppe	or build scripts, yeah
2016-12-15 12:43:36	briansmith	Yep, that would be fine for me as well.
2016-12-15 12:43:38	◥	rschifflin (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-15 12:43:42	◥	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has joined #rust
2016-12-15 12:43:48	rkruppe	check the target and set/unset some cfg's based on that
2016-12-15 12:44:01	rkruppe	it can be in a common build-dependency
2016-12-15 12:44:06	◥	srwalker_ (srwalker101@moz-g78ofr.warwick.ac.uk) has joined #rust
2016-12-15 12:45:18	briansmith	Another option would be to have a flag that toggles how my library interprets #[cfg(not(target_feature=...))]
2016-12-15 12:45:39	briansmith	e.g. a "runtime-cpu-feature-detection" default feature.
2016-12-15 12:46:17	jdub	rustc --print cfg -C target-feature=-sse -> doesn't tell me the feature's disabled
2016-12-15 12:46:31	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-15 12:47:44	◣	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has quit (Ping timeout: 121 seconds)
2016-12-15 12:48:03	bluss	jdub: sse should be missing from the output yes?
2016-12-15 12:48:16	◣	srwalker_ (srwalker101@moz-g78ofr.warwick.ac.uk) has quit (Ping timeout: 121 seconds)
2016-12-15 12:48:43	jdub	bluss: It's not in the default output.
2016-12-15 12:48:47	xliiv	how can i do async with rust? i'd like to use redis pubsub like this.. https://asosunag.github.io/redis-client/redis_client/#pubsubclientasync but this requires loop calling pump method like this https://github.com/AsoSunag/redis-client#async-get 
2016-12-15 12:49:04	◣	Altazimuth_ (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-15 12:49:09	xliiv	which is blocking
2016-12-15 12:49:22	jdub	xliiv: Take a look at the tokio stack. It's seriously in development, but very cool.
2016-12-15 12:49:32	@steveklabnik	xliiv: "tokio" is the async framework, it's going to have an initial release Very Soon
2016-12-15 12:50:06	@steveklabnik	i don't konw if there's a redis clint built on top yet
2016-12-15 12:50:18	@steveklabnik	but i expect once there's a release, we're gonna see a lot of stuff
2016-12-15 12:50:21	jdub	I'd be surprised if someone hadn't already done a bit of tokio/redis... it's a great proof of concept protocol.
2016-12-15 12:50:33	xliiv	cool jdub steveklabnik thanks
2016-12-15 12:50:51	xliiv	https://github.com/tokio-rs/tokio-redis
2016-12-15 12:50:51	xliiv	?
2016-12-15 12:51:09	◣	mpdrescher (Thunderbird@moz-ka9lpo.dip0.t-ipconnect.de) has quit (Client exited)
2016-12-15 12:51:10	carllerche	yeah, but that is far far from something you should use in production :P
2016-12-15 12:51:25	jdub	xliiv: If you enjoy videos, here's a cool intro to tokio and friends. https://www.youtube.com/watch?v=VNUiycotp8U
2016-12-15 12:51:34	DemiMarie	Currently Rust doesn't have a good async IO story, but that is changing
2016-12-15 12:51:37	jdub	xliiv: nice!
2016-12-15 12:52:06	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2016-12-15 12:52:06	DemiMarie	Note that even thread-per-request, blocking IO can scale to huge numbers of threads on Linux machines
2016-12-15 12:52:10	jdub	carllerche: *notes git log* but nice! :-)
2016-12-15 12:52:21	DemiMarie	as long as you keep your stacks smallish
2016-12-15 12:52:30	DemiMarie	and use a thread pool
2016-12-15 12:52:42	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-15 12:52:56	raph	acrichto: you around? would like to discuss workspace a bit - can take it off this channel if it's distracting
2016-12-15 12:53:20	◣	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 12:53:22	xliiv	carllerche, i'm just playing around..
2016-12-15 12:53:37	xliiv	jud, i'll see video
2016-12-15 12:53:58	◣	ngirard__ (ngirard@moz-nq5vo0.fbx.proxad.net) has quit (Quit: Ex-Chat)
2016-12-15 12:54:03	◥	ngirard__ (ngirard@moz-nq5vo0.fbx.proxad.net) has joined #rust
2016-12-15 12:55:12	◣	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 12:55:15	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-15 12:55:16	▷	qDot wants to start playing with usb/bluetooth and tokio, just needs to figure out exactly where to start.
2016-12-15 12:55:47	jdub	carllerche: this is enjoyably readable
2016-12-15 12:55:54	◥	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has joined #rust
2016-12-15 12:56:09	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-15 12:56:20	◥	handyman (handyman@moz-lmhaus.ca.comcast.net) has joined #rust
2016-12-15 12:56:46	◥	Tiller (Mibbit@moz-2gq.82u.101.160.IP) has joined #rust
2016-12-15 12:57:19	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-15 12:57:49	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2016-12-15 12:58:23	◣	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has quit (Ping timeout: 121 seconds)
2016-12-15 12:58:29	◥	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has joined #rust
2016-12-15 12:58:33	Tiller	Has anyone written a macro like try! but that attempts to bind to a pattern and if it doesn't returns an Err result? I'm struggling with writing the macro myself and was hoping it had been already done. looking for something like try_let!(let binding = pattern, err);
2016-12-15 12:58:36	◣	xrash (smuxi@moz-e2t.naj.60.189.IP) has quit (Connection closed)
2016-12-15 12:59:18	@steveklabnik	is that if let?
2016-12-15 12:59:20	@steveklabnik	sorta??
2016-12-15 12:59:27	@steveklabnik	but
2016-12-15 12:59:33	@steveklabnik	let already takes a pattern
2016-12-15 12:59:51	Ralith	not a refutable one, I thought
2016-12-15 12:59:53	Tiller	Sorta, but what I really want is an early return if the pattern fails without having to clutter iflets everywhere
2016-12-15 13:00:06	◥	njn (chatzilla@moz-alnh9n.optusnet.com.au) has joined #rust
2016-12-15 13:00:51	@steveklabnik	yeah that's what i was thinking if let. and Tiller , i meant more that it could maybe be the primitive for that kind of macro
2016-12-15 13:01:03	◣	handyman (handyman@moz-lmhaus.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 13:01:44	Tiller	I was trying something like this: https://play.rust-lang.org/?gist=3ec563d0f0f45c42b454b3fcc7a7cfc8&version=stable&backtrace=0 but It isn't quite working
2016-12-15 13:02:02	◥	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has joined #rust
2016-12-15 13:02:40	◣	acsmith (acsmith@moz-5vqjlg.dyn.optonline.net) has quit (Client exited)
2016-12-15 13:03:13	breeden_	what is $expr?
2016-12-15 13:03:55	est31	"expression"
2016-12-15 13:03:56	Tiller	It's supposed to be the error value to return if the let binding fails. Is it supposed to be something else?
2016-12-15 13:04:17	est31	oh
2016-12-15 13:04:21	est31	that compiles?
2016-12-15 13:04:26	est31	wow
2016-12-15 13:04:50	◥	mchang (mchang@moz-786mcj.res.rr.com) has joined #rust
2016-12-15 13:04:51	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-15 13:04:54	◣	pylbrecht (pylbrecht@moz-4r5f2d.6km4.884h.8109.2a02.IP) has quit (Quit: Segmentation fault (core dumped))
2016-12-15 13:05:04	breeden_	Tiller: i'm sorry, I might be being dense, but could you provide an explicit example with a concrete type, and the expected behavior?
2016-12-15 13:05:17	◥	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2016-12-15 13:05:36	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2016-12-15 13:07:22	Tiller	breeden_ for example if you have an option bool named option. I want to go try_let!(let Some(b) = option, Err("binding failed")); expecting that it either returns me from the function with that error, or binds b to the boolean
2016-12-15 13:07:45	talchas	that would require compiler aid
2016-12-15 13:07:47	◥	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has joined #rust
2016-12-15 13:07:50	◥	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust
2016-12-15 13:08:02	talchas	something like that has been asked for, I'm not sure if there's a full RFC
2016-12-15 13:08:12	◣	sck_ (sck@moz-6hf9u4.dyn.as47377.net) has quit (Quit: Leaving)
2016-12-15 13:08:18	◣	kitsu (kitsu@moz-knt.i35.130.188.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 13:08:20	◥	sck (sck@moz-6hf9u4.dyn.as47377.net) has joined #rust
2016-12-15 13:08:23	WindowsBunnySuperposition	steveklabnik: neat
2016-12-15 13:08:47	Tiller	I think it should be possible with a Macro, but it's something I haven't dug into. 
2016-12-15 13:08:49	talchas	( { ... guard let Some(b) = option { return Err("binding failed") } ... b is bound } or some such)
2016-12-15 13:08:51	talchas	Tiller: it is not
2016-12-15 13:09:18	◥	rfkrocktk (uid176380@moz-tsv2qn.tooting.irccloud.com) has joined #rust
2016-12-15 13:09:32	talchas	you can do it if you had the rest of the function available to the macro, but then it would just be if-let with the branches in the other order
2016-12-15 13:09:49	breeden_	Tiller: using a macro to determine if the pattern matches is fine, but i'm going to take talchas' word that you can't then return an inner type
2016-12-15 13:09:53	rfkrocktk	Is there a way to format a numeric type in Rust in hexadecimal showing the full notation? ie: I want to see the full 32-bit signed representation of x, how can I format and print that out?
2016-12-15 13:10:07	rfkrocktk	I've tried {:X}, but that shortens the output
2016-12-15 13:10:18	◣	brson (brson@moz-u3dg2t.sfo1.mozilla.com) has quit (Ping timeout: 121 seconds)
2016-12-15 13:11:04	briansmith	rfkrocktk: You want it to be padded like {:08X} does (IIRC)?
2016-12-15 13:11:07	talchas	breeden_ the issue is creating the binding, macros can't directly create bindings, only make normal rust code that does so
2016-12-15 13:11:25	Ralith	rfkrocktk: as briansmith says, you just need to ask for the appropriate number of leading zeroes
2016-12-15 13:11:28	rfkrocktk	briansmith: yes, but is there a way without arbitrarily specifying the length?
2016-12-15 13:11:41	rfkrocktk	If I have a 64bit integer, it should pad to 64 bits, etc.
2016-12-15 13:12:05	talchas	and the available relevant options are let <irrefutable pattern> = <expr>; if let <refutable pattern> = <expr> { <then> } else { <else> }, and match <expr> { <pattern> => <expr>, ... }
2016-12-15 13:12:32	talchas	none of which let you bind a refutable pattern without rightward drift
2016-12-15 13:12:33	breeden_	talchas: it appears that you will need to do this for each type (and their various bindings) that you want to do this for
2016-12-15 13:12:34	Ralith	rfkrocktk: you should be able to frob a Formatter manually if you really want to
2016-12-15 13:12:38	breeden_	eh,
2016-12-15 13:12:46	breeden_	Tiller: I meant that for you ^
2016-12-15 13:12:47	talchas	you could hack up special cases for Option and Result
2016-12-15 13:12:49	◣	sepp2k (sepp2k@moz-69go6a.isp.uni-luebeck.de) has quit (Quit: Leaving.)
2016-12-15 13:12:58	breeden_	(or other custom types if you had some)
2016-12-15 13:13:10	talchas	but not arbitrary patterns
2016-12-15 13:13:41	◥	tobz (textual@moz-mg4.gl9.56.172.IP) has joined #rust
2016-12-15 13:13:50	◥	brson (brson@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2016-12-15 13:13:51	⚡	Mode #rust [+ao brson brson] by ChanServ
2016-12-15 13:14:02	Tiller	talchas I'm specifically interested in it returning a Result::Err if the binding fails, but the main thing I wanted was to do an if let to bind to a pattern
2016-12-15 13:14:06	talchas	(where you turn the code into "let temp = foo; if temp.is_none() { return ... } let b = temp.unwrap();")
2016-12-15 13:14:38	◥	hub (hub@moz-59grbl.cpe.pppoe.ca) has joined #rust
2016-12-15 13:14:45	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2016-12-15 13:14:47	talchas	Tiller: you can write if let Some(b) { then case } else { return Err(...) }, and can use a macro to reorder the return/then or such
2016-12-15 13:14:55	Tiller	in fact, my problem would be solved by if !let if such a thing existed
2016-12-15 13:15:03	talchas	but you can't make "the rest of the block/function" be the then case
2016-12-15 13:15:30	breeden_	oh, so you don't car about bindings after all?
2016-12-15 13:15:31	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-15 13:15:32	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2016-12-15 13:15:34	breeden_	care*
2016-12-15 13:15:48	Tiller	Well, I'm going to use the binding if it works
2016-12-15 13:16:03	breeden_	then how would rust know what it's binding too with an `if !let`
2016-12-15 13:16:08	briansmith	Tiller: Do you really care about the whole expressiveness of patterns, or just matching enum labels?
2016-12-15 13:16:26	breeden_	with binary enumerations, i guess this makes sense, but rust doesn't have anything specific to that afaik
2016-12-15 13:16:27	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-15 13:16:42	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-15 13:16:47	◥	ludat (ludat@moz-456.j2c.173.190.IP) has joined #rust
2016-12-15 13:17:33	◣	jerknextdoor (Cameron@moz-4jmrvk.in.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 13:17:48	◥	montanonic (nicholas@moz-u3evs7.or.comcast.net) has joined #rust
2016-12-15 13:17:55	breeden_	Tiller: is it possible for you to show us the code you are trying to simplify?
2016-12-15 13:18:02	◥	freefall (ff@moz-egj.v53.167.208.IP) has joined #rust
2016-12-15 13:18:38	Aaronepower	Is there a nice way two combine two arrays? For example `[1, 2, 3] + [3, 2, 1] == [4, 4, 4]`.
2016-12-15 13:18:46	◣	stjepang (stjepan@moz-h5rnbe.dynamic.amis.hr) has quit (Ping timeout: 121 seconds)
2016-12-15 13:18:51	Tiller	breeden_ I'm mostly asserting that a potentially complex data structure has a certain structure. So if at any point it doesn't match what I expect, I can return an error, but otherwise continue on.
2016-12-15 13:20:22	Tiller	For example, JSON that represents a particular type of structure, but due to unfortunate API just parsing it into a pre-defined structure isn't really going to work because of dynamic key-names
2016-12-15 13:20:58	sck	Aaronepower, there's zip
2016-12-15 13:21:31	talchas	Tiller: https://github.com/rust-lang/rfcs/pull/1303 is a draft rfc for this
2016-12-15 13:21:41	Tiller	So I have to parse it from a serde_json::Value into my own struct, without help and was trying to think of a way to do it without a headache from right-drifting brackets
2016-12-15 13:21:48	talchas	but it is not currently available
2016-12-15 13:21:56	sck	arr1.iter().zip(arr2.iter()).map(|(&a, &b)| a + b).collect::<Vec<_>>() i think
2016-12-15 13:22:30	Aaronepower	sck Yeah, that could work thanks.
2016-12-15 13:22:38	sck	glad to be of assistance :)
2016-12-15 13:23:48	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 13:24:02	Tiller	talchas any suggestions on how I can avoid a highly nested function?
2016-12-15 13:24:50	◥	sgflt (sgflt@moz-oq5eti.dip0.t-ipconnect.de) has joined #rust
2016-12-15 13:24:52	◥	espadrine (tyl@moz-s4gs4l.dd79.arl0.0e35.2a01.IP) has joined #rust
2016-12-15 13:24:58	◥	JuanPotato (JuanPotato@moz-v8jbl9.wv.comcast.net) has joined #rust
2016-12-15 13:24:58	◥	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2016-12-15 13:25:16	◣	jedahan (jedahan@moz-2vb1rk.ftas.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-15 13:26:31	◥	nicoch (nicoch@moz-tpfipc.2utt.76f9.0e34.2a01.IP) has joined #rust
2016-12-15 13:27:06	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Connection closed)
2016-12-15 13:27:12	breeden_	talchas: wow, that RFC brought a lot of activity in just a few days
2016-12-15 13:27:37	◥	dm3 (dm3@moz-eaq.811.60.78.IP) has joined #rust
2016-12-15 13:28:13	breeden_	there certainly is some demand for making type unwrapping easier 
2016-12-15 13:29:05	◥	wat (bobross@moz-tfju8u.mi.comcast.net) has joined #rust
2016-12-15 13:29:15	talchas	Tiller: hmm, actually I wonder if this can be done with let initializations
2016-12-15 13:29:33	talchas	(it would still be problematic to parse with macros, since you'd have to destructure patterns)
2016-12-15 13:30:08	◣	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has quit (Quit: WeeChat 1.6)
2016-12-15 13:30:19	◣	tobz (textual@moz-mg4.gl9.56.172.IP) has quit (Connection closed)
2016-12-15 13:30:41	◥	tobz (textual@moz-mg4.gl9.56.172.IP) has joined #rust
2016-12-15 13:30:58	talchas	Tiller: ah, you can do https://is.gd/eY2sr0
2016-12-15 13:31:15	talchas	and technically I was wrong and you /could/ make a macro to do that
2016-12-15 13:31:23	talchas	(maybe)
2016-12-15 13:31:30	talchas	but it would have to manually parse out patterns, which is at best difficult
2016-12-15 13:31:39	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 13:32:05	◣	bobross (bobross@moz-oc4.i0e.200.104.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 13:32:09	breeden_	or have a wonky macro like: try_let!(b, temp, Some(temp) = expr, Err(()))
2016-12-15 13:32:34	Norf	Does core::copy_nonoverlapping call memcpy under the hood or can I use it to implement memcpy?
2016-12-15 13:33:03	◣	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2016-12-15 13:33:29	rkruppe	Norf: it maps to an LLVM intrinsic that will often be lowered to a memcpy call
2016-12-15 13:33:55	◣	sebk (sebk@moz-05nbdi.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2016-12-15 13:33:57	bluss	can't use it to implement the literal memcpy
2016-12-15 13:34:06	talchas	but if all you need the simple case, then  ($variantname:path($binding:ident) = $expr:expr; else $error:expr) => (let $binding; if let $variantname(temp) = $expr { $binding = temp } else { $error }) might work
2016-12-15 13:34:15	Norf	rkruppe: thanks. That's what the asm looked like it'd be, wanted to make sure
2016-12-15 13:34:42	talchas	or even I suppose $binding:tt
2016-12-15 13:35:53	◣	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2016-12-15 13:36:42	◣	sck (sck@moz-6hf9u4.dyn.as47377.net) has quit (Quit: Leaving)
2016-12-15 13:36:57	◣	arBmind (Andreas@moz-vk10k1.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-15 13:37:15	talchas	oh right, :path( is invalid because haters
2016-12-15 13:37:33	Tiller	?
2016-12-15 13:37:46	Tiller	I'm don't understand
2016-12-15 13:37:54	talchas	it's about the rules for how macros are defined
2016-12-15 13:37:55	◥	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has joined #rust
2016-12-15 13:38:23	◥	slester (slester@moz-hoev09.t635.tocq.e000.2605.IP) has joined #rust
2016-12-15 13:38:25	talchas	when you write $foo:expr or $foo:path or such, you are only allowed to have certain symbols afterwards, to ensure that rust can always easily parse it
2016-12-15 13:38:29	◣	xliiv (xliiv@moz-893luh.icpnet.pl) has quit (Ping timeout: 121 seconds)
2016-12-15 13:38:32	umurgdk	Does rust create structures always on the heap?
2016-12-15 13:38:39	◥	fwiw (fwiw@moz-ukp.9mt.81.36.IP) has joined #rust
2016-12-15 13:38:41	talchas	and ( isn't allowed after paths (because of Fn() I think)
2016-12-15 13:38:49	◥	sepp2k (Sepp2k@moz-3ehb2h.dyn.telefonica.de) has joined #rust
2016-12-15 13:38:50	bluss	umurgdk: no, not at all
2016-12-15 13:39:02	⚡	bholley is now known as bholley_away
2016-12-15 13:39:20	◥	arnaud (arnaud@moz-s2u8u8.dsl.cantv.net) has joined #rust
2016-12-15 13:39:41	umurgdk	himm so if i crate a struct in a function and return it, that means it copying? or what happens? :D
2016-12-15 13:39:53	Tiller	move by default
2016-12-15 13:40:04	talchas	anyways, https://is.gd/vLOZmt is basically what you want I think
2016-12-15 13:40:10	bluss	if we make a new type: struct Foo { x: u32 } and a value of that type,  let value = Foo { x: 17 };   there is no indirection to the value. It can be stored on the stack or inline in a vector's heap allocation
2016-12-15 13:40:44	talchas	er, slightly more general, https://is.gd/HZWhqF
2016-12-15 13:41:05	fwiw	owh... we have underhanded.rs :)
2016-12-15 13:41:11	bluss	umurgdk: it's called moving. What it is, is copying and leaving the source unusable ("moved from")
2016-12-15 13:41:40	umurgdk	bluss: so when i return it, it copies that part of memory to somewhere else
2016-12-15 13:41:42	Tiller	talchas that looks good. I'll give it a try!
2016-12-15 13:41:58	LordAro	how can i easily return an iterator from a function? i get that i can spell out the type explicitly, but when the type is `std::iter::Chain<itertools::Combinations<std::iter::Cloned<std::slice::Iter<'_, std::string::String>>>, itertools::Combinations<std::iter::Cloned<std::slice::Iter<'_, std::string::String>>>>` ....
2016-12-15 13:42:02	bluss	umurgdk: well since it's not heap allocated we don't think of it as a part of memory
2016-12-15 13:42:06	bluss	umurgdk: but just as a value
2016-12-15 13:42:39	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2016-12-15 13:42:39	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2016-12-15 13:42:41	talchas	Tiller: the guard crate will do something similar to this that does more complex parsing of patterns
2016-12-15 13:43:27	bluss	LordAro: either boxing the iterator (using Box<Iterator<Item=X> + 'a>) or using impl Trait, the latter being the better, but it's an unstable feature
2016-12-15 13:43:33	◣	deith (deith@moz-rp3lvm.ip-149-202-54.eu) has quit (Quit: Leaving)
2016-12-15 13:43:54	LordAro	yeah, i found the latter
2016-12-15 13:43:54	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-12-15 13:43:54	Tiller	talchas this one? https://crates.io/crates/guard
2016-12-15 13:44:59	talchas	Tiller: yeah
2016-12-15 13:45:10	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-15 13:45:12	LordAro	bluss: what's with the 'a ? i'm getting "use of undeclared lifetime name"
2016-12-15 13:45:37	◣	manjaro-kde5 (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2016-12-15 13:45:45	bluss	LordAro: even if all the rest of the iterator's type is erased, the lifetime information must still remain
2016-12-15 13:45:51	breeden_	crazy macros :S
2016-12-15 13:46:05	bluss	LordAro: so your iterator borrows from something? I guess yes since it contains slice::Iter
2016-12-15 13:46:41	LordAro	bluss: i guess so? doesn't have any explicity lifetimes anywhere though..
2016-12-15 13:46:46	bluss	LordAro: does it borrow from the function's input arguments?
2016-12-15 13:46:58	bluss	LordAro: wherever the std::slice::Iter comes from
2016-12-15 13:46:59	LordAro	yeah
2016-12-15 13:47:07	LordAro	&[String]
2016-12-15 13:47:22	bluss	then use  fn foo<'a>(&'a [String])  for the argument
2016-12-15 13:47:25	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-15 13:47:43	bluss	together with that return type. The iterator must also be in a box to be cast or coerced to that type
2016-12-15 13:47:54	LordAro	right
2016-12-15 13:47:57	bluss	hm what's the best existing doc for this issue
2016-12-15 13:48:01	LordAro	how do i box a thing?
2016-12-15 13:48:16	◣	wccole (quassel@moz-bm54rh.al.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 13:48:31	◣	latk (textual@moz-g0j7o6.cam.ac.uk) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 13:48:57	bluss	boxed is shown here http://stackoverflow.com/a/27535594
2016-12-15 13:50:23	LordAro	ah, that seems to work
2016-12-15 13:50:25	LordAro	thanks :)
2016-12-15 13:51:37	⚡	bholley_away is now known as bholley
2016-12-15 13:52:03	◥	Noldorin (noldorin@moz-hofumo.r2j2.07bk.0c7d.2a02.IP) has joined #rust
2016-12-15 13:52:10	⚡	bholley is now known as bholley_away
2016-12-15 13:53:01	⚡	bholley_away is now known as bholley
2016-12-15 13:53:12	◥	ubsandroid_ (ubsan@moz-la9rdm.8dq8.9fmf.fb90.2607.IP) has joined #rust
2016-12-15 13:53:20	◥	ubsandroid__ (ubsan@moz-uokv8f.subnet.rcn.com) has joined #rust
2016-12-15 13:54:17	LordAro	ok, turning that vec into an iterator didn't help with memory usage anyway. what's the best tool/guide for analysing memory usage?
2016-12-15 13:54:25	◥	Mermi_ (uid96745@moz-ltoie4.hathersage.irccloud.com) has joined #rust
2016-12-15 13:54:56	◥	handyman (handyman@moz-lmhaus.ca.comcast.net) has joined #rust
2016-12-15 13:55:22	◣	ubsandroid (ubsan@moz-okdb7e.subnet.rcn.com) has quit (Ping timeout: 121 seconds)
2016-12-15 13:55:34	bluss	you're using Cloned<Iter<String>> I see, so a lot of strings are being cloned
2016-12-15 13:55:43	◣	ws__ (ws@moz-qnkaha.customer.cdi.no) has quit (Ping timeout: 121 seconds)
2016-12-15 13:55:49	bluss	while you could instead just compute the combinations of references to those same strings
2016-12-15 13:56:17	bluss	then Combinations itself creates some vectors, that's maybe less bad, check that next
2016-12-15 13:56:35	◣	Kreest__ (Kreest@moz-ud5pf3.pool.invitel.hu) has quit (Connection closed)
2016-12-15 13:56:44	◣	mgottschlag (quassel@moz-jg10bg.dip0.t-ipconnect.de) has quit (Connection closed)
2016-12-15 13:56:57	bluss	do you use a fixed number of combinations? Then use .tuple_combinations() instead, but first fix the cloned thing
2016-12-15 13:57:14	◣	ubsandroid_ (ubsan@moz-la9rdm.8dq8.9fmf.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 13:57:58	LordAro	that'd help, except i am consuming the iterator twice, so i do need some cloning?
2016-12-15 13:58:08	LordAro	i don't see how i'd fix that
2016-12-15 13:58:54	◣	mexisme2 (mexisme@moz-hj7.ait.149.118.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 13:59:06	bluss	try removing the .cloned() things
2016-12-15 14:00:09	umurgdk	 bluss Im confused, how it is just a value and not a part of memory?
2016-12-15 14:00:41	◥	Ketsuban (ketsuban@moz-k69jlh.abqe.tdt5.0c7d.2a02.IP) has joined #rust
2016-12-15 14:00:42	◣	Ketsuban (ketsuban@moz-k69jlh.abqe.tdt5.0c7d.2a02.IP) has quit (Connection closed)
2016-12-15 14:01:04	◥	Ketsuban (ketsuban@moz-k69jlh.abqe.tdt5.0c7d.2a02.IP) has joined #rust
2016-12-15 14:01:13	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 14:01:35	bluss	well how do you think of let x = 1; 
2016-12-15 14:01:55	bluss	it's a value like the `1`
2016-12-15 14:01:57	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-15 14:02:01	◣	chris_999 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Quit: Leaving)
2016-12-15 14:02:04	LordAro	bluss: hmm, removing that changes it to a Vec<String>, rather than a Vec<&String> (i think)
2016-12-15 14:02:14	umurgdk	im thinking the value 1 is kept in one of the registers, am i right?
2016-12-15 14:02:38	bluss	umurgdk: sure. I mean the compiler decides, but it's not necessarily in memory
2016-12-15 14:02:38	◣	tromey (tromey@moz-5gaudh.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.90.2))
2016-12-15 14:02:52	◥	alanhoff (alanhoff@moz-ga4.dms.120.189.IP) has joined #rust
2016-12-15 14:03:20	alanhoff	hello folks, does any one knows a good rust IDE?
2016-12-15 14:03:23	bluss	LordAro: you have to clone from &String → String somewhere, but do you need to do that before generating all the combinations? It seems a bit wasteful
2016-12-15 14:03:31	bluss	LordAro: assuming you need String
2016-12-15 14:03:34	umurgdk	but for other things i think they are kept in stack. which is also part of memory special to function, and deallocated after funcion returns?
2016-12-15 14:03:46	Noldorin	alanhoff, why use an IDE? I think most people just a text editor (graphical or vim/emacs) plus the command line -- specifically cargo
2016-12-15 14:04:02	LordAro	bluss: good question
2016-12-15 14:04:08	umurgdk	i mean since complex structures can't be kept in the registers
2016-12-15 14:04:28	talchas	umurgdk: that's also up to the compiler
2016-12-15 14:04:38	umurgdk	not sure though, wow i know very little about how stack/heap and compilers works -.-
2016-12-15 14:04:49	talchas	(in practice I think that's probably more correct at the moment than it needs to be)
2016-12-15 14:04:58	alanhoff	Noldorin code completion and linting is good for not wasting time
2016-12-15 14:05:19	Noldorin	alanhoff, you can get that in lots of editors. and Cargo and various libraries can do linting very well :)
2016-12-15 14:05:35	◥	insaneinside (user@moz-ck7c5n.customer.broadstripe.net) has joined #rust
2016-12-15 14:05:52	umurgdk	alanhoff: you may want to try intellij rust works pretty ok, didn't try the latest versions though. using vim
2016-12-15 14:07:01	talchas	umurgdk: in general though structs /could/ be stored in registers as long as there's no way for the code to notice
2016-12-15 14:07:08	◣	tobz (textual@moz-mg4.gl9.56.172.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:07:18	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2016-12-15 14:07:22	◣	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2016-12-15 14:07:26	talchas	(ie, if you take references and those don't get optimized away, then they can't, at least for the time the references are around)
2016-12-15 14:07:55	◣	slomo (slomo@moz-cr5.9m0.117.188.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:08:19	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2016-12-15 14:08:25	◥	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2016-12-15 14:08:37	umurgdk	himmm allright. so i shouldn't think of returning a struct value from a function will always copy memory 
2016-12-15 14:10:31	◥	bobross (bobross@moz-tfju8u.mi.comcast.net) has joined #rust
2016-12-15 14:10:35	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Quit: Konversation terminated!)
2016-12-15 14:10:40	talchas	I mean, it depends on why you're worrying about that
2016-12-15 14:10:41	◣	nairware (CELLIS@moz-9pf.iim.35.12.IP) has quit (Quit: Leaving.)
2016-12-15 14:10:46	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-15 14:10:59	talchas	if you're worrying about performance and it's a large struct, that might be reasonable
2016-12-15 14:11:01	◣	mrijkeboer (mrijkeboer@moz-eqjmd8.bunix.org) has quit (Quit: Leaving)
2016-12-15 14:11:15	◥	wccole (quassel@moz-bm54rh.al.comcast.net) has joined #rust
2016-12-15 14:11:25	talchas	ideally the compiler would initialize it wherever it's going to end up, but aiui it doesn't always do this as much as it should
2016-12-15 14:11:36	◥	nullobject (nullobject@moz-lpg2b9.iinet.net.au) has joined #rust
2016-12-15 14:11:38	◥	hansaplast (hansaplast@moz-1rk.mch.197.178.IP) has joined #rust
2016-12-15 14:11:51	◣	Dhs92 (Dhs92@moz-07r3os.on8m.lncg.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:12:09	umurgdk	ah ok this is what i mean. so for the complex/big structures maybe its better to use heap allocation
2016-12-15 14:12:35	◣	tsujin (tsujin@moz-624vek.res.bhn.net) has quit (Ping timeout: 121 seconds)
2016-12-15 14:12:43	◣	wldcordeiro (wldcordeiro@moz-5splqs.maon.n3es.0681.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:12:45	◣	wat (bobross@moz-tfju8u.mi.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 14:12:48	◥	Altazimuth_ (Altazimuth@moz-muooe6.skybroadband.com) has joined #rust
2016-12-15 14:13:06	umurgdk	its kinda hard to decide it though using heap allocation also changes the shape of your code 
2016-12-15 14:13:31	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2016-12-15 14:13:34	◣	Leo` (leo@moz-2f71o3.placeholder.fr) has quit (Ping timeout: 121 seconds)
2016-12-15 14:13:38	◣	RoxasShadowRS (Roxas@moz-u43osv.lcpl.lncg.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:14:27	◣	TheAuGingembre (theo@moz-689u68.ht93.lncg.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:14:56	◥	tsujin (tsujin@moz-624vek.res.bhn.net) has joined #rust
2016-12-15 14:15:27	◥	arBmind (Andreas@moz-7uefve.dyn.telefonica.de) has joined #rust
2016-12-15 14:16:24	◣	vbarrielle (shuba@moz-qagrvm.cedeela.fr) has quit (Ping timeout: 121 seconds)
2016-12-15 14:17:59	◥	Dhs92 (Dhs92@moz-07r3os.on8m.lncg.41d0.2001.IP) has joined #rust
2016-12-15 14:18:39	◣	albel727 (albel727@moz-njmloa.academ.org) has quit (Ping timeout: 121 seconds)
2016-12-15 14:19:03	◥	RoxasShadowRS (Roxas@moz-u43osv.lcpl.lncg.41d0.2001.IP) has joined #rust
2016-12-15 14:19:42	◥	TheAuGingembre (theo@moz-689u68.ht93.lncg.41d0.2001.IP) has joined #rust
2016-12-15 14:19:47	◥	Leo` (leo@moz-2f71o3.placeholder.fr) has joined #rust
2016-12-15 14:20:04	◥	vbarrielle (shuba@moz-qagrvm.cedeela.fr) has joined #rust
2016-12-15 14:20:22	◣	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:21:01	@steveklabnik	umurgdk: i would recommend first programming for semantics
2016-12-15 14:21:13	◥	bjz (bjz@moz-2o6g0p.optusnet.com.au) has joined #rust
2016-12-15 14:21:14	@steveklabnik	and nly afterwards worrying about microoptimiztaions like this
2016-12-15 14:21:26	@steveklabnik	if you find out it's not micro, then make changes
2016-12-15 14:22:03	umurgdk	steveklabnik: yeah im well aware of that, im not trying to optimize something, but im trying to understand what is going on underneat 
2016-12-15 14:22:08	@steveklabnik	cool
2016-12-15 14:22:24	@steveklabnik	then talchas has you covered
2016-12-15 14:23:38	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:24:28	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2016-12-15 14:24:51	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Ping timeout: 121 seconds)
2016-12-15 14:24:52	◣	brson (brson@moz-u3dg2t.sfo1.mozilla.com) has quit (Ping timeout: 121 seconds)
2016-12-15 14:25:05	umurgdk	yeah i need to read more about how compilers works i think :)
2016-12-15 14:25:22	◣	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-15 14:25:58	◥	umurgdk_ (umurgdk@moz-pfjhmu.mullvad.net) has joined #rust
2016-12-15 14:25:59	◣	umurgdk_ (umurgdk@moz-pfjhmu.mullvad.net) has quit (Quit: leaving)
2016-12-15 14:26:26	◥	srwalker101 (srwalker101@moz-j81.c3c.211.90.IP) has joined #rust
2016-12-15 14:26:29	◥	brson (brson@moz-u3dg2t.sfo1.mozilla.com) has joined #rust
2016-12-15 14:26:29	⚡	Mode #rust [+ao brson brson] by ChanServ
2016-12-15 14:26:49	@steveklabnik	this specific optimization is "return value optimization" and "named return value optimization"
2016-12-15 14:26:52	@steveklabnik	to give you some keywords
2016-12-15 14:27:31	◣	bjz (bjz@moz-2o6g0p.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2016-12-15 14:27:41	umurgdk	oh thanks a lot
2016-12-15 14:27:52	Quxxy2	Is it NRVO or NVRO?
2016-12-15 14:28:18	▷	Quxxy2 can never remember the order of word soup names
2016-12-15 14:28:29	◣	nicoch (nicoch@moz-tpfipc.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2016-12-15 14:28:32	◥	Binero (Binero@moz-hb0qp7.sji7.g8ie.a03f.2a02.IP) has joined #rust
2016-12-15 14:28:53	◥	bjz (bjz@moz-2o6g0p.optusnet.com.au) has joined #rust
2016-12-15 14:29:10	Binero	What's the convention for when identifiers collide with reserved keywords? Just add an underscore? e.g. type_, match_, etc?
2016-12-15 14:29:31	Quxxy2	That's what I do
2016-12-15 14:29:43	LordAro	bluss: ok, so i'm continuing to convert my code to use references in more places, but now i've run into `type State = (Vec<Vec<&String>>, usize);` having to contain a lifetime specifier, for some reason
2016-12-15 14:29:45	Quxxy2	The other is to misspell the name
2016-12-15 14:29:51	Quxxy2	*i.e.* krate
2016-12-15 14:29:58	Binero	tipe :p 
2016-12-15 14:30:02	Binero	Even for public API's?
2016-12-15 14:30:09	Quxxy2	strukt, emum, traet
2016-12-15 14:30:29	Binero	oh isn't that what syntix does or whatever it's called
2016-12-15 14:30:36	Quxxy2	Some people *really* hate underscores :P
2016-12-15 14:30:43	@steveklabnik	Binero: rustc uses ty, cargo uses krate
2016-12-15 14:30:52	@steveklabnik	i prefer it to underscores personally
2016-12-15 14:30:58	Quxxy2	See?
2016-12-15 14:31:01	Quxxy2	Weirdoes :P
2016-12-15 14:31:01	Binero	steveklabnik: why's that? :p
2016-12-15 14:31:07	◥	Cyderize (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2016-12-15 14:31:17	bluss	LordAro: ok, so now Rust is forcing you to think about ownership and borrowing.. So that the State can be alive only when the strings have an owner..
2016-12-15 14:31:25	@steveklabnik	probably tradition, to be honest
2016-12-15 14:31:36	@steveklabnik	"klass" is used by rubyists a lot
2016-12-15 14:31:41	Quxxy2	It's not a big deal either way; I just prefer trailing underscore because then you don't have to remember *which* creative misspelling you used :P
2016-12-15 14:32:02	Binero	well seems like it is not a settled issue
2016-12-15 14:32:03	bluss	LordAro: so this is your opportunity to save memory, can  you structure the program so that something holds (owns) the original vec of String while the State things are used?
2016-12-15 14:32:08	◣	jrmuizel (jrmuizel@moz-2ajjoa.3t38.sij7.f0c8.2607.IP) has quit (Connection closed)
2016-12-15 14:32:33	◥	xliiv (xliiv@moz-893luh.icpnet.pl) has joined #rust
2016-12-15 14:33:00	◥	jsbruner (Instantbird@moz-s4u5e1.h4gj.q8mm.0306.2602.IP) has joined #rust
2016-12-15 14:33:03	◣	srwalker101 (srwalker101@moz-j81.c3c.211.90.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-15 14:33:09	Binero	how about match -> firestick and type -> write> 
2016-12-15 14:33:17	Binero	Would that be too confusing? ;p
2016-12-15 14:33:25	◥	srwalker101 (srwalker101@moz-j81.c3c.211.90.IP) has joined #rust
2016-12-15 14:33:37	LordAro	bluss: i believe so
2016-12-15 14:33:51	Quxxy2	Binero: Yeah, but if that's your scheme, you could also have match -> redhead... or even match -> dick
2016-12-15 14:34:04	◥	tobz (textual@moz-p5lcp1.fios.verizon.net) has joined #rust
2016-12-15 14:34:10	Quxxy2	Good luck working out what the code is supposed to mean *then* :P
2016-12-15 14:34:17	Binero	those sound unrelated to the original word though :p
2016-12-15 14:34:26	Quxxy2	But they're not
2016-12-15 14:34:27	talchas	I have this vague recollection of java or something using clazz
2016-12-15 14:34:33	Quxxy2	redheads are a kind of match
2016-12-15 14:34:34	talchas	but maybe not
2016-12-15 14:34:44	Quxxy2	As are dickheads
2016-12-15 14:34:56	Quxxy2	(Yes, *really*; there was a brand of matches called "Dickheads")
2016-12-15 14:34:57	◣	bjz (bjz@moz-2o6g0p.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2016-12-15 14:35:06	◥	srwalker_ (srwalker101@moz-j81.c3c.211.90.IP) has joined #rust
2016-12-15 14:35:12	Quxxy2	(And it's "Dick" as in the rhyming slang name for "Richard")
2016-12-15 14:35:14	◣	refold (refold@moz-lkj.2mj.172.188.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:35:27	◣	hansaplast (hansaplast@moz-1rk.mch.197.178.IP) has quit (Connection closed)
2016-12-15 14:35:30	Quxxy2	(Not the *other* thing that uses that word, you naughty-minded person, you)
2016-12-15 14:35:35	◣	juanfra (juanfra@moz-hs9.q8p.76.84.IP) has quit (Client exited)
2016-12-15 14:35:49	◥	hansaplast (hansaplast@moz-1rk.mch.197.178.IP) has joined #rust
2016-12-15 14:37:33	◣	srwalker101 (srwalker101@moz-j81.c3c.211.90.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:38:18	◣	junqed (junqed@moz-91b.sv8.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-15 14:38:37	◣	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has quit (Client exited)
2016-12-15 14:39:24	◥	PeterSP (peter@moz-jf28ru.fios.verizon.net) has joined #rust
2016-12-15 14:39:34	◣	sgflt (sgflt@moz-oq5eti.dip0.t-ipconnect.de) has quit (Client exited)
2016-12-15 14:41:50	◣	jtz (e@moz-7km.r5p.15.51.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 14:42:18	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-15 14:42:23	Binero	Quxxy2: :o I need to catch up on my match theory 
2016-12-15 14:44:56	◣	hansaplast (hansaplast@moz-1rk.mch.197.178.IP) has quit (Connection closed)
2016-12-15 14:45:21	◥	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2016-12-15 14:45:24	◥	Dima (textual@moz-tae.6jg.21.120.IP) has joined #rust
2016-12-15 14:45:57	Binero	I have a compiler error which doesn't want to print its error 
2016-12-15 14:46:07	Binero	it freezes halfway
2016-12-15 14:46:17	◥	niconii (nicole@moz-51f18h.midco.net) has joined #rust
2016-12-15 14:46:17	⚡	Mode #rust [+ao niconii niconii] by ChanServ
2016-12-15 14:47:09	◥	Dahrkael (Dahrkael@moz-6vm.u1p.25.46.IP) has joined #rust
2016-12-15 14:47:18	◣	Guest37 (textual@moz-edsm98.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-15 14:47:24	◥	kaljamies69 (kaljamies@moz-ramduc.60.citypartner.pl) has joined #rust
2016-12-15 14:47:35	kaljamies69	hey, how can I get HashMap values() so that I'll get the ownership of the HashMap as well?
2016-12-15 14:48:13	Binero	kaljamies69: .drain()
2016-12-15 14:48:21	Binero	It removes them out of the hashmap
2016-12-15 14:48:35	◣	xliiv (xliiv@moz-893luh.icpnet.pl) has quit (Ping timeout: 121 seconds)
2016-12-15 14:49:23	◣	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2016-12-15 14:49:36	◥	jtz (e@moz-7km.r5p.15.51.IP) has joined #rust
2016-12-15 14:49:58	kaljamies69	Binero: hmm, can I call values() for the Drain somehow or how it works?
2016-12-15 14:50:27	Binero	kaljamies69: Drain gives you ownership over what it iterates over 
2016-12-15 14:50:46	Binero	it's like values but you get everything by move as opposed to by borrow 
2016-12-15 14:51:06	Psilidae	I have a design problem I'm kind of stuck on: I have a Request struct that I want to share between threads, however, the callback function can't be shared because it has the 'static constraint. I don't need the callback to be shared between threads, but I can't think of an elegant way to separate it, as, conceptually, a callback is a property of the request. Anyone have any tips that might help me find a direction here?
2016-12-15 14:51:20	Binero	kaljamies69: https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.drain
2016-12-15 14:51:27	kaljamies69	Binero: is it any better than doing map.into_iter().map(|(key, val)| val).collect()
2016-12-15 14:51:34	kaljamies69	or what's the difference
2016-12-15 14:51:37	◣	Dima (textual@moz-tae.6jg.21.120.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 14:52:02	bluss	kaljamies69: with drain, the hashmap remains but is left empty
2016-12-15 14:52:03	kaljamies69	aren't into_iter and drain returning the same thing
2016-12-15 14:52:05	Binero	kaljamies69: into_iter removes the hashmap 
2016-12-15 14:52:35	kaljamies69	does into_iter copy then?
2016-12-15 14:52:45	kaljamies69	err, drain
2016-12-15 14:52:48	bluss	they move out elements the same way
2016-12-15 14:52:49	Binero	kaljamies69: No, it drains it
2016-12-15 14:52:56	Binero	Yup
2016-12-15 14:53:07	Quxxy2	Psilidae: Split the type into shareable and non-shareable parts
2016-12-15 14:53:09	kaljamies69	so drain copies?
2016-12-15 14:53:10	bluss	kaljamies69: with drain, you can reuse the hashmap's capacity for storing new elements
2016-12-15 14:53:13	Binero	If you want them to be both inside of the HashMap _and_ iterate over them, they need to implement clone 
2016-12-15 14:53:17	◣	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has quit (Quit: WeeChat 1.6)
2016-12-15 14:53:34	kaljamies69	I don't need the map at all after iterating
2016-12-15 14:53:40	bluss	kaljamies69: no copying, just removing key value pairs from the map and handing over owernship of them to the consumer of the iterator
2016-12-15 14:53:47	◥	stjepang (stjepan@moz-vp3.9j7.252.151.IP) has joined #rust
2016-12-15 14:53:52	Binero	into_iter() then
2016-12-15 14:54:09	LordAro	bluss: so now i'm going round essentially adding 'a to all my code (not entirely sure why it's necessary, but there we go), but now i've run into: `type mismatch resolving `<std::iter::Chain<itertools::Combinations<std::slice::Iter<'_, &std::string::String>>, itertools::Combinations<std::slice::Iter<'_, &std::string::String>>> as std::iter::Iterator>::Item == std::vec::Vec<&'a std::string::String>`` on the 
2016-12-15 14:54:16	LordAro	same boxed thing as before - any ideas?
2016-12-15 14:54:39	LordAro	i'm probably doing something wrong, because just adding 'a everywhere seems... unnecessary
2016-12-15 14:54:53	◥	kristof (Mibbit@moz-sjtpaj.rk.wavecable.com) has joined #rust
2016-12-15 14:54:55	&mbrubeck	LordAro: You havea `slice::Iter<&String>` which I believe is an `Iterator<Item=&&String>`
2016-12-15 14:55:02	kaljamies69	Binero bluss thanks!
2016-12-15 14:55:13	kristof	Only slightly related to Rust
2016-12-15 14:55:18	&mbrubeck	but something is expecting an `Iterator<Item=&String>` (just one level of reference)
2016-12-15 14:55:31	LordAro	mbrubeck: um, maybe? honestly i don't know what i'm doing anymore :>
2016-12-15 14:55:32	kristof	LLVM is tremendously useful for cross compilation but why doesn't it come with cross linkers?
2016-12-15 14:55:38	LordAro	the types are confusing me
2016-12-15 14:55:49	◥	bschaefer (bschaefer@moz-6rr.8im.18.24.IP) has joined #rust
2016-12-15 14:55:55	j_ey	kristof: linker is being worked on
2016-12-15 14:55:58	Quxxy2	kristof: Because linking is hard; lld just isn't ready
2016-12-15 14:56:02	◣	bluss (bluss@moz-p1garp.bredband.comhem.se) has quit (Connection closed)
2016-12-15 14:56:02	kristof	okay :)
2016-12-15 14:56:13	kristof	what's hard about linking? I never took a compilers course :o
2016-12-15 14:56:20	Quxxy2	Also, even having a linker won't be the end of it
2016-12-15 14:56:23	kristof	geez
2016-12-15 14:56:25	Quxxy2	You'd *still* need cross libraries
2016-12-15 14:56:30	kristof	oh, well that's a given
2016-12-15 14:56:55	@steveklabnik	one issue with linkers is
2016-12-15 14:57:08	@steveklabnik	unless you already know how to write one
2016-12-15 14:57:11	@steveklabnik	they're really tough to get into
2016-12-15 14:57:12	@steveklabnik	imho
2016-12-15 14:57:16	@steveklabnik	there's like that one book
2016-12-15 14:57:22	kristof	geez, you're kind of a polymath, aren't you steve
2016-12-15 14:57:39	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2016-12-15 14:57:41	@steveklabnik	i dislike that word for unrelated reasons but yes
2016-12-15 14:57:46	@steveklabnik	:)
2016-12-15 14:57:52	@steveklabnik	or at least, i aspire to be, in some sense
2016-12-15 14:57:58	Quxxy2	What I mean is, well, take Windows.  The only *correct* headers and import libs are the ones distributed by Microsoft.  You can't exactly put those in public repos
2016-12-15 14:57:59	kristof	haha well that's all I mean
2016-12-15 14:58:06	@steveklabnik	i figured :)
2016-12-15 14:58:11	kristof	it's just incredible watching you jump from all these different domains
2016-12-15 14:58:14	cjm	steve also has a quality twitter feed
2016-12-15 14:58:19	kristof	oh trust me, I know
2016-12-15 14:58:32	kristof	Yeah, I couldn't think of a better PR guy for Rust
2016-12-15 14:58:33	@steveklabnik	heh, i apprecaite it. 
2016-12-15 14:58:39	@steveklabnik	but
2016-12-15 14:58:44	@steveklabnik	i'm off to my local javascript meetup
2016-12-15 14:58:48	@steveklabnik	catch you all later
2016-12-15 14:58:55	kristof	steveklabnik: Are there any resources for companies looking to adopt rust besides the material available to general users like the forums and docs?
2016-12-15 14:58:59	Quxxy2	So you can have a cross compiler and linker and *still* not be able to produce a correct executable because you need headers and import libs you can't install on your operating system
2016-12-15 14:59:02	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2016-12-15 14:59:02	◣	cjhowe (cjhowe@moz-jnal4r.mci.googlefiber.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 14:59:02	kristof	aaaaw
2016-12-15 14:59:16	@steveklabnik	kristof: /msg me that please? not _really_ but i'd be interested in talking about it
2016-12-15 15:01:00	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Connection closed)
2016-12-15 15:02:00	◥	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2016-12-15 15:02:15	◥	juanfra (juanfra@moz-hs9.q8p.76.84.IP) has joined #rust
2016-12-15 15:03:03	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Quit: Leaving)
2016-12-15 15:03:07	◣	Akien (akien@moz-cavscg.dyn.telefonica.de) has quit (Quit: self.get_tree().quit())
2016-12-15 15:04:01	◥	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2016-12-15 15:04:14	◥	viomi (viomi@moz-kuv1p2.daviszone.org) has joined #rust
2016-12-15 15:04:25	◣	undeadleech (undeadleech@moz-1gdrfe.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2016-12-15 15:05:31	◣	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has quit (Ping timeout: 121 seconds)
2016-12-15 15:06:26	◣	raichoo (raichoo@moz-47outf.versanet.de) has quit (Ping timeout: 121 seconds)
2016-12-15 15:08:26	◣	sherushe (julien@moz-3182hc.static.cablecom.ch) has quit (Quit: leaving)
2016-12-15 15:09:02	◥	yourname_ (barrucadu@moz-vhjg1q.members.linode.com) has joined #rust
2016-12-15 15:09:05	◣	yourname_ (barrucadu@moz-vhjg1q.members.linode.com) has quit (Quit: leaving)
2016-12-15 15:10:05	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (Quit: Leaving)
2016-12-15 15:10:25	◣	bereddy (bereddy@moz-2e6qc0.fios.verizon.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2016-12-15 15:10:44	◣	Binero (Binero@moz-hb0qp7.sji7.g8ie.a03f.2a02.IP) has quit (Client exited)
2016-12-15 15:10:45	◣	wccole (quassel@moz-bm54rh.al.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 15:11:41	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 15:12:05	◥	niemal (nl@moz-nsaaen.207.tellas.gr) has joined #rust
2016-12-15 15:12:44	◥	static2 (Mibbit@moz-bb6mst.ma.comcast.net) has joined #rust
2016-12-15 15:12:56	static2	Is there a way to disable safestack and ASLR for a rust binary?
2016-12-15 15:13:34	◥	barrucadu (barrucadu@moz-vhjg1q.members.linode.com) has joined #rust
2016-12-15 15:15:00	◥	jimb (user@moz-1d5sde.ptld.qwest.net) has joined #rust
2016-12-15 15:15:30	Norf	how's rust's inline asm support? I'm getting an invalid instruction error on an instruction that I'm looking at in both an objdump of a previous build and in the docs. 
2016-12-15 15:16:45	rkruppe	Norf: it "works" in that if you know the right incantations you can do almost everything
2016-12-15 15:17:16	j_ey	Norf: post some code!
2016-12-15 15:17:55	◥	refold (refold@moz-lkj.2mj.172.188.IP) has joined #rust
2016-12-15 15:17:59	Norf	https://is.gd/eINbu5
2016-12-15 15:18:23	Norf	mind you this won't build for x86, it's arm assembly
2016-12-15 15:18:29	⚡	rail is now known as rail-away
2016-12-15 15:20:04	Norf	as a cruel twist of fate, it actually recognizes the sub instruction on x86, but the rest of the format isn't right
2016-12-15 15:21:02	j_ey	which --target are you using?
2016-12-15 15:22:39	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-15 15:22:44	talchas	Norf: hmm, can you try sub #1, $0
2016-12-15 15:22:54	talchas	it might be different orderings used or something obnoxious like that
2016-12-15 15:23:09	talchas	though I don't know if arm asm has that silliness
2016-12-15 15:23:36	talchas	and that asm block works on x86 with the changes, so it /should/ work I think
2016-12-15 15:24:10	talchas	you might also try sub $0, $0, #1
2016-12-15 15:24:19	talchas	in case it only accepts the 3-op form
2016-12-15 15:25:47	◥	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has joined #rust
2016-12-15 15:25:53	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2016-12-15 15:25:53	◣	Kilobyte (stephan@moz-t1udnc.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2016-12-15 15:27:01	Norf	talchas: tried the 3 op form, doesn't work either. it looks like it only wants to accept the subs instruction instead of sub 
2016-12-15 15:27:22	talchas	hmm, well, you probably /want/ subs rather than sub
2016-12-15 15:27:36	talchas	given that you're immediately trying to branch off it afterwards
2016-12-15 15:27:53	◣	jimb (user@moz-1d5sde.ptld.qwest.net) has quit (Ping timeout: 121 seconds)
2016-12-15 15:27:54	◣	espadrine (tyl@moz-s4gs4l.dd79.arl0.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 15:27:59	Norf	true. What's the difference between the two? Docs aren't super clear.
2016-12-15 15:28:20	kristof	does cargo just silently error when it cannot find the linker for the target?
2016-12-15 15:28:30	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-15 15:28:37	j_ey	Norf: which target?
2016-12-15 15:29:28	Norf	thumbv6m. It looks like subs will update the condition flags, but it also calls the ending "s" optional.
2016-12-15 15:29:31	emilsp	hmm, I am trying to enumearte over chunks of Vec<Vec<f64x2>>, but I'm getting a werid type error
2016-12-15 15:29:43	emilsp	>   = note: the method `enumerate` exists but the following trait bounds were not satisfied: `std::vec::Vec<std::vec::Vec<simd::x86::sse2::f64x2>> : std::iter::Iterator`, `[std::vec::Vec<simd::x86::sse2::f64x2>] : std::iter::Iterator`
2016-12-15 15:30:18	◥	saimen (saimen@moz-i2kas4.natpool.mwn.de) has joined #rust
2016-12-15 15:30:38	rkruppe	emilsp: are you doing vec.enumerate()... ?
2016-12-15 15:30:44	emilsp	it's not a vec, it's a slice 
2016-12-15 15:30:47	emilsp	can slices not do that ? 
2016-12-15 15:31:03	rkruppe	oh sure slices can do that
2016-12-15 15:31:09	◣	vadix (vadix@moz-jmj.0nm.219.24.IP) has quit (Connection closed)
2016-12-15 15:31:13	talchas	emilsp: you need to call .iter() or such on the inside Vec
2016-12-15 15:31:20	rkruppe	but neither slices nor vecs are iterators
2016-12-15 15:31:23	talchas	actually I think it's the outside Vec
2016-12-15 15:31:23	Norf	I guess talchas is right about the branching though, without the z flag set the branch wouldn't do much. I think the compiler saved me there.
2016-12-15 15:31:42	◣	rfkrocktk (uid176380@moz-tsv2qn.tooting.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-15 15:33:34	emilsp	thanks talchas :)
2016-12-15 15:33:57	◣	fabiand (fabiand@moz-c9o35g.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2016-12-15 15:34:17	ekr	Hmm... The try! doc is telling me to use ?, but having trouble finding the doc. (hard to google for '?'). Pointers?
2016-12-15 15:36:29	stjepang	ekr: Search for 'question mark feature'.
2016-12-15 15:37:27	ekr	stjepang: thanks
2016-12-15 15:37:28	◥	Th3Ma5hatt3r (textual@moz-bj5u3s.austtx.sbcglobal.net) has joined #rust
2016-12-15 15:38:03	◣	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 15:38:25	Aaronepower	ekr https://doc.rust-lang.org/std/ops/trait.Carrier.html
2016-12-15 15:38:51	◣	jbradberry (jrb@moz-kpp3mi.biz.rr.com) has quit (Ping timeout: 121 seconds)
2016-12-15 15:38:59	ekr	Aaronepower: I am getting the impression from all those unstablesthat I should stick with try!
2016-12-15 15:39:06	◣	viomi (viomi@moz-kuv1p2.daviszone.org) has quit (A TLS packet with unexpected length was received.)
2016-12-15 15:39:29	rkruppe	the Carrier trait is unstable but ? isn't
2016-12-15 15:40:00	◣	zxq9 (ceverett@moz-uh0mao.mesh.ad.jp) has quit (Quit: Konversation terminated!)
2016-12-15 15:40:03	ekr	rkruppe: OK
2016-12-15 15:40:39	◥	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has joined #rust
2016-12-15 15:41:37	◣	Dahrkael (Dahrkael@moz-6vm.u1p.25.46.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 15:42:05	◥	sepp2k1 (Sepp2k@moz-nh9td1.dyn.telefonica.de) has joined #rust
2016-12-15 15:42:22	◣	sepp2k (Sepp2k@moz-3ehb2h.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2016-12-15 15:42:24	◣	hexagoxel (hexagoxel@moz-tjfomo.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2016-12-15 15:42:39	Aaronepower	ekr You can can use ? with Result, and when your Result Error enum can be converted to io::Error.
2016-12-15 15:42:53	ekr	Aaronepower: OK, thanks
2016-12-15 15:43:25	Aaronepower	ekr The Carrier trait will hopefully generalise it so it can be used in more situations, like with Option.
2016-12-15 15:43:30	◥	Dima (textual@moz-h36afv.aapt.com.au) has joined #rust
2016-12-15 15:43:53	_habnabit	interesting. i guess because of the Carrier stuff i had to move the annotation from Vec<T> to Result<Vec<T>, _> on a collect call
2016-12-15 15:44:01	◣	canaltinova (uid191250@moz-l3qbqh.tooting.irccloud.com) has quit (Quit: )
2016-12-15 15:44:02	_habnabit	when i went from try! to ?
2016-12-15 15:44:10	_habnabit	(since try! infers Result, i guess)
2016-12-15 15:44:46	emilsp	why doesn't rustc tell me which outer scope variable it can't move ? 
2016-12-15 15:45:27	◣	Th3Ma5hatt3r (textual@moz-bj5u3s.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 15:45:34	◣	mada (mariano@moz-hrb.nhi.170.181.IP) has quit (Quit: WeeChat 1.6)
2016-12-15 15:45:50	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-15 15:46:11	◣	Rusky (rpjohnst@moz-e94.tqe.98.155.IP) has left #rust
2016-12-15 15:46:21	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-15 15:47:21	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2016-12-15 15:48:48	◣	refold (refold@moz-lkj.2mj.172.188.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-15 15:49:15	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-15 15:50:44	◣	FreeFull (freefull@moz-g4qc1p.skybroadband.com) has quit (Quit: Rebooting for nvidia update)
2016-12-15 15:51:51	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-15 15:52:55	◣	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 15:54:31	◥	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has joined #rust
2016-12-15 15:56:34	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2016-12-15 15:56:56	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-15 15:57:47	_habnabit	huh. shouldn't try!/? use Into as well as From? if i have ForeignCrateError and impl Into<ForeignCrateError> for MyCrateError, shouldn't that let me do `Err(MyCrateError)?` on a function that returns Result<(), ForeignCrateError> ?
2016-12-15 15:58:29	ekr	OK, another dumb question: is there a way to kill a thread?
2016-12-15 15:58:34	ekr	from outside?
2016-12-15 15:58:37	rkruppe	_habnabit: each Into impl gives a corresponding From impl
2016-12-15 15:58:41	stjepang	ekr: no
2016-12-15 15:58:58	ekr	stjepang: ok, so I'm going to have to signal it and then wait for it to acknowledge?
2016-12-15 15:59:07	rkruppe	or was it the other way around?
2016-12-15 15:59:11	_habnabit	rkruppe, so, this should work? i can make a test case
2016-12-15 15:59:15	◥	jsgf_ (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2016-12-15 15:59:28	talchas	rkruppe: yeah, it's the other way around
2016-12-15 15:59:29	rkruppe	it should
2016-12-15 15:59:31	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Connection closed)
2016-12-15 15:59:35	stjepang	ekr: exactly
2016-12-15 15:59:36	_habnabit	dang
2016-12-15 16:00:05	_habnabit	so i have to make all my functions convert from foreign-crate to my-crate, and then convert back if i need to?
2016-12-15 16:00:10	◣	Fishrock123 (Fishrock123@moz-hfbsie.dsl.bell.ca) has quit (Quit: Leaving...)
2016-12-15 16:00:23	_habnabit	(if i want to use try!/? with both error types)
2016-12-15 16:00:46	rkruppe	a bit too late over here to say with confidence
2016-12-15 16:00:55	rkruppe	just try it :)
2016-12-15 16:00:58	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-15 16:01:15	◣	sepp2k1 (Sepp2k@moz-nh9td1.dyn.telefonica.de) has quit (Connection closed)
2016-12-15 16:01:58	stjepang	ekr: I once wrote this abstraction for stoppable threads, you might find it useful: https://gist.github.com/stjepang/9c00e56af75b731327cca86a77608083
2016-12-15 16:02:11	◣	srwalker_ (srwalker101@moz-j81.c3c.211.90.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-15 16:02:33	◥	srwalker101 (srwalker101@moz-j81.c3c.211.90.IP) has joined #rust
2016-12-15 16:02:58	ekr	thx
2016-12-15 16:03:25	◣	ot (ot@moz-gmtpic.cpe.webspeed.dk) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161213212120])
2016-12-15 16:04:01	◥	opal_nz (opal_nz@moz-gnv.dbk.110.114.IP) has joined #rust
2016-12-15 16:04:23	◣	opal_nz (opal_nz@moz-gnv.dbk.110.114.IP) has quit (Client exited)
2016-12-15 16:04:37	◥	opal_nz (opal_nz@moz-gnv.dbk.110.114.IP) has joined #rust
2016-12-15 16:06:41	◣	srwalker101 (srwalker101@moz-j81.c3c.211.90.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:06:47	◣	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:06:48	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:07:20	◥	boxofrox (charetjc@moz-podugf.hfc.comcastbusiness.net) has joined #rust
2016-12-15 16:07:23	◥	acsmith (acsmith@moz-8o9ljb.fios.verizon.net) has joined #rust
2016-12-15 16:07:24	◣	Thiez (thiez@moz-8pr4hp.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2016-12-15 16:08:13	◣	Timvde (tim_vdeynd@moz-b64qpj.wina.be) has quit (Connection closed)
2016-12-15 16:09:23	◥	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has joined #rust
2016-12-15 16:10:17	◥	futile (felix@moz-l9elm2.pools.arcor-ip.net) has joined #rust
2016-12-15 16:11:23	◥	cjhowe (cjhowe@moz-4bkr2k.1cuh.qeg5.a601.2605.IP) has joined #rust
2016-12-15 16:12:00	◣	bholley (bholley@moz-8d0g9h.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2016-12-15 16:12:07	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2016-12-15 16:14:30	_habnabit	so why does this use From instead of Into?
2016-12-15 16:14:30	◥	ssokolow (ssokolow@moz-28d.efv.72.45.IP) has joined #rust
2016-12-15 16:15:47	◥	Thiez (thiez@moz-8pr4hp.dynamic.ziggo.nl) has joined #rust
2016-12-15 16:15:56	◥	krebbit (Mibbit@moz-ih3d1t.or.comcast.net) has joined #rust
2016-12-15 16:16:09	◣	bgmerrell (bgmerrell@moz-0lpqk8.members.linode.com) has quit (Connection closed)
2016-12-15 16:17:01	◥	mada (mariano@moz-hrb.nhi.170.181.IP) has joined #rust
2016-12-15 16:17:14	◣	mjs2600 (mjs2600@moz-363rui.vt.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-15 16:18:02	Ralith	_habnabit: you're dealing with handling multiple error types?
2016-12-15 16:18:12	◣	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has quit (Ping timeout: 121 seconds)
2016-12-15 16:18:12	Ralith	look into error-chain
2016-12-15 16:18:30	_habnabit	Ralith, i know of error_chain but i don't think it's possible for it to solve this
2016-12-15 16:18:42	Ralith	what exactly is your problem
2016-12-15 16:19:03	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-15 16:19:15	_habnabit	Ralith, i can't impl From, and try!/? require From to do automatic conversion
2016-12-15 16:19:20	◥	scanfield (scanfield@moz-vkc.t2b.132.104.IP) has joined #rust
2016-12-15 16:19:22	◥	Ploppz (Ploppz@moz-169br5.studby.ntnu.no) has joined #rust
2016-12-15 16:19:31	Ralith	why can't you impl From?
2016-12-15 16:19:37	_habnabit	Ralith, crate boundaries
2016-12-15 16:19:47	Ploppz	running rustup.sh in 'Ubuntu on Windows', it stalls forever at "extracting installer"
2016-12-15 16:19:52	◣	arBmind (Andreas@moz-7uefve.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-15 16:19:54	◥	Dahrkael (Dahrkael@moz-6vm.u1p.25.46.IP) has joined #rust
2016-12-15 16:20:14	◥	umurgdk (umurgdk@moz-1ko.94b.197.46.IP) has joined #rust
2016-12-15 16:20:17	◥	mjs2600 (mjs2600@moz-363rui.vt.comcast.net) has joined #rust
2016-12-15 16:20:24	Ploppz	does this fetch the up-to-date rustup.sh? `curl -f -L https://static.rust-lang.org/rustup.sh -O`
2016-12-15 16:20:29	Ralith	crate boundaries exist, yes
2016-12-15 16:20:49	_habnabit	Ralith, i can't impl From on an error type i didn't define
2016-12-15 16:20:52	Ralith	your error type should be defined within your crate
2016-12-15 16:20:57	_habnabit	Ralith, yes, it is
2016-12-15 16:21:11	Ralith	so what's the problem?
2016-12-15 16:21:19	_habnabit	Ralith, i have ForeignCrateError and impl Into<ForeignCrateError> for MyCrateError
2016-12-15 16:21:35	Ralith	you've got that backwards
2016-12-15 16:21:39	◣	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:21:42	Ralith	you should be returning MyCrateError from your function
2016-12-15 16:21:43	◥	jimb (user@moz-1d5sde.ptld.qwest.net) has joined #rust
2016-12-15 16:21:50	_habnabit	Ralith, yes, ok, that's what i was asking
2016-12-15 16:22:22	Ralith	(at least in circumstances where you wouldn't be better off just constructing a ForeignCrateError directly)
2016-12-15 16:22:41	_habnabit	Ralith, i need to propagate ForeignCrateError back into that crate anyway, so making it go through MyCrateError means that i have to convert and convert back when that error comes from that crate
2016-12-15 16:23:07	rkruppe	Ploppz: no that's old, go to http://rustup.rs
2016-12-15 16:23:11	◣	Guest86 (textual@moz-akl.16j.140.62.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-12-15 16:24:15	◥	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has joined #rust
2016-12-15 16:24:23	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2016-12-15 16:24:36	Aaronepower	ekr There is a way to kill a child thread from the parent.
2016-12-15 16:24:56	◥	FreeFull (freefull@moz-g4qc1p.skybroadband.com) has joined #rust
2016-12-15 16:24:57	ekr	Aaronepower: that's good to hear. What is it? :
2016-12-15 16:24:57	Ploppz	ok thanks. first hit on google though rkruppe
2016-12-15 16:24:59	ekr	:)
2016-12-15 16:25:02	◥	bauerj_ (bauerj@moz-9s8.l12.230.5.IP) has joined #rust
2016-12-15 16:25:27	Aaronepower	ekr https://github.com/Aaronepower/tokei/blob/master/src/main.rs#L83
2016-12-15 16:26:10	ekr	Aaronepower: I know about that, but unfortunately my subthread is calling a blocking API (std::process::Child::wait())
2016-12-15 16:26:15	ssokolow	Does anyone have docs which show examples of the effects of the various rustfmt config keys, rather than just describing them?
2016-12-15 16:26:28	ekr	Aaronepower: so I'd have to set some kind of alarm and loop, etc.
2016-12-15 16:26:40	ssokolow	I'm getting annoyed poking around in the dark trying to figure out the potential culprits for it putting my { on a new line.
2016-12-15 16:26:53	Aaronepower	ekr Can you provide a playpen?
2016-12-15 16:26:58	Aaronepower	!playpen @ ekr
2016-12-15 16:26:58	+rustbot	ekr: <https://play.rust-lang.org> — The Rust Playground (a.k.a. Playpen) is a Web service for running and sharing short Rust programs.
2016-12-15 16:27:31	◥	cetra3 (cetra3@moz-54eqpq.nxg.net.au) has joined #rust
2016-12-15 16:27:40	◣	rschifflin (randy@moz-fr2b0k.lv.cox.net) has quit (Ping timeout: 121 seconds)
2016-12-15 16:27:46	Ploppz	but when I try the new rustup, it tells me to uninstall the old by running /usr/local/lib/rustlib/uninstall.sh but this directory doesn't exist...
2016-12-15 16:27:52	Ploppz	how do I then uninstall it?
2016-12-15 16:27:54	rkruppe	plop
2016-12-15 16:28:08	◣	Thiez (thiez@moz-8pr4hp.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2016-12-15 16:28:11	ssokolow	...and for it breaking between the string and the value in a format!(...) when I've already tried overriding ideal_width to account for the line being 82 characters long.
2016-12-15 16:28:13	◣	krebbit (Mibbit@moz-ih3d1t.or.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-15 16:28:22	rkruppe	Ploppz: might just be a weirdness of Ubuntu-on-Windows
2016-12-15 16:28:27	ekr	Aaronepower: I'll see what I can do
2016-12-15 16:28:45	Ploppz	it's probably from the running the old rustup, rkruppe. I cancelled it with Ctrl+C
2016-12-15 16:28:53	Ploppz	how can I manually uninstall it?
2016-12-15 16:29:15	rkruppe	find the directory where uninstall.sh is
2016-12-15 16:29:31	◣	ineol (textual@moz-plidui.customer.tdc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 16:29:37	⚡	bc|burnin is now known as bc|afk
2016-12-15 16:29:49	Aaronepower	Ploppz Have you ever accessed the WSL Filesystem with win32 programs?
2016-12-15 16:30:27	scanfield	Does anyone have an example of using error-chain in a crate? The examples all use a binary. 
2016-12-15 16:31:24	Ploppz	Aaronepower:  no what is that?
2016-12-15 16:31:31	◣	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:32:17	Aaronepower	Ploppz Ubuntu on Windows is called WSL. 
2016-12-15 16:32:33	Aaronepower	Windows Subsystem for Linux
2016-12-15 16:32:46	Ploppz	Ah
2016-12-15 16:32:58	Aaronepower	Ploppz Did you ever access any of it with win32 programs?
2016-12-15 16:33:09	Ploppz	Aaronepower:  no I haven't. I only recently installed WSL
2016-12-15 16:33:31	◣	sebasmagri (user@moz-l4s.upu.146.189.IP) has quit (Quit: ERC (IRC client for Emacs 25.1.1))
2016-12-15 16:33:34	Aaronepower	Ploppz Okay, don't. If you do it will destroy the filesystem.
2016-12-15 16:33:41	◣	umurgdk (umurgdk@moz-1ko.94b.197.46.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:34:00	◣	ariasuni (ariatsuni@moz-ku7jfh.fbx.proxad.net) has quit (Quit: Konversation terminated!)
2016-12-15 16:34:49	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-15 16:35:30	◥	bronson (bronson@moz-eaa7ba.dynamic.sonic.net) has joined #rust
2016-12-15 16:35:31	◥	Thiez (thiez@moz-8pr4hp.dynamic.ziggo.nl) has joined #rust
2016-12-15 16:36:31	◣	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:36:57	Ploppz	but anyone have any idea where rustup installs things?
2016-12-15 16:37:34	◥	xqwpx (xqwpx@moz-d1q.3sg.152.213.IP) has joined #rust
2016-12-15 16:37:44	◣	ElectroMetro (ElectroMetr@moz-q30ijo.ip.veracitynetworks.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-15 16:37:49	◣	ixti (ixti@moz-bfujrv.dynamicip.rima-tde.net) has quit (Connection closed)
2016-12-15 16:37:50	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-15 16:38:32	◥	junqed (junqed@moz-jcl.rfu.70.178.IP) has joined #rust
2016-12-15 16:39:08	◥	Clinteger (Clint@moz-dj5cp9.bcvf.85g2.0401.2601.IP) has joined #rust
2016-12-15 16:41:53	◥	ixti (ixti@moz-bfujrv.dynamicip.rima-tde.net) has joined #rust
2016-12-15 16:42:01	Aaronepower	Ploppz ~/.multirust
2016-12-15 16:42:22	◥	plutoniix (q@moz-89o.sqp.176.175.IP) has joined #rust
2016-12-15 16:42:34	◣	junqed (junqed@moz-jcl.rfu.70.178.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:42:55	Ploppz	solved it by `find` ,thanks anyway
2016-12-15 16:43:06	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2016-12-15 16:44:12	◣	jdm (jdm@moz-jg5d3s.3t38.sij7.f0c8.2607.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-15 16:44:28	◥	gyng (faux@moz-urnmhv.singnet.com.sg) has joined #rust
2016-12-16 08:19:44	⚡	irc: disconnected from server
2016-12-16 08:19:55	◥	boon (d8v3@moz-jcqrjc.hfc.comcastbusiness.net) has joined #rust
2016-12-16 08:19:55	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-16 08:19:55	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-16 08:19:55	⚡	Channel #rust: 1220 nicks (15 ops, 0 halfops, 3 voices, 1202 normals)
2016-12-16 08:19:59	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-16 08:20:09	◥	marchelzo (marchelzo@moz-fg2sen.ns.bellaliant.net) has joined #rust
2016-12-16 08:20:12	stew	exit
2016-12-16 08:20:14	◣	stew (stew@moz-ektmpt.dyn.optonline.net) has quit (Quit: leaving)
2016-12-16 08:21:03	◣	marchelzo (marchelzo@moz-fg2sen.ns.bellaliant.net) has quit (Client exited)
2016-12-16 08:21:13	◥	niemal (nl@moz-nsaaen.207.tellas.gr) has joined #rust
2016-12-16 08:21:55	◥	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has joined #rust
2016-12-16 08:22:27	◣	undeadleech (undeadleech@moz-h6rdml.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2016-12-16 08:22:52	◥	stew (stew@moz-ektmpt.dyn.optonline.net) has joined #rust
2016-12-16 08:22:54	◥	ville (ville@moz-445rhp.bb.dnainternet.fi) has joined #rust
2016-12-16 08:23:41	◣	cyphase (cyphase@moz-nec92m.c70l.44fu.0640.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 08:24:10	◥	Guest21 (textual@moz-t64.lvo.101.155.IP) has joined #rust
2016-12-16 08:24:42	◥	jsgf (jsgf@moz-1il.ha6.201.199.IP) has joined #rust
2016-12-16 08:24:58	◥	cyphase (cyphase@moz-nec92m.c70l.44fu.0640.2601.IP) has joined #rust
2016-12-16 08:25:59	◥	iiddnn__ (iacopodeeno@moz-fompeo.retail.telecomitalia.it) has joined #rust
2016-12-16 08:26:05	◥	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has joined #rust
2016-12-16 08:26:07	◣	vks (quassel@moz-0ckkk8.fias.uni-frankfurt.de) has quit (Ping timeout: 121 seconds)
2016-12-16 08:26:46	◣	newpavlov (newpavlov@moz-kdt5m8.in-addr.mastertelecom.ru) has quit (Quit: WeeChat 1.4)
2016-12-16 08:27:43	◣	xliiv (xliiv@moz-893luh.icpnet.pl) has quit (Ping timeout: 121 seconds)
2016-12-16 10:01:46	⚡	irc: disconnected from server
2016-12-16 10:02:02	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2016-12-16 10:02:02	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-16 10:02:02	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-16 10:02:02	⚡	Channel #rust: 1227 nicks (15 ops, 0 halfops, 3 voices, 1209 normals)
2016-12-16 10:02:05	◥	fireglow (fireglow@moz-8396m4.01l3.umbq.0bc8.2001.IP) has joined #rust
2016-12-16 10:02:06	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-16 10:02:57	◥	eligreen (eligreen@moz-qhtc69.dynamic.jazztel.es) has joined #rust
2016-12-16 10:03:01	◥	fyolnish (fyolnish@moz-01nphm.so-net.ne.jp) has joined #rust
2016-12-16 10:03:07	◥	meh (meh@moz-47v.c9u.42.151.IP) has joined #rust
2016-12-16 10:03:31	breeden_	\o/
2016-12-16 10:03:32	◥	craigjb (textual@moz-vlkb7k.ph.cox.net) has joined #rust
2016-12-16 10:03:34	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2016-12-16 10:03:58	durka42	with error-chain, what are my options when the Error type isn't Send?
2016-12-16 10:04:07	durka42	here, it's a PoisonError containing a MutexGuard
2016-12-16 10:04:23	durka42	should I just call map_err instead of chain_err?
2016-12-16 10:04:28	◥	tristianc_ (tristianc@moz-hpl9sq.dc.cox.net) has joined #rust
2016-12-16 10:05:42	◥	ndhoule (ndhoule@moz-ousraa.ca.comcast.net) has joined #rust
2016-12-16 10:05:42	breeden_	i need to figure out how to use error chain myself
2016-12-16 10:05:42	◣	Shtong (realshtong@moz-64t89t.abo.wanadoo.fr) has quit (Connection closed)
2016-12-16 10:05:42	breeden_	durka42: do you think I could take a look at how you are using it?
2016-12-16 10:05:42	durka42	breeden_: I'm in the early stages of bolting it on to a large app right now :)
2016-12-16 10:05:42	breeden_	ok, I'll ask again in 30 minutes
2016-12-16 10:05:42	durka42	I started with http://brson.github.io/2016/11/30/starting-with-error-chain
2016-12-16 10:05:54	◥	urcra (urcra@moz-9lk9gn.cpe.webspeed.dk) has joined #rust
2016-12-16 10:05:57	◣	arBmind (Andreas@moz-5i3fql.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-16 10:06:02	breeden_	yeah that's a good start, i guess i need to just sit down and figure out what all the macros actually do, tbh
2016-12-16 10:06:03	◥	jrmuizel (jrmuizel@moz-1fmjjt.5vs3.sij7.f0c8.2607.IP) has joined #rust
2016-12-16 10:06:08	◥	ygrek_ (user@moz-8j9aeu.org.ua) has joined #rust
2016-12-16 10:06:22	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2016-12-16 10:06:31	breeden_	i won't understand until I see concrete code the macro generates really
2016-12-16 10:06:31	Moonlightning	DemiMarie: a series of statements that ends with an expression is an expression.
2016-12-16 10:07:03	◣	fyolnish (fyolnish@moz-01nphm.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2016-12-16 10:07:15	◥	starblue (juergen@moz-s3dlj6.dip0.t-ipconnect.de) has joined #rust
2016-12-16 10:08:33	⚡	emilio is now known as emilio|runningaway
2016-12-16 10:08:43	⚡	emilio|runningaway is now known as emilio
2016-12-16 10:10:00	◥	bcmyers (bcmyers@moz-4sc9qb.3jhe.qnm0.6000.2605.IP) has joined #rust
2016-12-16 10:10:49	◣	Eonil (Eonil@moz-d0u.msa.69.118.IP) has quit (Quit: This computer has gone to sleep)
2016-12-16 10:11:03	◣	rootnode (rootnode@moz-qga.j2u.150.153.IP) has quit (Quit: WeeChat 1.6)
2016-12-16 10:11:14	◥	jerknextdoor (Cameron@moz-4jmrvk.in.comcast.net) has joined #rust
2016-12-16 10:11:15	◥	bronson (bronson@moz-eaa7ba.dynamic.sonic.net) has joined #rust
2016-12-16 10:11:17	◥	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has joined #rust
2016-12-16 10:11:30	◥	Fishrock123 (Fishrock123@moz-bu8and.dsl.bell.ca) has joined #rust
2016-12-16 10:11:34	◥	rootnode (rootnode@moz-qga.j2u.150.153.IP) has joined #rust
2016-12-16 10:11:40	◣	jerknextdoor (Cameron@moz-4jmrvk.in.comcast.net) has quit (Connection closed)
2016-12-16 10:11:51	◣	helix (abacaxi@moz-q96skh.torproject.org) has quit (Quit: Lost terminal)
2016-12-16 10:11:58	durka42	breeden_: here's the first commit removing a couple of unwraps https://github.com/haptics-nri/nri/commit/a6758528cc344463a470c43e17546c361b1c6385
2016-12-16 10:12:07	◥	jerknextdoor (Cameron@moz-4jmrvk.in.comcast.net) has joined #rust
2016-12-16 10:12:34	◣	jerknextdoor (Cameron@moz-4jmrvk.in.comcast.net) has quit (Connection closed)
2016-12-16 10:12:41	◥	helix (abacaxi@moz-q96skh.torproject.org) has joined #rust
2016-12-16 10:13:03	◥	ebvalaim (bartek@moz-ehk6a9.dynamic.chello.pl) has joined #rust
2016-12-16 10:13:22	◣	marchelzo (marchelzo@moz-fg2sen.ns.bellaliant.net) has quit (Client exited)
2016-12-16 10:13:37	breeden_	how do the backtraces look?
2016-12-16 10:13:52	◣	starblue (juergen@moz-s3dlj6.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2016-12-16 10:13:53	◥	starblue1 (juergen@moz-s3dlj6.dip0.t-ipconnect.de) has joined #rust
2016-12-16 10:13:53	◣	johalun (johalun@moz-s7mejm.f1t1.3k89.0647.2601.IP) has quit (Connection closed)
2016-12-16 10:14:22	◥	johalun (johalun@moz-s7mejm.f1t1.3k89.0647.2601.IP) has joined #rust
2016-12-16 10:14:40	breeden_	same thing you'd expect from a panic?
2016-12-16 10:15:18	⚡	agibson is now known as agibson|afk
2016-12-16 10:15:36	◣	bronson (bronson@moz-eaa7ba.dynamic.sonic.net) has quit (Ping timeout: 121 seconds)
2016-12-16 10:16:04	◥	rfkrocktk (uid176380@moz-tsv2qn.tooting.irccloud.com) has joined #rust
2016-12-16 10:16:46	rfkrocktk	What is the built-in sorting algorithm for Vec::sort? It is described as O(n log n) time complexity but requires double the heap space. Is there a heap sort algorithm for Vec in the standard libraries?
2016-12-16 10:17:33	◣	callym (quassel@moz-g3d74q.cable.virginm.net) has quit (Quit: No Ping reply in 210 seconds.)
2016-12-16 10:18:08	breeden_	it just changed!
2016-12-16 10:18:26	breeden_	let me see if I can get the PR for it, which described it in some good detail
2016-12-16 10:18:31	◣	chris_ (chris@moz-kjmcb0.2b9j.4sa0.008b.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 10:18:34	rfkrocktk	I'm seeing this: https://doc.rust-lang.org/std/primitive.slice.html#method.sort
2016-12-16 10:18:40	◣	chris__ (chris@moz-kjmcb0.2b9j.4sa0.008b.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 10:19:11	rfkrocktk	I have a _fairly_ large array of around 6,000 items that I need to sort relatively quickly
2016-12-16 10:19:19	rfkrocktk	and without too much memory overhead
2016-12-16 10:19:57	◣	bcmyers (bcmyers@moz-4sc9qb.3jhe.qnm0.6000.2605.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2016-12-16 10:20:10	◥	callym (quassel@moz-g3d74q.cable.virginm.net) has joined #rust
2016-12-16 10:20:36	breeden_	rfkrocktk: https://github.com/rust-lang/rust/pull/38192
2016-12-16 10:20:42	breeden_	sor I believe this is in nightly
2016-12-16 10:21:00	simulacrum	Yeah
2016-12-16 10:21:17	simulacrum	rfkrocktk: How large is each item?
2016-12-16 10:21:24	talchas	yeah, the short answer is "a merge sort variant"
2016-12-16 10:21:53	talchas	since afaik all/basically all stable nlogn sorts are merge sort variants
2016-12-16 10:22:19	breeden_	merge sort is in place?
2016-12-16 10:22:32	Moonlightning	rfkrocktk: there's std::collections::BinaryHeap
2016-12-16 10:23:12	Moonlightning	IIRC there's a method to make one from a Vec, and a method to convert one to a Vec in place
2016-12-16 10:23:53	simulacrum	There's a impl<T> From<Vec<T>> for BinaryHeap<T> where T: Ord
2016-12-16 10:24:07	breeden_	simulacrum: sounds expensive
2016-12-16 10:24:10	simulacrum	And to_vec and to_sorted_vec
2016-12-16 10:24:18	◣	jimb (user@moz-1d5sde.ptld.qwest.net) has quit (Ping timeout: 121 seconds)
2016-12-16 10:24:26	simulacrum	breeden_: What does?
2016-12-16 10:25:00	breeden_	Vec<T> -> BH<T> conversion
2016-12-16 10:25:09	◣	skeuomorf (skeuomorf@moz-4te.1es.210.156.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-16 10:25:40	simulacrum	Yeah, it probably is if the original Vec isn't sorted
2016-12-16 10:25:49	simulacrum	But it's in place
2016-12-16 10:25:49	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-16 10:25:51	◥	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has joined #rust
2016-12-16 10:25:53	◥	woboats (lee@moz-8rajde.ca.comcast.net) has joined #rust
2016-12-16 10:26:15	◣	russ_za_ (smuxi@moz-j0gtds.voxdsl.co.za) has quit (Ping timeout: 121 seconds)
2016-12-16 10:26:16	◥	russ_za (smuxi@moz-qiq4rp.voxdsl.co.za) has joined #rust
2016-12-16 10:26:19	breeden_	oh really? huh
2016-12-16 10:26:48	Moonlightning	simulacrum: you mean if the original Vec isn't already heapified?
2016-12-16 10:27:08	simulacrum	Hm?
2016-12-16 10:27:14	simulacrum	Yeah, I gues
2016-12-16 10:27:41	simulacrum	I would assume BinaryHeap.to_sorted_vec().into(): BinaryHeap to be O(n) to just verify that everything is sorted
2016-12-16 10:28:05	◥	junqed (junqed@moz-jcl.rfu.70.178.IP) has joined #rust
2016-12-16 10:28:48	◥	chris__ (chris@moz-kjmcb0.2b9j.4sa0.008b.2601.IP) has joined #rust
2016-12-16 10:28:57	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-16 10:29:08	◥	chris_ (chris@moz-kjmcb0.2b9j.4sa0.008b.2601.IP) has joined #rust
2016-12-16 10:30:14	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-16 10:31:40	◥	acsmith (acsmith@moz-1mf03l.res.rr.com) has joined #rust
2016-12-16 10:31:57	◣	creationix (creationix@moz-69oa2g.cpe.cableone.net) has quit (Ping timeout: 121 seconds)
2016-12-16 10:32:22	◣	Kynes (Kynes@moz-j2us35.mit.edu) has quit (Quit: Leaving)
2016-12-16 10:32:39	◣	kaljamies69 (kaljamies@moz-ramduc.60.citypartner.pl) has quit (Ping timeout: 121 seconds)
2016-12-16 10:32:51	◥	raichoo (raichoo@moz-5krg8k.versanet.de) has joined #rust
2016-12-16 10:33:06	◣	lucian (lucian@moz-iuo.htl.74.194.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 10:34:37	◥	creationix (creationix@moz-htn.oju.32.72.IP) has joined #rust
2016-12-16 10:35:06	◥	skeuomorf (skeuomorf@moz-4te.1es.210.156.IP) has joined #rust
2016-12-16 10:37:37	◥	arBmind (Andreas@moz-ra1fjf.dyn.telefonica.de) has joined #rust
2016-12-16 10:38:23	◣	raichoo (raichoo@moz-5krg8k.versanet.de) has quit (Ping timeout: 121 seconds)
2016-12-16 10:38:41	durka42	breeden_: yeah there is a backtrace if RUST_BACKTRACE=1
2016-12-16 10:38:42	◥	jsgf (jsgf@moz-183.9o0.201.199.IP) has joined #rust
2016-12-16 10:38:51	breeden_	oh i see
2016-12-16 10:38:56	◥	raichoo (raichoo@moz-5krg8k.versanet.de) has joined #rust
2016-12-16 10:39:04	durka42	https://gist.github.com/49c95707c8bb19b96734d85c50e0461f
2016-12-16 10:39:07	breeden_	ok, i'm going to write up some error_chain code to play around with it
2016-12-16 10:39:09	◥	Dahrkael (Dahrkael@moz-6vm.u1p.25.46.IP) has joined #rust
2016-12-16 10:39:38	durka42	that gist shows what happens from a bail!("...") in try_main
2016-12-16 10:39:50	rfkrocktk	breeden_: so should I start with a BinaryHeap instead of a vector?
2016-12-16 10:40:02	breeden_	rfkrocktk: idk
2016-12-16 10:40:03	◥	mgottschlag (quassel@moz-6s4pm9.dip0.t-ipconnect.de) has joined #rust
2016-12-16 10:40:27	breeden_	i mean, then you have to worry about insertion costs and lookup costs
2016-12-16 10:40:56	breeden_	wait, there is not lookup costs?
2016-12-16 10:40:56	rfkrocktk	right
2016-12-16 10:41:19	◣	_ixti_ (ixti@moz-bfujrv.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2016-12-16 10:41:32	◣	qaz (qaz@moz-ra6.cdi.233.117.IP) has quit (Quit: Leaving)
2016-12-16 10:41:59	breeden_	and insertions are log(n) and inserting n times, gives you some kind of werid sum: Sum klog(k), which is that O(nlog(n))?
2016-12-16 10:42:15	breeden_	i dont think so
2016-12-16 10:43:08	◣	LRN (Miranda@moz-63ipbh.nationalcablenetworks.ru) has quit (Connection closed)
2016-12-16 10:43:44	◣	ohyllad (krl@moz-rprk58.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2016-12-16 10:44:00	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2016-12-16 10:44:18	breeden_	probably comparable to int_1^n xlog(x) dx which is like -int_1^n x dx ~ x^2
2016-12-16 10:44:33	breeden_	n^2 i guess ignoring signs or somethign
2016-12-16 10:44:39	◣	skeuomorf (skeuomorf@moz-4te.1es.210.156.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-16 10:45:07	breeden_	rfkrocktk: idk, i guess it's cheaper to convert it when you need it, if you are going to be doing it often
2016-12-16 10:45:58	rfkrocktk	I will be extracting around 6k media file metadata entries from the filesystem and it is crucial that this is sorted
2016-12-16 10:45:59	breeden_	but you won't know for sure unless you test it, these are ignoring implied constatns
2016-12-16 10:46:18	breeden_	rfkrocktk: yeah, my guess is to collect it then sort it
2016-12-16 10:46:37	breeden_	seems like continuously inserting into a BH will be O(n^2) after the dust settles
2016-12-16 10:46:38	rfkrocktk	yeah, that probably makes the most sense
2016-12-16 10:46:47	rfkrocktk	yeah, that makes sense
2016-12-16 10:46:49	◣	durka42 (durka42@moz-itei31.pa.comcast.net) has quit (Client exited)
2016-12-16 10:48:37	breeden_	oh wait, it would be Sum log(k) wouldn't it, don't know what I thought klog(k), and that is O(nlog(n)) for sure
2016-12-16 10:48:41	breeden_	so maybe it doesn't matter
2016-12-16 10:49:06	◥	ai (ai@moz-0bh.58o.60.92.IP) has joined #rust
2016-12-16 10:49:08	◥	Norf (norfen@moz-sl4.eu3.112.66.IP) has joined #rust
2016-12-16 10:49:16	◥	Noldorin (noldorin@moz-3m0dvr.r2j2.07bk.0c7d.2a02.IP) has joined #rust
2016-12-16 10:49:28	rfkrocktk	have to look at binary heaps
2016-12-16 10:49:48	◥	nicoch (nicoch@moz-qburak.2utt.76f9.0e34.2a01.IP) has joined #rust
2016-12-16 10:49:55	◣	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2016-12-16 10:50:01	◣	mjs2600 (mjs2600@moz-5o6.h54.233.140.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-16 10:51:25	◣	scrogson1 (scrogson@moz-hq694i.tftc.9t39.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 10:51:29	◥	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has joined #rust
2016-12-16 10:51:50	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 10:51:54	◥	gavin (gavin@irc.mozilla.org) has joined #rust
2016-12-16 10:51:57	◥	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has joined #rust
2016-12-16 10:54:10	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-16 10:54:50	◣	ygrek_ (user@moz-8j9aeu.org.ua) has quit (Ping timeout: 121 seconds)
2016-12-16 10:55:01	◥	REMqb (REMqb@moz-0oqgpt.abo.wanadoo.fr) has joined #rust
2016-12-16 10:55:24	◥	LRN (Miranda@moz-63ipbh.nationalcablenetworks.ru) has joined #rust
2016-12-16 10:56:02	◥	xliiv (xliiv@moz-893luh.icpnet.pl) has joined #rust
2016-12-16 10:56:31	◣	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2016-12-16 10:56:33	◣	gavin (gavin@irc.mozilla.org) has quit (Ping timeout: 121 seconds)
2016-12-16 10:56:36	bascule	anyone have opinions on this? https://github.com/cfallin/rust-immutable-arena
2016-12-16 10:56:51	bascule	I want something like that, but preferably #![no_std] compatible
2016-12-16 10:57:08	◣	arBmind (Andreas@moz-ra1fjf.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-16 10:58:46	◣	dranov (dranov@moz-u7mpcl.ucl.ac.uk) has quit (Connection closed)
2016-12-16 10:59:21	◣	chris_ (chris@moz-kjmcb0.2b9j.4sa0.008b.2601.IP) has quit (Quit: Ex-Chat)
2016-12-16 10:59:57	◣	Snicksie (Snicksie@moz-pfi17b.cs.kuleuven.be) has quit (A TLS packet with unexpected length was received.)
2016-12-16 11:00:04	◥	jimb (user@moz-9lrsc4.0ace.pc9q.3004.2603.IP) has joined #rust
2016-12-16 11:00:06	◣	chris__ (chris@moz-kjmcb0.2b9j.4sa0.008b.2601.IP) has quit (Quit: Ex-Chat)
2016-12-16 11:00:39	bascule	I also don't need to support cyclical refs
2016-12-16 11:01:17	ticki	Friday!
2016-12-16 11:01:25	bascule	indeed!
2016-12-16 11:01:30	ticki	https://www.youtube.com/watch?v=kfVsfOSbJY0
2016-12-16 11:02:12	◣	geemili (geemili@moz-v6j.c8a.50.50.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 11:02:22	◣	nicoch (nicoch@moz-qburak.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2016-12-16 11:03:26	bascule	hmm, ^^^ rena library is based on typed_arena, which is backed by a Vec :|
2016-12-16 11:03:30	bascule	*arena
2016-12-16 11:03:56	bascule	I want something that takes e.g. &mut [u8; SLAB_SIZE]
2016-12-16 11:04:20	◥	geemili (geemili@moz-v6j.c8a.50.50.IP) has joined #rust
2016-12-16 11:04:21	bascule	so I can ideally just pass it a buffer that lives on the stack
2016-12-16 11:04:27	◥	rschifflin (randy@moz-rdkkob.9f9c.64c2.8801.2600.IP) has joined #rust
2016-12-16 11:04:59	@steveklabnik	iirc whitequark had some kind of buffer thing?
2016-12-16 11:05:16	◥	Snicksie (Snicksie@moz-pfi17b.cs.kuleuven.be) has joined #rust
2016-12-16 11:06:03	◣	raichoo (raichoo@moz-5krg8k.versanet.de) has quit (Ping timeout: 121 seconds)
2016-12-16 11:06:13	bascule	maybe I'll just write my own
2016-12-16 11:07:01	◥	pounce (pounce@moz-vi09a1.or.frontiernet.net) has joined #rust
2016-12-16 11:07:05	breeden_	what's the default macro recursion limit in rust?
2016-12-16 11:08:05	ticki	breeden_: 32
2016-12-16 11:08:09	◣	Froox (Frooxius@moz-7td.d1o.108.194.IP) has quit (Quit: *bubbles away*)
2016-12-16 11:08:22	ticki	it used to be that. Maybe it is changed, though
2016-12-16 11:08:24	◥	mjs2600 (mjs2600@moz-5o6.h54.233.140.IP) has joined #rust
2016-12-16 11:08:36	@steveklabnik	bascule: https://github.com/whitequark/rust-log_buffer
2016-12-16 11:08:45	breeden_	it always seems like the default to increase the limit is "1024" which is a little funny :P
2016-12-16 11:08:48	@steveklabnik	bascule: not exactly what you're after but should give you some ideas
2016-12-16 11:09:03	bluss	breeden_: the default is a bit low
2016-12-16 11:09:13	breeden_	that's a big jump
2016-12-16 11:09:48	bluss	the recursion used to consume stack, but it doesn't anymore, so it's not the same kind of issue anymore
2016-12-16 11:10:06	breeden_	ah, hmm, that makes sense
2016-12-16 11:10:08	◣	Noldorin (noldorin@moz-3m0dvr.r2j2.07bk.0c7d.2a02.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-16 11:10:28	◣	rschifflin (randy@moz-rdkkob.9f9c.64c2.8801.2600.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 11:10:35	ticki	bluss: yup, you used to be able to make a stack overflow with generics and macros.
2016-12-16 11:10:55	breeden_	i'mm going to keep mine low anyway.  I guess I'd like to know if I am deeply recursing anyway
2016-12-16 11:10:59	bluss	aha
2016-12-16 11:11:00	◣	xliiv (xliiv@moz-893luh.icpnet.pl) has quit (Ping timeout: 121 seconds)
2016-12-16 11:11:05	◣	woboats (lee@moz-8rajde.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 11:11:05	bascule	steveklabnik: cool, thanks
2016-12-16 11:11:09	◥	mpdrescher (Thunderbird@moz-9us6lu.dip0.t-ipconnect.de) has joined #rust
2016-12-16 11:11:16	breeden_	ill try 256, since powers of 2 are good numbers
2016-12-16 11:11:25	◣	mpdrescher (Thunderbird@moz-9us6lu.dip0.t-ipconnect.de) has quit (Client exited)
2016-12-16 11:11:30	◥	Savago (Savago@moz-01f.m22.140.217.IP) has joined #rust
2016-12-16 11:12:21	bascule	steveklabnik: this is indeed a good starting point
2016-12-16 11:13:16	◣	mjs2600 (mjs2600@moz-5o6.h54.233.140.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-16 11:13:28	◥	khuey (khuey@moz-pd2jti.ca.comcast.net) has joined #rust
2016-12-16 11:14:05	khuey	is there a particular trie implementation that's considered canonical?
2016-12-16 11:14:35	khuey	rust_sequence_trie looks the most promising, I think
2016-12-16 11:14:55	khuey	er, rust_radix_tree rather
2016-12-16 11:15:01	◥	ygrek_ (user@moz-8j9aeu.org.ua) has joined #rust
2016-12-16 11:15:14	pingveno	IIRC, this is the one that used to be in the stdlib: https://github.com/contain-rs/trie
2016-12-16 11:15:15	@steveklabnik	bascule: :)
2016-12-16 11:15:18	◥	jq-rs (Mibbit@moz-nhsjak.226.threembb.ie) has joined #rust
2016-12-16 11:15:38	khuey	pingveno: ah, nice
2016-12-16 11:15:50	◥	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has joined #rust
2016-12-16 11:16:51	◣	Norf (norfen@moz-sl4.eu3.112.66.IP) has quit (Client exited)
2016-12-16 11:17:03	◥	Norf (norfen@moz-sl4.eu3.112.66.IP) has joined #rust
2016-12-16 11:17:16	◣	Norf (norfen@moz-sl4.eu3.112.66.IP) has quit (Client exited)
2016-12-16 11:17:24	◥	Norf (norfen@moz-sl4.eu3.112.66.IP) has joined #rust
2016-12-16 11:17:46	◣	Norf (norfen@moz-sl4.eu3.112.66.IP) has left #rust ("")
2016-12-16 11:17:50	◥	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has joined #rust
2016-12-16 11:17:50	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2016-12-16 11:18:25	◣	vadix_ (vadix@moz-h9klev.nkcu.i5co.05c1.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 11:22:29	◥	Noldorin (noldorin@moz-rgheg4.r2j2.07bk.0c7d.2a02.IP) has joined #rust
2016-12-16 11:22:33	◣	Ralith__ (ralith@moz-2euevb.customer.broadstripe.net) has quit (A TLS packet with unexpected length was received.)
2016-12-16 11:22:35	◥	ubsandroid_ (ubsan@moz-57b507.subnet.rcn.com) has joined #rust
2016-12-16 11:22:40	◣	ubsandroid (ubsan@moz-57b507.subnet.rcn.com) has quit (Connection closed)
2016-12-16 11:22:42	◥	skeuomorf (skeuomorf@moz-4te.1es.210.156.IP) has joined #rust
2016-12-16 11:23:13	◣	ubsandroid_ (ubsan@moz-57b507.subnet.rcn.com) has quit (Connection closed)
2016-12-16 11:23:13	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2016-12-16 11:23:21	◥	ubsandroid (ubsan@moz-tsvm31.rktg.figv.fb90.2607.IP) has joined #rust
2016-12-16 11:23:45	◥	TweyII (twey@moz-565.jnt.91.81.IP) has joined #rust
2016-12-16 11:24:04	◥	wcrichto (wcrichto@moz-gbg2ib.oc95.t10d.e000.2605.IP) has joined #rust
2016-12-16 11:24:22	wcrichto	what's the recommended way nowadays of passing link flags to a cargo build?
2016-12-16 11:24:35	wcrichto	like i can do `cargo rustc --lib -- -lmylib`
2016-12-16 11:24:42	wcrichto	but ideally i could replicate that behavior when i do `cargo build`
2016-12-16 11:24:50	◣	jsbruner (Instantbird@moz-a67gs2.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 11:25:16	@steveklabnik	a build script
2016-12-16 11:25:22	◥	mjs2600 (mjs2600@moz-363rui.vt.comcast.net) has joined #rust
2016-12-16 11:25:33	@steveklabnik	http://doc.crates.io/build-script.html
2016-12-16 11:25:39	TweyII	I know I can match on the topmost constructor of a reference like so: match *some_ref { Foo(ref mut a, ref mut b) => … }.  My question is: what if I want to simultaneously match on the contents of a and b here, without taking the contents of some_ref?  How can I match on the values pointed by two references simultaneously?
2016-12-16 11:25:56	◥	Jackneill (Jackneill@moz-lo0c1n.static.digikabel.hu) has joined #rust
2016-12-16 11:26:27	misdreavus	you can create patterns recursively as far down as you need
2016-12-16 11:26:45	wcrichto	thanks steve!
2016-12-16 11:26:47	◥	seeday (norfen@moz-sl4.eu3.112.66.IP) has joined #rust
2016-12-16 11:27:53	@steveklabnik	np
2016-12-16 11:28:02	◣	acsmith (acsmith@moz-1mf03l.res.rr.com) has quit (Client exited)
2016-12-16 11:28:22	◣	geemili (geemili@moz-v6j.c8a.50.50.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 11:28:51	jorendorff	TIL `rustup doc` <3
2016-12-16 11:28:58	@steveklabnik	:D
2016-12-16 11:29:20	misdreavus	TweyII: like so https://is.gd/awfs0X
2016-12-16 11:29:41	◥	kaljamies69 (kaljamies@moz-ramduc.60.citypartner.pl) has joined #rust
2016-12-16 11:31:36	◣	dormiens (alanjcfs@moz-04u.dnf.241.192.IP) has quit (Quit: Leaving)
2016-12-16 11:31:47	◣	santiago (santiago@moz-rlvtng.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2016-12-16 11:31:55	◣	wccole (quassel@moz-bm54rh.al.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 11:32:04	darkstalker	if i have two crates, A and B, and both of them import crate C and i use a type inside C on both, do both crates see the same type? or it creates separate instances?
2016-12-16 11:32:10	◥	dormiens (alanjcfs@moz-04u.dnf.241.192.IP) has joined #rust
2016-12-16 11:32:35	@steveklabnik	it depends
2016-12-16 11:32:39	◥	saimen (saimen@moz-i2kas4.natpool.mwn.de) has joined #rust
2016-12-16 11:32:42	darkstalker	like, if A and B reexports C::SharedType
2016-12-16 11:32:43	@steveklabnik	on how A and B depend on it
2016-12-16 11:32:51	darkstalker	it's A::SharedType == B::SharedType ?
2016-12-16 11:32:53	@steveklabnik	if there can be a single unified version, then rust will do it
2016-12-16 11:33:03	@steveklabnik	well cargo
2016-12-16 11:33:16	@steveklabnik	but if they can't be made compitible, each will get their own copy of C at the version that works for them
2016-12-16 11:33:28	darkstalker	so, if it's the same version it will be the same type?
2016-12-16 11:33:44	◣	ubsandroid (ubsan@moz-tsvm31.rktg.figv.fb90.2607.IP) has quit (Quit: <3)
2016-12-16 11:33:45	misdreavus	TweyII: or perhaps more pertinent to your example https://is.gd/4LG0X7
2016-12-16 11:33:49	@steveklabnik	should be, yeah
2016-12-16 13:13:52	⚡	irc: disconnected from server
2016-12-16 13:14:05	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2016-12-16 13:14:05	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-16 13:14:05	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-16 13:14:05	⚡	Channel #rust: 1231 nicks (16 ops, 0 halfops, 3 voices, 1212 normals)
2016-12-16 13:14:06	&Manishearth	carols10cents: in check_crate create a visitor, implement the lint within the visitor
2016-12-16 13:14:09	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-16 13:14:14	Hail_Spacecake	right, I've seen that output when I compile ordinary rust that uses println! or what have you
2016-12-16 13:14:14	&Manishearth	carols10cents: and once you're done report results from check_crate
2016-12-16 13:14:18	Hail_Spacecake	and tell it to expand macros
2016-12-16 13:14:18	carols10cents	Manishearth: what about check_crate_post?
2016-12-16 13:14:29	Hail_Spacecake	and the reason I'm thinking about this at all is because I"m struck that the expanded string format code
2016-12-16 13:14:30	&Manishearth	carols10cents: that exists?
2016-12-16 13:14:33	◥	ghisvail (ghisvail@moz-n3upda.cable.virginm.net) has joined #rust
2016-12-16 13:14:34	Hail_Spacecake	seems really messy and verbose
2016-12-16 13:14:39	Hail_Spacecake	and I realize it's not meant to be human readable
2016-12-16 13:14:48	&Manishearth	carols10cents: oh, it does
2016-12-16 13:14:51	Hail_Spacecake	but, maybe it should be?
2016-12-16 13:14:52	carols10cents	Manishearth: i *just* found it, since durka42 said "use check_crate"
2016-12-16 13:14:52	&Manishearth	carols10cents: yeah, that's what you need to use
2016-12-16 13:14:57	carols10cents	\o/
2016-12-16 13:15:00	&Manishearth	you want check_crate_post
2016-12-16 13:15:04	&Manishearth	check_crate runs before the lints
2016-12-16 13:15:11	carols10cents	YAYAYAYAYAYAY
2016-12-16 13:15:17	◣	C4K3 (C4K3@moz-h6fjt2.0.fullrate.ninja) has quit (Ping timeout: 121 seconds)
2016-12-16 13:15:28	Hail_Spacecake	I can imagine creating my own struct StringFormatterBuilder { ... } with some set of methods
2016-12-16 13:15:32	Hail_Spacecake	and having an api that looks like
2016-12-16 13:15:37	&Manishearth	the post methods were added so that clippy wouldn't have to do the visitor trick in many cases (because that increases the number of traversals which is slow)
2016-12-16 13:15:47	&Manishearth	didn't know one ofr crate existed since we don't need that
2016-12-16 13:15:53	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-16 13:15:59	◥	woboats (woboats@moz-i3d.gf4.16.4.IP) has joined #rust
2016-12-16 13:16:02	carols10cents	Manishearth: i stole lots of clippy code btw
2016-12-16 13:16:06	carols10cents	sooo thank you <3
2016-12-16 13:16:08	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 13:16:08	Hail_Spacecake	StringFormatterBuilder::new().append("Hello").append(my_var.display()).build().unwrap() or something along those lines
2016-12-16 13:16:20	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-16 13:16:23	Hail_Spacecake	and that's what the format macro would produce under teh hood
2016-12-16 13:16:32	Hail_Spacecake	and that's a lot nicer looking than what rust actually produces in the macro epansion
2016-12-16 13:16:49	◥	ehiggs (ehiggs@moz-s7dsfa.access.telenet.be) has joined #rust
2016-12-16 13:16:49	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-16 13:16:59	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2016-12-16 13:16:59	ehiggs	rustup update nightly -> error: checksum failed, expected: 'b92ec8ab6db97a75282f4827a38abac3225351842bc31ec492f7c30155d8452e', calculated: '0a25a85e49d4476724c1666ee1dc9a0c02017897b8788f4efdb721417320fcc1'
2016-12-16 13:17:11	&Manishearth	carols10cents: :)
2016-12-16 13:17:14	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-16 13:17:17	ehiggs	"info: update not yet available, sorry! try again later"
2016-12-16 13:18:37	◣	ghisvail (ghisvail@moz-n3upda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-16 13:18:42	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2016-12-16 13:18:57	◣	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has quit (Quit: leaving)
2016-12-16 13:19:00	◥	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has joined #rust
2016-12-16 13:19:57	◥	Mermi_ (uid96745@moz-ltoie4.hathersage.irccloud.com) has joined #rust
2016-12-16 13:22:09	◥	kristof (Mibbit@moz-sjtpaj.rk.wavecable.com) has joined #rust
2016-12-16 13:22:20	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-16 13:22:34	kristof	Has anyone successfully used rustup and mingw to cross compile from linux to windows... on a gitlab docker image?
2016-12-16 13:22:40	kristof	Here's my last attempt: http://hastebin.com/uniwomifex.sql
2016-12-16 13:22:45	◣	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has quit (Quit: leaving)
2016-12-16 13:22:48	◥	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has joined #rust
2016-12-16 13:22:52	kristof	I try to manually install the mingw toolchain but it's a whopping gig!
2016-12-16 13:23:00	◥	C4K3 (C4K3@moz-h6fjt2.0.fullrate.ninja) has joined #rust
2016-12-16 13:23:14	◥	freefall (ff@moz-5qhocd.rev.poneytelecom.eu) has joined #rust
2016-12-16 13:23:14	◣	freefall (ff@moz-5qhocd.rev.poneytelecom.eu) has quit (Z-Lined: Your IP, 163.172.21.117, is listed in the EFnet RBL. For further information, visit http://rbl.efnetrbl.org/?i=163.172.21.117)
2016-12-16 13:23:42	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Quit: WeeChat 1.5)
2016-12-16 13:24:06	◣	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 13:24:16	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-16 13:24:45	durka42	ehiggs: weird it works fine here
2016-12-16 13:24:53	◥	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has joined #rust
2016-12-16 13:25:19	ehiggs	macos sierra here
2016-12-16 13:25:39	◣	jdm (jdm@moz-3eu2pc.cpe.teksavvy.com) has quit (Quit: )
2016-12-16 13:25:43	durka42	mavericks
2016-12-16 13:25:50	durka42	and ubuntu
2016-12-16 13:26:48	&Manishearth	carols10cents: curious, why gitlab?
2016-12-16 13:27:01	carols10cents	Manishearth: i like to spread out my data
2016-12-16 13:27:18	ehiggs	why are you still on mavericks? that's like 2 versions back
2016-12-16 13:27:25	&Manishearth	(I like gitlab, but have a hard time convincing others, and usually stick to gh due to the network effect. wondering what your reasons are)
2016-12-16 13:27:34	carols10cents	Manishearth: also they have neat things like built-in CI and triage permissions
2016-12-16 13:27:37	ehiggs	mind, it's not like apple updates the actual tools. awk is still from 2007. bash as well. 
2016-12-16 13:27:41	meh	let's say I'm pattern matching on something like enum { Foo(T), Bar(u32, T) }, is there a way to match Foo(v) | Bar(n, v) but setting n = 1 on Foo?
2016-12-16 13:27:44	&Manishearth	carols10cents: oh they have triage perms now? nice!
2016-12-16 13:27:48	ytti	i prefer gitlab for internal stuff
2016-12-16 13:27:51	ytti	and github for oss 
2016-12-16 13:27:52	carols10cents	Manishearth: also i can add SSL to gitlab pages
2016-12-16 13:27:56	◣	starblue1 (juergen@moz-s3dlj6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-16 13:28:02	ehiggs	i like gitlab but the performance is not there.
2016-12-16 13:28:18	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-16 13:28:20	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 13:28:24	◥	crodjer (crodjer@moz-ukg.kkl.248.49.IP) has joined #rust
2016-12-16 13:28:34	◥	mandeep (mandeep@moz-mgt.dfa.8.198.IP) has joined #rust
2016-12-16 13:28:48	⚡	mcoffin_ is now known as mcoffin
2016-12-16 13:28:58	◣	mcoffin (mcoffin@moz-l4gqtb.ga.charter.com) has quit (Quit: leaving)
2016-12-16 13:28:59	carols10cents	Manishearth: they call it "Reporter" https://gitlab.com/help/user/permissions
2016-12-16 13:29:31	◥	mcoffin (mcoffin@moz-l4gqtb.ga.charter.com) has joined #rust
2016-12-16 13:29:32	durka42	meh: match (foo, 1) { (Foo(v), n) | (Bar(n, v), _) => { ... } }
2016-12-16 13:29:54	meh	durka42, uuh, clever, but I also have other variants :(
2016-12-16 13:30:00	meh	I'll just move that stuff to a function I guess
2016-12-16 13:30:13	◥	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has joined #rust
2016-12-16 13:30:32	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2016-12-16 13:30:37	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2016-12-16 13:30:47	◥	Fanaen (Fanaen@moz-8jmr1k.6rfj.92aj.0e35.2a01.IP) has joined #rust
2016-12-16 13:30:49	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-16 13:31:09	◣	crodjer_ (crodjer@moz-2ca.iaj.8.103.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 13:31:16	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-16 13:31:49	◥	ubsandroid (ubsan@moz-f9kbgk.NATPOOL.NYU.EDU) has joined #rust
2016-12-16 13:32:19	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-16 13:33:00	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-16 13:33:09	◥	eckhard__ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-16 13:33:33	◥	^bschafer1 (banner@moz-5fh.fms.181.180.IP) has joined #rust
2016-12-16 13:34:17	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 13:35:19	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-16 13:36:20	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Quit: Computer has gone to sleep.)
2016-12-16 13:38:48	Hail_Spacecake	why doesn't the --pretty=expanded option appear when I type rustc --help
2016-12-16 13:38:50	Hail_Spacecake	I had to google for that
2016-12-16 13:38:55	Hail_Spacecake	is that intentional?
2016-12-16 13:39:21	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-16 13:40:33	◥	tremolo (Tremolo@moz-o4t5il.dsl.bell.ca) has joined #rust
2016-12-16 13:40:36	◣	ubsandroid (ubsan@moz-f9kbgk.NATPOOL.NYU.EDU) has quit (Ping timeout: 121 seconds)
2016-12-16 13:40:39	bluss	Hail_Spacecake: it also requires -Zunstable-options to run, so I'd say more or less yes
2016-12-16 13:41:18	⚡	ParadoxSpiral is now known as kamawanai
2016-12-16 13:41:25	bluss	it even requires rustc --help -Zunstable-options -v to show in help (nightly)
2016-12-16 13:41:57	bluss	and even then, --unpretty=mir is not in the doc ;)
2016-12-16 13:42:14	durka42	ah it does finally show up with `rustc +nightly -Z unstable-options --help -v`
2016-12-16 13:42:18	◣	jimb (user@moz-9lrsc4.0ace.pc9q.3004.2603.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 13:42:18	durka42	that's a lot of switches :)
2016-12-16 13:42:28	bluss	yeah
2016-12-16 13:42:33	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2016-12-16 13:42:58	◣	ezy (ezy@moz-qjdpao.pkln.6ub4.0602.2601.IP) has quit (Quit: WeeChat 1.5)
2016-12-16 13:43:31	Hail_Spacecake	hm, so the code that format_args! generates is feature-gated
2016-12-16 13:43:32	◥	jseyfried (Mibbit@moz-pngss1.rcklca.sbcglobal.net) has joined #rust
2016-12-16 13:43:52	⚡	kamawanai is now known as ParadoxSpiral
2016-12-16 13:43:54	bluss	expanded code may not compile to the same thing
2016-12-16 13:44:19	bluss	(and it doesn't clearly, when it comes to internal unstable and other scope based escapes)
2016-12-16 13:45:09	⚡	ParadoxSpiral is now known as kamawanai
2016-12-16 13:45:15	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-16 13:45:22	◣	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-16 13:45:25	◥	Ploppz (Mibbit@moz-169br5.studby.ntnu.no) has joined #rust
2016-12-16 13:45:28	Hail_Spacecake	bluss: so I can't trust that the code I see when I do format --pretty=expanded is what gets fed into the actual post-macro parsing?
2016-12-16 13:45:38	Hail_Spacecake	when I actually compile a program with aformat string?
2016-12-16 13:45:56	bluss	not sure what kind of trust
2016-12-16 13:46:06	Ploppz	regarding rusttype - any idea what the meaning of `font_id` here is? https://dylanede.github.io/rusttype/rusttype/gpu_cache/struct.Cache.html#method.rect_for
2016-12-16 13:46:08	⚡	kamawanai is now known as ParadoxSpiral
2016-12-16 13:46:09	bluss	pretty=expanded is a lossy encoding back into text
2016-12-16 13:46:36	bluss	(from an internal representation of the code)
2016-12-16 13:46:45	Hail_Spacecake	ah
2016-12-16 13:46:48	Hail_Spacecake	so that's partially why it looks messy
2016-12-16 13:47:13	Hail_Spacecake	so I guess rust has no way to say "expand macros but do nothing else to the source"
2016-12-16 13:47:14	ehiggs	i dabbled in some go this week; and am back on rust now. on this macbook air, the compile times are killing me :S
2016-12-16 13:47:34	bluss	Hail_Spacecake: format_args is not a macro_rules macro but a syntax extension
2016-12-16 13:47:44	bluss	Hail_Spacecake: it's implemented using that internal representation of the code
2016-12-16 13:48:11	◥	acsmith (acsmith@moz-8o9ljb.fios.verizon.net) has joined #rust
2016-12-16 13:48:14	bluss	Hail_Spacecake: I saw this the other day, just a command to make exploration easier https://github.com/dtolnay/cargo-expand
2016-12-16 13:48:33	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-16 13:48:48	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2016-12-16 13:48:52	⚡	ParadoxSpiral is now known as kamawanai
2016-12-16 13:48:54	breeden_	Hail_Spacecake: RLS will have this I believe
2016-12-16 13:49:07	breeden_	like, highlight a macro and say, expand this please
2016-12-16 13:49:15	⚡	kamawanai is now known as ParadoxSpiral
2016-12-16 13:49:25	breeden_	or at least, it's planned
2016-12-16 13:49:36	durka42	there was an intern project that sorta almost implemented that
2016-12-16 13:50:22	Hail_Spacecake	bluss: ah
2016-12-16 13:50:25	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Quit: Computer has gone to sleep.)
2016-12-16 13:50:40	Hail_Spacecake	hm, now I want to try to implement format_args! as a macro_rules macro
2016-12-16 13:51:06	bluss	ah you'll quickly encounter a hurdle: macro rules can't parse string literals at all
2016-12-16 13:51:21	bluss	that's not to say there can't be an alternative with other syntax
2016-12-16 13:51:52	Hail_Spacecake	ah
2016-12-16 13:52:01	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2016-12-16 13:52:01	Hail_Spacecake	so, maybe you'd have to introduce a new syntax to do it
2016-12-16 13:52:05	Hail_Spacecake	like, `` a la javascript
2016-12-16 13:52:18	◣	rdp (Mibbit@moz-089djv.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-16 13:52:18	Hail_Spacecake	my_custom_format!(`hello {}`, user) would work maybe?
2016-12-16 13:53:05	◣	hansaplast (hansaplast@moz-eofc2e.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2016-12-16 13:53:07	◣	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has quit (Quit: Leaving)
2016-12-16 13:53:31	◥	hansaplast (hansaplast@moz-eofc2e.ve71.89v9.120b.2a02.IP) has joined #rust
2016-12-16 13:53:53	durka42	still has to be legal rust syntax
2016-12-16 13:54:09	◥	jsbruner (Instantbird@moz-jgooeo.h4gj.q8mm.0306.2602.IP) has joined #rust
2016-12-16 13:54:14	durka42	check out this crate
2016-12-16 13:54:17	durka42	!crate fomat-macros
2016-12-16 13:54:18	+rustbot	fomat-macros (0.1.1) - Alternative syntax for print/write/format-like macros with a small templating language -> https://crates.io/crates/fomat-macros <https://docs.rs/crate/fomat-macros>
2016-12-16 13:54:19	talchas	well, not quite legal rust syntax, but it has to lex and ()/[]/{} have to match
2016-12-16 13:55:07	sstangl	pintln!, oh gosh
2016-12-16 13:55:43	cholcombe	how do you peek at a value on a BinaryHeap and then push inside the match?  The compiler keeps saying my peek() is an immutable reference when my reference should be mut
2016-12-16 13:56:15	sebk	peek_mut ?
2016-12-16 13:56:32	sleffy	^
2016-12-16 13:56:48	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-16 13:57:05	cholcombe	sebk, gah.  The MinMaxHeap i'm using doesn't have that
2016-12-16 13:57:10	◥	stjepang (stjepan@moz-r0f.qrk.252.151.IP) has joined #rust
2016-12-16 13:57:10	bluss	durka42: the craziest thing about that crate is the naming convention hehe. Otherwise neat
2016-12-16 13:57:12	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Quit: Computer has gone to sleep.)
2016-12-16 13:57:16	breeden_	Hail_Spacecake: will you allow it so that I can just give it a struct and cust_format!(`hello {name}, from {city}`, person) will essentially be equivalent to format!("Hello {}, from {}", person.name, person.city) ?
2016-12-16 13:57:33	◣	hansaplast (hansaplast@moz-eofc2e.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 13:57:34	sleffy	cholcombe: not using std::collections::BinaryHeap?
2016-12-16 13:57:43	cholcombe	sleffy, no i'm using http://tov.github.io/min-max-heap-rs/min_max_heap/struct.MinMaxHeap.html
2016-12-16 13:57:55	cholcombe	i'm trying to make a list of the top N biggest numbers
2016-12-16 13:57:58	cholcombe	and pop the min as needed
2016-12-16 13:58:49	bluss	breeden_: don't you think thath could be a popular thing if an rfc proposed it?
2016-12-16 13:58:57	◥	jimb (user@moz-cg6gtn.or.comcast.net) has joined #rust
2016-12-16 13:59:15	sleffy	cholcombe: maybe you could use `replace_min` or `replace_max`?
2016-12-16 13:59:22	durka42	bluss: I think the names are super cute :p
2016-12-16 13:59:27	breeden_	hmmm, it seems incompatible since {1} and {2} are allowedaren't they?
2016-12-16 13:59:31	◥	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has joined #rust
2016-12-16 13:59:33	cholcombe	sleffy, i'll try
2016-12-16 13:59:41	sleffy	If you need to change the value
2016-12-16 13:59:44	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2016-12-16 13:59:46	breeden_	oh, variable names
2016-12-16 13:59:50	sebk	(checking that the new one is > min)
2016-12-16 13:59:52	◥	rschifflin (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2016-12-16 13:59:56	sleffy	Then you could `peek`, read it, make a decision based on the `peek`d value, and then replace with the new value?
2016-12-16 13:59:57	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2016-12-16 14:00:23	sebk	hm..
2016-12-16 14:00:27	cholcombe	hmm possibly
2016-12-16 14:00:30	sebk	for the N biggest numbers…
2016-12-16 14:00:34	bluss	breeden_: oh. and {name} is already allowed. I was thinking what about "{a.name}", a=value  though?
2016-12-16 14:00:37	◣	tyoc213 (tyoc213@moz-2ilelt.iusacell.net) has quit (Quit: Saliendo)
2016-12-16 14:00:47	sebk	I would guess keeping a sorted list would be the fastest?
2016-12-16 14:00:52	Hail_Spacecake	breeden_: that's a very reasonable string interpolation syntax
2016-12-16 14:00:56	sebk	and the run a binary search on it?
2016-12-16 14:00:59	cholcombe	sebk, yeah
2016-12-16 14:01:14	Hail_Spacecake	ideally you wouldn't need to limit yourself to that syntax but not another because of a limitation in the macro system
2016-12-16 14:01:19	breeden_	bluss: oh that may actually work
2016-12-16 14:01:23	bluss	breeden_: did you know that "hello {name}", name="Abc" already works?
2016-12-16 14:01:40	breeden_	bluss: just recently (like 2 minutes ago)
2016-12-16 14:03:00	Phrohdoh	Which macro, format?
2016-12-16 14:03:19	◥	mcoffin_ (mcoffin@moz-69i283.ga.charter.com) has joined #rust
2016-12-16 14:03:22	cholcombe	sebk, i wonder if the best thing to use would be some sorta sorted hashset?
2016-12-16 14:03:30	breeden_	playbot, let name = "Ferris"; println!("Hello {name}!", name=name);
2016-12-16 14:03:32	⚡	Notice(playbot): Hello Ferris!
2016-12-16 14:03:32	⚡	Notice(playbot): ()
2016-12-16 14:03:37	Phrohdoh	nice
2016-12-16 14:04:04	bluss	Phrohdoh: all the formatting macros have the same syntax
2016-12-16 14:04:12	◥	Cokemonkey11 (quassel@moz-39s05f.35h7.d9a6.0c7d.2a02.IP) has joined #rust
2016-12-16 14:04:17	Phrohdoh	playbot, let foo = "bar"; println!("Foo {0}", foo);
2016-12-16 14:04:20	⚡	Notice(playbot): Foo bar
2016-12-16 14:04:20	⚡	Notice(playbot): ()
2016-12-16 14:04:24	Phrohdoh	cool beans.
2016-12-16 14:04:35	breeden_	playbot, struct Name(String); let name = Name("Ferris".into()); format!("Hello {name.0}!", name=name)
2016-12-16 14:04:37	⚡	Notice(playbot): error: invalid format string: expected `'}'`, found `'.'`
2016-12-16 14:04:37	⚡	Notice(playbot):   --> <anon>:10:72
2016-12-16 14:04:37	⚡	Notice(playbot):    |
2016-12-16 14:04:37	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2ht8Zu0)
2016-12-16 14:04:40	sebk	cholcombe: do you want N different numbers?
2016-12-16 14:04:52	cholcombe	the person asking wasn't clear
2016-12-16 14:04:55	cholcombe	i'm guessing yet
2016-12-16 14:04:57	cholcombe	yes*
2016-12-16 14:04:58	sebk	or would 7, 8, 9, 9, 10 count as 5 ?
2016-12-16 14:05:02	breeden_	that was one proposed addition
2016-12-16 14:05:16	seeday	which crate is it to pull in the memcpy symbols for no_std stuff?
2016-12-16 14:05:40	◣	mcoffin (mcoffin@moz-l4gqtb.ga.charter.com) has quit (Ping timeout: 121 seconds)
2016-12-16 14:06:10	Fenrir	rlibc
2016-12-16 14:06:27	cholcombe	sebk, yeah they want the largest N numbers sorted highest first
2016-12-16 14:06:54	◥	irrequietus (irqus@moz-vlhdta.home.otenet.gr) has joined #rust
2016-12-16 14:06:55	◣	jbradberry (jrb@moz-mrjdh9.rlghnc.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:06:59	◥	fyolnish (fyolnish@moz-01nphm.so-net.ne.jp) has joined #rust
2016-12-16 14:07:10	cholcombe	hashset would have fast insertion time and check time to see if the value already exists
2016-12-16 14:07:13	sebk	if this is still the 5k files question, I guess it doesn't matter
2016-12-16 14:07:27	sebk	cpu speed >> IO speed
2016-12-16 14:07:43	cholcombe	sebk, def
2016-12-16 14:07:47	◣	jseyfried (Mibbit@moz-pngss1.rcklca.sbcglobal.net) has left #rust
2016-12-16 14:08:03	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:08:13	◣	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has quit (Connection closed)
2016-12-16 14:08:17	cholcombe	it's funny. i wrote the naive implementation of this and the std sort on linux is easily 5x faster haha
2016-12-16 14:08:57	sebk	sorting magic…
2016-12-16 14:09:03	◥	Guest21 (textual@moz-t64.lvo.101.155.IP) has joined #rust
2016-12-16 14:09:10	sebk	not particular my favorite subject
2016-12-16 14:09:14	cholcombe	indeed
2016-12-16 14:09:18	cholcombe	i hate these kinds of questions
2016-12-16 14:10:01	◣	handyman (handyman@moz-3kja42.subp.5lka.0645.2601.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-16 14:10:03	sebk	unless one uses a linked list or [usize; 1<<64], it should work ;)
2016-12-16 14:10:43	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-16 14:10:59	sebk	hm..
2016-12-16 14:11:01	◣	fyolnish (fyolnish@moz-01nphm.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2016-12-16 14:11:01	cholcombe	yeah i thought about a linked list also
2016-12-16 14:11:03	cholcombe	that might work
2016-12-16 14:11:06	sebk	uh
2016-12-16 14:11:09	sebk	but SLOOW
2016-12-16 14:11:12	cholcombe	yeah
2016-12-16 14:11:23	cholcombe	i also thought about splitting up the file and working on it in parallel over N machines
2016-12-16 14:11:39	◥	handyman (handyman@moz-27cses.subp.5lka.0645.2601.IP) has joined #rust
2016-12-16 14:11:46	◣	handyman (handyman@moz-27cses.subp.5lka.0645.2601.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-16 14:11:46	sebk	I was thinking about a … what are they called … some kind of hashset
2016-12-16 14:11:48	◥	handyman (handyman@moz-lmhaus.ca.comcast.net) has joined #rust
2016-12-16 14:12:16	sebk	ah no.. deletion it too slow there
2016-12-16 14:12:22	◥	ubsandroid (ubsan@moz-8h8adi.qnq0.64b6.fb90.2607.IP) has joined #rust
2016-12-16 14:12:35	◣	jsbruner (Instantbird@moz-jgooeo.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 14:12:40	sebk	deque and fin.
2016-12-16 14:13:00	◥	bronson (bronson@moz-eaa7ba.dynamic.sonic.net) has joined #rust
2016-12-16 14:13:05	◣	ubsandroid (ubsan@moz-8h8adi.qnq0.64b6.fb90.2607.IP) has quit (Connection closed)
2016-12-16 14:13:09	sebk	no..
2016-12-16 14:13:14	cholcombe	hmm
2016-12-16 14:13:28	◥	ubsandroid (ubsan@moz-8h8adi.qnq0.64b6.fb90.2607.IP) has joined #rust
2016-12-16 14:14:25	sebk	I guess one needs more knowledge about the number distribution
2016-12-16 14:14:26	◥	Manchotix (Manchotix@moz-l0puo0.hsi09.unitymediagroup.de) has joined #rust
2016-12-16 14:14:42	cholcombe	they didn't say anything about it.  i'm going to ask if it's sorted, partially sorted or pseudorandom
2016-12-16 14:15:10	sebk	and about collisions
2016-12-16 14:15:14	◣	saimen (saimen@moz-i2kas4.natpool.mwn.de) has quit (Ping timeout: 121 seconds)
2016-12-16 14:16:02	LLBlumire	Is there a value ordered map, BTreeMap is key sorted.
2016-12-16 14:16:35	cholcombe	rust doesn't have any kinda map reduce framework does it?
2016-12-16 14:16:45	Ralith	LLBlumire: how do you imagine looking up a value in such a map would work?
2016-12-16 14:16:57	sebk	LLBlumire: binary_heap ?
2016-12-16 14:17:09	LLBlumire	sebk: Need to be able to alter things that aren't the highest value
2016-12-16 14:17:13	◣	bronson (bronson@moz-eaa7ba.dynamic.sonic.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:17:24	LLBlumire	Ralith: by the key, as for the implementation, no idea that's why I'm asking here instead of coding one
2016-12-16 14:17:27	Ralith	if you mean you just want values with no keys, BTreeSet is a thing
2016-12-16 14:17:48	LLBlumire	I want a key value map, that is sorted by value
2016-12-16 14:18:19	Ralith	it sounds like what you want is a BTreeSet<Rc<Value>> paired with a HashMap<Key, Rc<Value>>
2016-12-16 14:19:09	&mbrubeck	Python has a collection that acts like that https://docs.python.org/2/library/collections.html#collections.Counter
2016-12-16 14:19:11	LLBlumire	does changing the value inside a set with an Rc cause a logic error like it does for BinaryHeap?
2016-12-16 14:19:43	&mbrubeck	but it doesn't store the values in sorted order; it just sorts them on demand when you ask for the highest value
2016-12-16 14:19:44	sebk	could you remove and reinsert it?
2016-12-16 14:19:50	LLBlumire	"It is a logic error for an item to be modified in such a way that the item's ordering relative to any other item, as determined by the Ord trait, changes while it is in the set." yep
2016-12-16 14:19:56	Ralith	modifying the ordering of an item in-place in an always-ordered container will always be a logic error
2016-12-16 14:19:57	&mbrubeck	Yeah, you'd need to remove and reinsert
2016-12-16 14:20:07	Ralith	you should be removing and replacing values that have their order changed
2016-12-16 14:20:08	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2016-12-16 14:20:14	◣	woboats (woboats@moz-i3d.gf4.16.4.IP) has quit (Client exited)
2016-12-16 14:20:28	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-16 14:20:47	LLBlumire	how would I find it in the BTreeSet to do that from it's Key?
2016-12-16 14:20:54	LLBlumire	in order to remove and reinsert it
2016-12-16 14:20:55	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2016-12-16 14:20:55	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2016-12-16 14:21:06	Ralith	you wouldn't, that's not what BTreeSets are for
2016-12-16 14:21:10	◣	dranov (dranov@moz-5jo24u.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:21:16	&mbrubeck	Use the key to look up the value in the hashmap, then use the value to get the BtreeSet entry
2016-12-16 14:21:44	LLBlumire	ah yeah, sorry type signatures on the docs were screwing me up
2016-12-16 14:22:28	◣	Ameo (casey@moz-5r2.1ic.228.152.IP) has quit (Connection closed)
2016-12-16 14:22:49	◥	woboats (woboats@moz-i3d.gf4.16.4.IP) has joined #rust
2016-12-16 14:23:02	◣	pounce (pounce@moz-vi09a1.or.frontiernet.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:24:24	seeday	rlibc should already be linked into compiler_builtins, but it's still missing memcpy for some reason, even when using "weak"
2016-12-16 14:24:51	◥	wccole (quassel@moz-bm54rh.al.comcast.net) has joined #rust
2016-12-16 14:25:10	gchristensen	I'm having a tough time with the git2 library, where I'm trying to show a diff and I'm getting the wrong diff. Would anyone mind taking a look? the code is here: https://gist.github.com/grahamc/7516058664ce89433255f914a3bcab13 the message printed on line 37 is "zabbix22: 2.2.2 -> 2.2.16 for CVE-2016-4338 CVE-2016-9140" but the diff is for a go compiler change.
2016-12-16 14:25:29	◥	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has joined #rust
2016-12-16 14:26:04	◣	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has quit (Connection closed)
2016-12-16 14:26:25	◥	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has joined #rust
2016-12-16 14:27:08	gchristensen	(is it considered rude to ping the author of a package?)
2016-12-16 14:27:19	durka42	not rude
2016-12-16 14:27:21	◣	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has quit (Quit: leaving)
2016-12-16 14:27:25	◥	umurgdk (umurgdk@moz-pfjhmu.mullvad.net) has joined #rust
2016-12-16 14:27:51	gchristensen	acrichto: if you're around, I've asked a question about git2, and why the commit message is different from the diff I'm seeing ^
2016-12-16 14:28:13	◣	Ploppz (Mibbit@moz-169br5.studby.ntnu.no) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-16 14:28:47	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Connection closed)
2016-12-16 14:28:57	@acrichto	gchristensen: sure! what's the differences that you're seeing?
2016-12-16 14:29:00	J_Arcane	Hmm. Is there a way to check/require on the type/trait level, whether an Iterator is infinite or not? 
2016-12-16 14:29:05	Ralith	gchristensen: out of curiosity, what're you doing with git2 in nixpkgs?
2016-12-16 14:29:09	◥	dm3 (dm3@moz-eaq.811.60.78.IP) has joined #rust
2016-12-16 14:29:42	◥	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has joined #rust
2016-12-16 14:29:45	◣	canaltinova (uid191250@moz-l3qbqh.tooting.irccloud.com) has quit (Quit: )
2016-12-16 14:30:11	◥	mjs2600 (mjs2600@moz-363rui.vt.comcast.net) has joined #rust
2016-12-16 14:30:24	◥	bfrog (tburdick@moz-muf0ui.7npb.p36n.0241.2601.IP) has joined #rust
2016-12-16 14:30:33	gchristensen	acrichto: sure, I added the actual output, and here is the diff I would expect to see: https://github.com/NixOS/nixpkgs/commit/8800ea7617ab3899b2ed74c8c96849de1f0cf711
2016-12-16 14:30:52	gchristensen	(added the output to the gist)
2016-12-16 14:30:52	&mbrubeck	gchristensen: `let Some(parent) = prevtree` Is this guaranteed to be the parent? What if the history between `head` and `tail` is not linear?
2016-12-16 14:31:22	◣	ubsandroid (ubsan@moz-8h8adi.qnq0.64b6.fb90.2607.IP) has quit (Quit: <3)
2016-12-16 14:31:37	◥	ubsandroid (ubsan@moz-f9kbgk.NATPOOL.NYU.EDU) has joined #rust
2016-12-16 14:32:01	◥	ubsandroid_ (ubsan@moz-8h8adi.qnq0.64b6.fb90.2607.IP) has joined #rust
2016-12-16 14:32:18	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-16 14:32:21	J_Arcane	I have the need to define a trait that is essentially just an Iterator that returns an i64 and is non-terminating.
2016-12-16 14:32:39	@acrichto	gchristensen: yeah what mbrubeck mentioned I think may be right, you may wish to rather use Commit::parents -- http://alexcrichton.com/git2-rs/git2/struct.Commit.html#method.parents
2016-12-16 14:32:47	gchristensen	mbrubeck: my project (ralith, this is what I'm doing) is I start from commit A and look at every commit since until the latest HEAD, and then store that as commit A for next run. I'm guessing you're asking about merge commits? I'd like to view the whole changeset of the merge as one, in that diff.
2016-12-16 14:32:48	◣	ubsandroid_ (ubsan@moz-8h8adi.qnq0.64b6.fb90.2607.IP) has quit (Quit: <3)
2016-12-16 14:33:11	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 14:33:13	@acrichto	I'm not sure what revwalk precisely does in the face of merges
2016-12-16 14:33:19	◥	ubsandroid_ (ubsan@moz-f9kbgk.NATPOOL.NYU.EDU) has joined #rust
2016-12-16 14:33:27	◣	ubsandroid (ubsan@moz-f9kbgk.NATPOOL.NYU.EDU) has quit (Connection closed)
2016-12-16 14:33:29	gchristensen	I see
2016-12-16 14:33:38	@acrichto	(just a guess)
2016-12-16 14:34:27	◥	prz (prz@moz-hcnd0b.res.rr.com) has joined #rust
2016-12-16 14:34:34	gchristensen	so stepping back a second, knowing I want to look at each diff between A and HEAD -- how would you go about that? (we can assume that there is a path from A to HEAD) starting at HEAD and working backwards through parents?
2016-12-16 14:34:54	&mbrubeck	"the whole changeset of the merge" is kind of hard to define.  A diff is between two trees, and a merge commit has multiple parents.  You can show it as a three-way (or n-way) diff...
2016-12-16 14:35:13	&mbrubeck	Not sure if libgit2 has any built-in way to display that, though.
2016-12-16 14:35:28	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-16 14:35:46	durka42	J_Arcane: the type system doesn't know whether an iterator teminates
2016-12-16 14:36:06	J_Arcane	durka42, I suspected that was the case. 
2016-12-16 14:36:15	◥	arcetera (me@moz-0or.aoq.63.45.IP) has joined #rust
2016-12-16 14:37:00	gchristensen	mbrubeck: all this gives me a headache :P I see
2016-12-16 14:37:50	&mbrubeck	gchristensen: You could start at HEAD and traverse from commit to parent (using Commit::parents) until you find a path to A, then print diffs for just the commits along that path
2016-12-16 14:38:01	gchristensen	I have a shell script which I'm trying to replicate. maybe that would be helpful: https://gist.github.com/grahamc/a7bb56891bce3980c618d08942c9f7f7
2016-12-16 14:38:06	Phrohdoh	Anyone interested in helping me solve a stack overflow issue?
2016-12-16 14:38:08	&mbrubeck	There might be multiple paths, but in the simplest case you could just ignore all but the first path you find
2016-12-16 14:38:15	&mbrubeck	Phrohdoh: sure
2016-12-16 14:38:17	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-16 14:38:22	Phrohdoh	Excellent!
2016-12-16 14:38:47	◥	niconii (nicole@moz-1nntpf.midco.net) has joined #rust
2016-12-16 14:38:47	⚡	Mode #rust [+ao niconii niconii] by ChanServ
2016-12-16 14:39:10	gchristensen	Ralith: ^ that gist will give away all my intentions :)
2016-12-16 14:39:26	&mbrubeck	gchristensen: I think that `git show $A` just doesn't show a diff if `A` has multiple parents
2016-12-16 14:39:32	Phrohdoh	https://github.com/Phrohdoh/tsqlust/issues/13
2016-12-16 14:39:41	gchristensen	yikes, time to find out
2016-12-16 14:40:11	&mbrubeck	gchristensen: So you could do (pseudocode) `if parents.len() == 1 { show_diff(commit, parents[0]) }`
2016-12-16 14:40:56	gchristensen	mbrubeck: indeed! though tracing my way back from HEAD to A seems a bit hairy. perhaps this rev
2016-12-16 14:41:05	gchristensen	rev-list example will help me through that.
2016-12-16 14:41:21	Phrohdoh	There is a single rule in the grammar that accepts _ directly and that is term_id, a few others rules accept term_id. That's really the only lead I have.
2016-12-16 14:41:43	J_Arcane	durka42, is there a way, at least, to define an inherited version of Iterator, with specific type expectations for Item and .next()?
2016-12-16 14:41:51	◥	ludat (ludat@moz-456.j2c.173.190.IP) has joined #rust
2016-12-16 14:41:56	durka42	J_Arcane: sure
2016-12-16 14:42:17	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-16 14:42:18	durka42	J_Arcane: trait Int64Iterator: Iterator<Item=i64> {}    impl<T: Iterator<Item=i64>> Int64Iterator for T {}
2016-12-16 14:42:23	&mbrubeck	Phrohdoh: Have you looked at the stack overflow in a debugger?
2016-12-16 14:42:45	Phrohdoh	I have not, because I've never debugged a non-managed language.
2016-12-16 14:42:46	◥	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has joined #rust
2016-12-16 14:43:11	gchristensen	mbrubeck: thank you for your help :)
2016-12-16 14:43:25	Phrohdoh	The actual lexer/parser here is generated at compile-time, would that make debugging difficult?
2016-12-16 14:43:44	Phrohdoh	At least I think it is being done at compile time.
2016-12-16 14:43:50	&mbrubeck	gchristensen: To be clear, if you want to replicate that shell script, you can keep your current `revwalk` but just use .parents() to find the commit to diff against.
2016-12-16 14:44:21	gchristensen	mbrubeck: great. ok, I'll take a look in to that -- I appreciate you giving such specific recommendations.
2016-12-16 14:45:03	&mbrubeck	Phrohdoh: Here's a partial backtrace showing infinite recursion in the expr_add parser https://gist.github.com/mbrubeck/679de3289a015c423c1c33dd9211dc4a
2016-12-16 14:45:09	◥	petson__ (petson@moz-abcvvt.dyn.telefonica.de) has joined #rust
2016-12-16 14:45:21	Sergio	!nightly
2016-12-16 14:45:21	+rustbot	nightly is a development version of Rust compiler. Before the first beta, this is still the recommended way to use Rust. Download it from http://www.rust-lang.org/install.html
2016-12-16 14:45:37	&mbrubeck	Phrohdoh: Unfortunately it's a little hard to tell what's going on because the stack overflow happens in macro-generated code...
2016-12-16 14:45:51	Phrohdoh	Well, yeah that makes sense. expr_*s contain other exprs
2016-12-16 14:46:14	Sergio	New nightly? :o
2016-12-16 14:46:15	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2016-12-16 14:46:24	durka42	Sergio: dang that seems like a really old fact
2016-12-16 14:46:35	&mbrubeck	Phrohdoh: That was while parsing "_" by the way
2016-12-16 14:46:36	durka42	Sergio: "before the first beta" sounds like it refers to 1.0-beta
2016-12-16 14:46:40	Sergio	Haha
2016-12-16 14:46:47	◥	ezy (ezy@moz-osmnd6.pkln.6ub4.0602.2601.IP) has joined #rust
2016-12-16 14:46:59	◣	ezy (ezy@moz-osmnd6.pkln.6ub4.0602.2601.IP) has quit (Quit: WeeChat 1.5)
2016-12-16 14:47:00	Phrohdoh	mbrubeck: So that's why I'm confused here. I don't see why _ should match expr at all.
2016-12-16 14:47:22	&mbrubeck	Phrohdoh: So it looks like it tries to parse "expr" which tries to parse "expr_add" which tries to parse "expr" ...
2016-12-16 14:47:24	◣	Jackneill (Jackneill@moz-lo0c1n.static.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-16 14:47:33	◣	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Quit: Leaving.)
2016-12-16 14:47:38	Phrohdoh	right
2016-12-16 14:47:44	&mbrubeck	Phrohdoh: It presumably doesn't know that it doesn't match "expr" until it tries and fails each of expr's sub-rules
2016-12-16 14:49:05	◥	wallacoloo____ (colin@moz-k3a2r5.tukw.qwest.net) has joined #rust
2016-12-16 14:49:22	Sergio	Bah. compiletest_rs is broken. :'(
2016-12-16 14:50:12	est31	Sergio: compiletest?
2016-12-16 14:50:18	Sergio	compiletest
2016-12-16 14:50:25	&mbrubeck	Phrohdoh: Ah, it's a PEG parser so you can't use "left recursion" https://en.wikipedia.org/wiki/Parsing_expression_grammar#Indirect_left_recursion
2016-12-16 14:50:26	Sergio	compiletest-rs crate
2016-12-16 14:50:30	est31	you mean the nightly failed?
2016-12-16 14:50:37	est31	because of compiletest?
2016-12-16 14:50:50	est31	do you have a link
2016-12-16 14:50:57	Sergio	No, compiletest doesn't build.
2016-12-16 14:50:58	Sergio	https://github.com/laumann/compiletest-rs
2016-12-16 14:50:59	bluss	oh sweet, new nightly is finally available through rustup
2016-12-16 14:51:13	bluss	I guess that's why you found breakage Sergio 
2016-12-16 14:51:24	Sergio	Mhmm
2016-12-16 14:51:28	est31	ok
2016-12-16 14:51:39	bluss	Sergio: these breaks are usually trivial to fix
2016-12-16 14:51:43	◣	rfkrocktk (uid176380@moz-tsv2qn.tooting.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-16 14:51:46	Sergio	Yeah
2016-12-16 14:51:49	Sergio	Looks simple enough.
2016-12-16 14:52:12	◥	wallacoloo___ (colin@moz-bfrri6.tukw.qwest.net) has joined #rust
2016-12-16 14:52:13	Phrohdoh	mbrubeck: I see, I've never read about PEGs before (it was just easy to start implementing). Thanks! I'll have to do some research on how to implement what I want here, then.
2016-12-16 14:52:37	◣	petson__ (petson@moz-abcvvt.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2016-12-16 14:53:09	Ralith	gchristensen: ah, neat!
2016-12-16 14:53:25	◣	Cokemonkey11 (quassel@moz-39s05f.35h7.d9a6.0c7d.2a02.IP) has quit (Connection closed)
2016-12-16 14:53:35	◥	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2016-12-16 14:53:44	Ralith	what's the "x$x" trick about?
2016-12-16 14:53:49	◣	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has quit (Connection closed)
2016-12-16 14:53:52	◥	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has joined #rust
2016-12-16 14:54:00	◥	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has joined #rust
2016-12-16 14:54:02	◣	wallacoloo____ (colin@moz-k3a2r5.tukw.qwest.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:54:03	◣	JuanPotato (JuanPotato@moz-v8jbl9.wv.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:54:18	gchristensen	Ralith: [ "$x" = "y" ] if there is no input, it'll be seen as [ = "y" ] and then you have an error that you forgot a first parameter.
2016-12-16 14:54:37	jmesmon	gchristensen: not in posix or other modern shells
2016-12-16 14:54:51	gchristensen	oh, well, old habits die hard?
2016-12-16 14:55:19	◣	cyphase (cyphase@moz-ijahrb.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 14:55:35	◣	Guest21 (textual@moz-t64.lvo.101.155.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 14:55:52	Ralith	I would certainly hope the empty string is distinguished from no argument
2016-12-16 14:55:56	◣	sebk (sebk@moz-05nbdi.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2016-12-16 14:56:49	◣	khj (Thunderbird@moz-vf3f9u.pools.vodafone-ip.de) has quit (Client exited)
2016-12-16 14:57:00	Zarthus	I was under the impression [ "x$x" = "x" ] was just for empty string checks under certain conditions.
2016-12-16 14:57:13	talchas	now, if you write [ $x = y ], it'll still break on most shells, and you can see what the derivation probably was
2016-12-16 14:57:16	Zarthus	I remember reading on the why and it making sense at the time, but it wasn't due to what was mentioned above.
2016-12-16 14:57:58	gchristensen	hah ... anyway, maybe I'm wrong about the explanation anyway, but it was (is?) good practice for reasons
2016-12-16 14:58:07	◣	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2016-12-16 14:58:44	◣	adium (textual@moz-7kq.5ls.154.179.IP) has quit (Connection closed)
2016-12-16 14:58:51	Zarthus	all resources seem to point towards what you're saying though
2016-12-16 14:59:39	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2016-12-16 15:00:07	◣	eckhard__ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Quit: Leaving...)
2016-12-16 15:00:52	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-16 15:01:38	◣	junqed (junqed@moz-jcl.rfu.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-16 15:02:24	◥	cyphase (cyphase@moz-ijahrb.ca.comcast.net) has joined #rust
2016-12-16 15:02:34	◣	rkruppe (rkruppe@moz-rstprs.dyn.telefonica.de) has quit (Quit: Bye)
2016-12-16 15:02:56	gchristensen	shellcheck indeed says it is fine, so, it must be fine now
2016-12-16 15:03:00	Sergio	laumann: ping!
2016-12-16 15:03:16	Sergio	laumann: https://github.com/laumann/compiletest-rs/pull/52
2016-12-16 15:03:24	◣	durka42 (durka42@moz-fin7gd.wireless-pennnet.upenn.edu) has quit (Client exited)
2016-12-16 15:03:53	◣	kmicu1 (kmicu@moz-c3t.224.218.91.IP) has quit (Connection closed)
2016-12-16 15:04:08	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-16 15:04:09	◥	kmicu1 (kmicu@moz-c3t.224.218.91.IP) has joined #rust
2016-12-16 15:05:25	Sergio	Or Manishearth ^
2016-12-16 15:05:47	◥	ohyllad (krl@moz-rprk58.cust.bredbandsbolaget.se) has joined #rust
2016-12-16 15:09:14	◣	mikkeloscar (F1skr@moz-to7.skn.172.163.IP) has quit (Quit: WeeChat 1.6)
2016-12-16 15:09:32	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2016-12-16 15:10:18	◥	mikkeloscar (F1skr@moz-to7.skn.172.163.IP) has joined #rust
2016-12-16 15:11:24	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2016-12-16 15:12:44	seeday	for lang_items like panic_fmt, must they be in the root crate or can they be pulled in as part of another?
2016-12-16 15:13:12	Sergio	They can be outside, seeday
2016-12-16 15:13:22	Sergio	That crate needs to be linked in, of course.
2016-12-16 15:13:26	◣	qaz (qaz@moz-kk7.8k1.226.117.IP) has quit (Quit: Leaving)
2016-12-16 15:14:42	◣	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-12-16 15:15:02	seeday	Sergio: that's what I thought... and oops, I was missing my extern crate
2016-12-16 15:15:06	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-16 15:15:11	Sergio	;)
2016-12-16 15:15:50	◥	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has joined #rust
2016-12-16 15:16:00	◣	mandeep (mandeep@moz-mgt.dfa.8.198.IP) has quit (Quit: Leaving)
2016-12-16 15:16:22	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-16 15:18:40	◥	cespare (cespare@moz-h4nvlf.ca.comcast.net) has joined #rust
2016-12-16 15:19:49	◥	dark-knight (dark-knight@moz-rtc2g3.dynamic.surfer.at) has joined #rust
2016-12-16 15:20:24	◣	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has quit (Quit: WeeChat 1.6)
2016-12-16 15:20:31	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2016-12-16 15:20:41	◣	random_james_away (quassel@moz-362.r6t.134.134.IP) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2016-12-16 15:21:11	◣	Kilobyte (stephan@moz-2b5sqg.mjki.fker.e180.2a00.IP) has quit (Quit: WeeChat 1.6)
2016-12-16 15:22:02	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-16 15:25:12	◥	DemiMarie (dobenour@moz-bck78l.1mkn.dvkf.0840.2601.IP) has joined #rust
2016-12-16 15:25:38	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-16 15:26:13	⚡	mcoffin_ is now known as mcoffin
2016-12-16 15:26:25	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2016-12-16 15:28:15	J_Arcane	Awesome. Dice generation with generics. :D https://github.com/jarcane/rouler/blob/235483dd039239f84bc46d46aacf0c2bb6176f25/src/random.rs
2016-12-16 15:29:32	◣	Alek (alek@moz-h5408n.bb.online.no) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2016-12-16 15:29:39	mrmonday	if I get a checksum failure with rustup, how do I force it to re-download? doing another rustup update doesn't do anything
2016-12-16 15:31:03	◣	kristof (Mibbit@moz-sjtpaj.rk.wavecable.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-16 15:32:04	matematikaadit	mrmonday: installing latest nightly?
2016-12-16 15:32:15	bluss	J_Arcane: using .fold() is old school rust, we have .sum() now :)
2016-12-16 15:32:32	J_Arcane	bluss, Ahh, right. I forgot. :D 
2016-12-16 15:32:52	◥	bluecereal (bluecereal@moz-0bd.uqm.224.8.IP) has joined #rust
2016-12-16 15:34:02	◣	jrmuizel (jrmuizel@moz-1fmjjt.5vs3.sij7.f0c8.2607.IP) has quit (Connection closed)
2016-12-16 15:34:04	◥	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2016-12-16 15:36:57	Sergio	Is there no new nightly for Linux?
2016-12-16 15:37:11	◣	creationix (creationix@moz-69oa2g.cpe.cableone.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-16 15:37:46	◥	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has joined #rust
2016-12-16 15:37:47	Sergio	Wow.
2016-12-16 15:37:57	◥	maikklein (Mibbit@moz-376j9u.dip0.t-ipconnect.de) has joined #rust
2016-12-16 15:38:00	Sergio	That makes no sense, Rust team.
2016-12-16 15:38:17	maikklein	Rust can not partially infer types? https://is.gd/hZAKFs
2016-12-16 15:38:42	◣	fabiand (fabiand@moz-rjit80.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2016-12-16 15:38:45	mrmonday	matematikaadit: I take it the latest nightly's broken, based on your question? :D
2016-12-16 15:38:46	◣	cpup (cpup@moz-jp2.jct.218.32.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 15:38:49	◣	ehiggs (ehiggs@moz-s7dsfa.access.telenet.be) has quit (Quit: 00:38am here. zzzz)
2016-12-16 15:38:57	Sergio	matematikaadit: How can it infer A?
2016-12-16 15:39:09	@steveklabnik	Sergio: last night's failed, should be tonight. nightly is unstable, that's just how things work sometimes. we're doing a big infra overhaul at the moment
2016-12-16 15:39:17	@steveklabnik	should be working tonight
2016-12-16 15:39:19	Sergio	matematikaadit: No.
2016-12-16 15:39:36	Sergio	steveklabnik: It makes no sense to push _some_ nightlies and not others.
2016-12-16 15:39:44	Sergio	I understand things break.
2016-12-16 15:39:45	mrmonday	is there a way to get yesterday's nightly/whenever the last working nightly was?
2016-12-16 15:39:47	maikklein	Sergio: I think you meant me? It can not, but it should infer B.
2016-12-16 15:39:51	Sergio	mrmonday: Yeah.
2016-12-16 15:40:08	Sergio	mrmonday: rustup toolchain install something
2016-12-16 15:40:11	Sergio	Or something like that.
2016-12-16 15:40:20	kallisti5	q: What's the cleanest way to not act on a match?
2016-12-16 15:40:28	Sergio	kallisti5: _?
2016-12-16 15:40:29	kallisti5	aka _ => <do nothing>
2016-12-16 15:40:36	Sergio	_ => { }
2016-12-16 15:40:39	mrmonday	oh, I don't want a specific version installed, I'd like my nightly toolchain to be updated with the latest buildable nightly
2016-12-16 15:40:53	Sergio	mrmonday: That's just rustup update
2016-12-16 15:40:53	kallisti5	Sergio: danke.  read_to_string is a bit messy in a match :-)
2016-12-16 15:41:12	Sergio	kallisti5: I usually do: _ => { /* do nothing */ }
2016-12-16 15:41:20	Sergio	Just to make it clear to anyone reading the code.
2016-12-16 15:41:27	mrmonday	Sergio: which doesn't work if the latest nightly is broken - I want yesterday's nightly to be what I get on the nightly toolchain
2016-12-16 15:41:35	◥	ineol (textual@moz-jbqp9q.fmnc.b88b.0e35.2a01.IP) has joined #rust
2016-12-16 15:41:41	Sergio	mrmonday: I'm not sure what you mean?
2016-12-16 15:41:46	kallisti5			Ok => { /* good stuff*/ }
2016-12-16 15:41:49	◥	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has joined #rust
2016-12-16 15:41:49	Sergio	rustup update only pulls binaries that built.
2016-12-16 15:41:56	kallisti5	thanks :-)   /me is still getting used to it
2016-12-16 15:42:03	matematikaadit	Sergio: he get checksum failure when installed latest nightly
2016-12-16 15:42:05	Sergio	kallisti5: If you're doing a match with just two variants, then you can simply: if let Ok(val) = blah { use val }
2016-12-16 15:42:17	Sergio	matematikaadit: Oh, I see.
2016-12-16 15:42:17	◣	kmicu1 (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2016-12-16 15:42:17	matematikaadit	mrmonday: it's known problem
2016-12-16 15:42:22	◣	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-12-16 15:42:28	kallisti5	Sergio: aaah. ok.  I thought of that but didn't think through the syntax
2016-12-16 15:42:31	◥	reset (reset@moz-jqf.n3j.210.209.IP) has joined #rust
2016-12-16 15:42:57	mrmonday	I know it's a known problem, that doesn't help me with my several month old nightly toolchain though :L
2016-12-16 15:43:06	Sergio	Manishearth: Nice, thanks. Might need a minor version bump?
2016-12-16 15:43:24	Sergio	Manishearth: That won't work with nightlies before today's.
2016-12-16 15:44:00	◣	cespare (cespare@moz-h4nvlf.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 15:44:10	&Manishearth	Sergio: already did the bump
2016-12-16 15:44:23	Sergio	Manishearth: Sorry, I mean to 0.3 instead of 0.2.x?
2016-12-16 15:44:25	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2016-12-16 15:44:29	&Manishearth	oh
2016-12-16 15:44:30	&Manishearth	meh
2016-12-16 15:44:35	&Manishearth	we usually don't
2016-12-16 15:44:35	Sergio	Okay :)
2016-12-16 15:44:36	meh	ヽ(´ｰ｀ )ﾉ 
2016-12-16 15:46:31	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-16 15:47:02	◣	tromey (tromey@moz-5gaudh.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.90.2))
2016-12-16 15:47:10	◣	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has quit (Quit: Leaving)
2016-12-16 15:48:33	◣	reset (reset@moz-jqf.n3j.210.209.IP) has quit (Quit: Linkinus - http://linkinus.com)
2016-12-16 15:48:57	Sergio	Wish I could anonymously tip developers.
2016-12-16 15:48:58	Sergio	Like, _any_ developer.
2016-12-16 15:49:30	Sergio	A simple one-button-press to give a dollar.
2016-12-16 15:49:43	pingveno	Sergio: You could find where they live and drop off some money.
2016-12-16 15:49:54	pingveno	It wouldn't be remotely creepy, trust me.
2016-12-16 15:49:54	◥	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has joined #rust
2016-12-16 15:50:04	Sergio	And a little drop-down next to it to change to $5, $10, or $20.
2016-12-16 15:50:15	insaneinside	Sergio: wear a ski mask while you do it to make it anonymous ;)
2016-12-16 15:50:19	Sergio	Haha
2016-12-16 15:50:31	&mbrubeck	At one point someone put a tiny amount of Bitcoin into an account on "gittip" (now called "gratipay") for Servo, and I think some other projects I contributed to
2016-12-16 15:50:31	Sergio	I'll bring a bat, just in case someone discovers it's me.
2016-12-16 15:50:39	◥	wldcordeiro (wldcordeiro@moz-3971oi.maon.n3es.0681.2601.IP) has joined #rust
2016-12-16 15:50:45	@steveklabnik	Sergio: what do you mean? a nightly happens for all platforms or none of them
2016-12-16 15:50:47	&mbrubeck	so anyone who commited to Servo would get something like $0.00001
2016-12-16 15:50:57	Sergio	I disliked gittip.
2016-12-16 15:51:05	Sergio	steveklabnik: I can currently rustup get 12/15 nightly on OS X but not Linux.
2016-12-16 15:51:05	&mbrubeck	if they took the time to claim it using a bitcoin address
2016-12-16 15:51:19	Sergio	Yeah, the issue is with claiming.
2016-12-16 15:51:26	▷	ski masks the NMI status bit
2016-12-16 15:51:31	@steveklabnik	Sergio: hmmm, that seems bad
2016-12-16 15:51:39	Sergio	steveklabnik: Indeed!
2016-12-16 15:51:54	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2016-12-16 15:52:11	Sergio	And it would have to be opt-out. Maybe if Github did it, it would work.
2016-12-16 15:52:26	Sergio	But I'd give so many people money.
2016-12-16 15:52:42	◣	maikklein (Mibbit@moz-376j9u.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-16 15:53:02	insaneinside	I *just* grabbed the 12/15 nightly on Debian here
2016-12-16 15:53:06	seeday	Can crates reference functions defined in another (non-root crate) using extern? I assume it's something weird with linking, because if I define it in my root crate it can find the function no problem.
2016-12-16 15:53:09	ezyang	Sergio: So, are you releasing? ;) 
2016-12-16 15:53:30	Sergio	ezyang: Ha
2016-12-16 15:53:49	Tiller	Is there a way to pretty print strucs that derive debug?
2016-12-16 15:54:18	◥	scanfield (scanfield@moz-vkc.t2b.132.104.IP) has joined #rust
2016-12-16 15:54:23	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2016-12-16 15:54:43	Sergio	ezyang: Soon!
2016-12-16 15:54:47	@steveklabnik	Tiller: {:#?}
2016-12-16 15:54:55	@steveklabnik	Tiller: if they support the extra flag
2016-12-16 15:55:12	insaneinside	"extra flag"?
2016-12-16 15:55:19	◥	aritz (aritz@moz-70ciej.clientes.euskaltel.es) has joined #rust
2016-12-16 15:55:23	◥	lambda-11235 (Lambda@moz-9pt.s9t.21.184.IP) has joined #rust
2016-12-16 15:56:00	scanfield	Is there anything going on with Iterators that need to return temporaries (e.g. the next call to next() invalidates the previously returned element) ? From reading around I see a few threads about it
2016-12-16 15:56:50	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 15:56:51	@steveklabnik	insaneinside: the #
2016-12-16 15:56:56	&mbrubeck	https://doc.rust-lang.org/std/fmt/struct.Formatter.html#method.alternate
2016-12-16 15:57:04	&mbrubeck	derive(Debug) on a struct supports the flag automatically
2016-12-16 15:57:20	insaneinside	oh, TIL :)
2016-12-16 15:57:26	◥	mib_2wzb5o (Mibbit@moz-t92.8mh.100.93.IP) has joined #rust
2016-12-16 15:57:40	◣	ytain (ytain@moz-fkgrnp.3o3s.l2s5.f2c0.2607.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-16 15:57:44	◥	cespare (cespare@moz-fc8h4f.compute-1.amazonaws.com) has joined #rust
2016-12-16 15:57:59	&mbrubeck	scanfield: I don't think there's any proposal to add a "StreamingIterator" sort of trait to the standard library, though you can always write your own or use one from an external library.
2016-12-16 15:58:24	scanfield	mbrubeck: thanks, just wanted to double check
2016-12-16 15:58:25	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Ping timeout: 121 seconds)
2016-12-16 15:58:32	&mbrubeck	scanfield: I think this was maybe one of the things that needed Higher-Kinded Types or Associated Type Constructors to express in an ideal way
2016-12-16 15:58:51	◣	wccole (quassel@moz-bm54rh.al.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-16 15:59:09	&mbrubeck	e.g. if you want to be able to use the same trait for a stream of references, or mutable references, or other types of borrowed type
2016-12-16 15:59:37	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2016-12-16 15:59:52	◣	mib_2wzb5o (Mibbit@moz-t92.8mh.100.93.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-16 15:59:55	◣	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has quit (Quit: Leaving)
2016-12-16 16:02:03	Psilidae	Woah. I never knew visual studio could open up the line that caused rust to panic when using a rust lib in a C++ project. That's awesome. 
2016-12-16 16:02:38	WindowsBunnyFluffyNaptime	Psilidae: pc-windows-msvc targets have PDB debuginfo
2016-12-16 16:02:45	Sergio	steveklabnik: Did you fix it? It's working now...
2016-12-16 16:02:54	WindowsBunnyFluffyNaptime	Psilidae: So you can step into and debug Rust code from inside VS fairly easily
2016-12-16 16:03:03	@steveklabnik	Sergio: i did nothing. maybe the CDN just needed some time
2016-12-16 16:03:13	Sergio	Indeed.
2016-12-16 16:03:17	WindowsBunnyFluffyNaptime	It's still not perfect, certain types have issues still
2016-12-16 16:03:17	Sergio	Or someone fixed it.
2016-12-16 16:03:18	Sergio	:)
2016-12-16 16:03:23	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-16 16:03:55	◥	Jesin (Jesin@moz-o7eng7.fios.verizon.net) has joined #rust
2016-12-16 16:04:09	◣	mjs2600 (mjs2600@moz-363rui.vt.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-16 16:04:55	Psilidae	WindowsBunnyFluffyNaptime, I was amazed when VS broke and landed right on the line in my rust project. I was totally expecting to just have it break on the c line. 
2016-12-16 16:05:06	Psilidae	This is wonderful 
2016-12-16 16:05:51	WindowsBunnyFluffyNaptime	Psilidae: LLVM emits codeview debuginfo and link.exe turns it into PDB debuginfo
2016-12-16 16:05:51	◥	skeuomorf (skeuomorf@moz-4te.1es.210.156.IP) has joined #rust
2016-12-16 16:06:14	⚡	WindowsBunnyFluffyNaptime is now known as WindowsBunnyTruckSimulator
2016-12-16 16:06:19	scanfield	mbrubeck: How does one express this concept in general, though? Say I have some collection that’s compressed and don’t want to uncompress the whole thing. I don’t see how to say that the lifetime of the returned item is tied to when you call the function again
2016-12-16 16:06:36	scanfield	even without trying to implement Iterator I mean
2016-12-16 16:07:13	◣	daze (daze@moz-tc29eq.static.zebra.lt) has quit (Connection closed)
2016-12-16 16:07:45	◥	montanonic (nicholas@moz-e3dvbk.dccu.6nti.3004.2603.IP) has joined #rust
2016-12-16 16:07:53	&mbrubeck	scanfield: You just need a function like `fn next(&mut self) -> &Item` which borrows `self` mutably for as long as the returned borrow is live
2016-12-16 16:08:19	bholley	I have a trait called SendForDrop, which is weaker than Send (it means that the object may be dropped on another thread). Ideally, I would like everything that is Send to be SendForDrop, and then tag a few non-Send things as SendForDrop as well. Unfortunately, I'm running into issue when I try to blanket-impl SendForDrop for anything that implements Send, because the compiler won't let me then implement SendForDrop on various non-Send types. Is
2016-12-16 16:08:19	bholley	 there a workaround here?
2016-12-16 16:08:29	&mbrubeck	scanfield: Then you can't call `next` until the previous result goes out of scope.
2016-12-16 16:08:31	scanfield	Item has a &mut of your Iterator
2016-12-16 16:08:44	scanfield	ok, let me give that a try, thanks
2016-12-16 16:09:28	◣	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has quit (Quit: WeeChat 1.6)
2016-12-16 16:09:35	◣	ndhoule (ndhoule@moz-3eh.5o5.207.67.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-12-18 17:34:05	⚡	irc: disconnected from server
2016-12-18 17:34:16	◥	boon (d8v3@moz-cf64oa.eqdp.1nof.0602.2601.IP) has joined #rust
2016-12-18 17:34:16	⚡	Topic for #rust is "Rust general discussion | Current release: 1.13 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-18 17:34:16	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 10 Nov 2016 12:05:29
2016-12-18 17:34:16	⚡	Channel #rust: 1200 nicks (15 ops, 0 halfops, 2 voices, 1183 normals)
2016-12-18 17:34:20	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-18 17:34:32	ubsan	it's equivalent to &str, except it has a defined ABI
2016-12-18 17:34:38	◣	Cir0X (Adium@moz-15thr7.pools.vodafone-ip.de) has quit (Quit: Leaving.)
2016-12-18 17:35:02	◣	meh (meh@moz-q6k.elc.42.151.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 17:35:29	durango	@nicholasf you mean this? https://github.com/lambdastackio/aws-sdk-rust/blob/master/src/aws/s3/object.rs#L1221 in any case, for s3 i know aws-sdk-rust is all good, im sure rusoto is too, but I DO know that rusoto has issues when you want to set custom DNS (running Minio or Riak) so if you're not doing anything outside of Amazon's ecosystem (or reconfigure your routes and have to manually switch them back/forth when testing/working on another
2016-12-18 17:35:29	durango	 client's stuff). In both cases, ymmv
2016-12-18 17:35:40	SomeDamnBody	is there a way to turn a [u8] into Bytes, or Read?
2016-12-18 17:35:43	◣	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 17:35:51	nicholasf	durango: thanks, I didnt spot that
2016-12-18 17:36:06	june	SomeDamnBody: https://doc.rust-lang.org/std/io/struct.Cursor.html
2016-12-18 17:36:20	nicholasf	well, Ive switched to rusoto for now, we'll see what happens
2016-12-18 17:36:54	solidsnack	ubsan: Having a defined ABI and not needing to be heap allocated seem unrelated. As long as it has to be passed as a pointer to C, it would seem to need to be heap allocated.
2016-12-18 17:36:59	durango	nicholasf np and yeah at the end of the day if the thing works its all good ;)
2016-12-18 17:37:10	▷	nicholasf nods 
2016-12-18 17:37:10	ubsan	solidsnack: no, borrowing in C is actually a thing
2016-12-18 17:37:18	solidsnack	Ah.
2016-12-18 17:37:20	ubsan	it's equivalent to returning an &str
2016-12-18 17:37:26	nicholasf	Ive read the Rust book 2 or 3 times at different intervals in the last 18 months
2016-12-18 17:37:33	solidsnack	Where can I read about this?
2016-12-18 17:37:33	ubsan	it's just in a format C can understand
2016-12-18 17:37:34	◣	PySnow (Mibbit@moz-nqk4d8.eastlink.ca) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-18 17:37:40	nicholasf	I'm just hacking together a small program that streams out s3 files
2016-12-18 17:37:52	ubsan	solidsnack: umm... I guess the nomicon?
2016-12-18 17:37:53	ubsan	I dunno
2016-12-18 17:37:57	nicholasf	lots to learn but finally a nice practical task for rust
2016-12-18 17:38:04	ubsan	I've learned this through years of C
2016-12-18 17:38:12	solidsnack	I have not seen any examples of that -- passing a complex type back to C directly from Rust.
2016-12-18 17:38:33	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2016-12-18 17:38:33	▷	ubsan shrugs
2016-12-18 17:38:50	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2016-12-18 17:38:52	solidsnack	Although C supports direct return of structs -- seemingly through memcpy -- that doesn't mean Rust does that.
2016-12-18 17:38:54	ubsan	I do it all the time with the LLVM C API
2016-12-18 17:39:07	ubsan	we follow the C ABI for extern "C" functions
2016-12-18 17:39:09	solidsnack	From Rust, though?
2016-12-18 17:39:14	ubsan	... yes
2016-12-18 17:39:21	solidsnack	Ah.
2016-12-18 17:39:22	ubsan	Rust would be incredibly broken if it wasn't so
2016-12-18 17:39:31	solidsnack	Ah.
2016-12-18 17:39:46	solidsnack	Can you show me an example somewhere online?
2016-12-18 17:40:01	ubsan	solidsnack: sdl2-rs
2016-12-18 17:40:05	solidsnack	So I can be sure i understand what you mean.
2016-12-18 17:40:16	solidsnack	Okay, I will have a look.
2016-12-18 17:40:24	◥	sbw (Thunderbird@moz-qqq.ckh.184.118.IP) has joined #rust
2016-12-18 17:40:37	solidsnack	These are extern functions that return structs directly?
2016-12-18 17:41:01	◥	newbie (eibwen@moz-7517ta.dip0.t-ipconnect.de) has joined #rust
2016-12-18 17:41:17	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-18 17:41:20	ubsan	some of them are
2016-12-18 17:42:20	◣	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2016-12-18 17:42:33	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2016-12-18 17:42:43	◣	ipetkov (ipetkov@moz-6jf7jo.wa.comcast.net) has quit (Client exited)
2016-12-18 17:42:45	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2016-12-18 17:42:58	Moonlightning	solidsnack: well, no, I don't think so. For example, you could call into C and pass a pointer to a stack-allocated thing, as long as the C code you're calling isn't going to store that pointer and potentially use it again after it returns.
2016-12-18 17:43:16	◣	arBmind (Andreas@moz-c9qrak.dyn.telefonica.de) has quit (Quit: Leaving.)
2016-12-18 17:43:55	◣	eibwen (eibwen@moz-9d4eo5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-18 17:44:47	solidsnack	ubsan: I will say, I am having some trouble finding an example.
2016-12-18 17:44:51	solidsnack	It is a large module.
2016-12-18 17:45:10	ubsan	solidsnack: then I'll just write one
2016-12-18 17:45:23	solidsnack	Okay, I would sure appreciate it.
2016-12-18 17:45:58	solidsnack	I am imagining something like `extern "C" fn ... -> TheStruct` and wondering how that could work safely.
2016-12-18 17:45:58	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Quit: Konversation terminated!)
2016-12-18 17:46:12	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-18 17:47:46	XMPPwocky	solidsnack: it's abi-dependent, but a common approach is that the caller passes a pointer
2016-12-18 17:47:56	◣	wccole (quassel@moz-bm54rh.al.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-18 17:47:57	XMPPwocky	and the callee memcpys the struct to that address
2016-12-18 17:48:20	solidsnack	XMPPwocky: What I wonder is if Rust can actually auto-magically do this, though.
2016-12-18 17:48:23	◣	cceckman (cceckman@moz-vckcuj.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-18 17:48:26	solidsnack	Maybe it doesn't have to?
2016-12-18 17:48:36	solidsnack	I am also wondering how to write code that does it.
2016-12-18 17:49:04	solidsnack	I mean I could just return &str then.
2016-12-18 17:49:05	Moonlightning	good question: how /does/ returning non-primitive types in Rust work?
2016-12-18 17:49:27	Moonlightning	I always kinda assumed it just constructed the object as far down the stack as necessary >.>
2016-12-18 17:49:28	solidsnack	Moonlightning: Well, in Rust it is one thing but I am wondering about returning non-primitive types from Rust to C.
2016-12-18 17:49:35	Moonlightning	Yeah.
2016-12-18 17:49:48	▷	Moonlightning hasn't needed to care about C yet :D
2016-12-18 17:50:15	XMPPwocky	solidsnack: this is basically llvm's fault
2016-12-18 17:50:20	XMPPwocky	s/fault/job
2016-12-18 17:50:37	Moonlightning	...actually, that's not always necessarily possible.
2016-12-18 17:50:54	Moonlightning	It's definitely possible in some cases, but it's tricky to impossible for others.
2016-12-18 17:51:13	solidsnack	Well, I think it could be find to just return a pointer to an `str` in the heap somewhere.
2016-12-18 17:51:26	solidsnack	Actually, I wonder why is `str` "variable size".
2016-12-18 17:51:43	solidsnack	It is a struct containing a pointer and a usize.
2016-12-18 17:51:43	ubsan	solidsnack: https://is.gd/WnUKxC
2016-12-18 17:52:03	june	No, that's &str
2016-12-18 17:52:16	◣	waffles (wafflespean@moz-n03.kju.23.1.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 17:52:45	solidsnack	ubsan: Okay, I will try something like that.
2016-12-18 17:52:45	ubsandroid	str is an unknown number of u8s all in a row in memory
2016-12-18 17:52:53	breeden	solidsnack: str is essentially a byte-array, and &str is a fat pointer
2016-12-18 17:52:56	XMPPwocky	huh, apparently it's not actually llvm doing this
2016-12-18 17:53:01	solidsnack	...
2016-12-18 17:53:05	solidsnack	Wow, okay.
2016-12-18 17:53:19	XMPPwocky	https://is.gd/1uk8K4
2016-12-18 17:53:24	solidsnack	I thought `str` was a slice and a slice was a pointer and a length.
2016-12-18 17:53:30	theemathas	solidsnack: str is an unsized type
2016-12-18 17:53:31	XMPPwocky	looks like a memcpy's getting emitted
2016-12-18 17:53:33	theemathas	solidsnack: https://doc.rust-lang.org/book/unsized-types.html
2016-12-18 17:53:37	XMPPwocky	but like
2016-12-18 17:53:43	XMPPwocky	inlined
2016-12-18 17:53:54	breeden	solidsnack: yeah, that's actually not an uncommon misconception at first
2016-12-18 17:54:35	solidsnack	So &str is the slice?
2016-12-18 17:54:42	solidsnack	And str is the...str?
2016-12-18 17:54:47	◣	sleffy (sleffy@moz-05lkbk.4f2e.erii.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 17:55:05	theemathas	solidsnack: "str" is like "[T]" and cannot be used on its own. "&str" is like "&[T]"
2016-12-18 17:55:59	june	There are inconsistencies in the terminology
2016-12-18 17:56:16	june	Is [T] a slice, or is &[T] a slice?
2016-12-18 17:56:20	◥	ubsandroid_ (ubsan@moz-2kfem3.a9ld.kjr0.fb90.2607.IP) has joined #rust
2016-12-18 17:56:25	june	What do you call the other one?
2016-12-18 17:56:52	◣	ubsandroid_ (ubsan@moz-2kfem3.a9ld.kjr0.fb90.2607.IP) has quit (Connection closed)
2016-12-18 17:57:00	◥	ubsandroid_ (ubsan@moz-uokv8f.subnet.rcn.com) has joined #rust
2016-12-18 17:57:35	◣	ubsandroid (ubsan@moz-uokv8f.subnet.rcn.com) has quit (Connection closed)
2016-12-18 17:58:07	▷	Moonlightning tends to just write out the type names. >3>
2016-12-18 17:58:09	ubsan	str is a slice
2016-12-18 17:58:15	ubsan	&str is a pointer to that slice
2016-12-18 17:58:22	ubsan	a slice is just bytes, in a row, in memory
2016-12-18 17:58:26	◥	zxq9 (ceverett@moz-uh0mao.mesh.ad.jp) has joined #rust
2016-12-18 17:59:38	solidsnack	This is what I am trying now: https://play.rust-lang.org/?gist=0017a2aa5bd4a8ed30070c2b5e565f4d&version=stable&backtrace=0
2016-12-18 18:00:24	◥	jsbruner (Instantbird@moz-tvo3fh.h4gj.q8mm.0306.2602.IP) has joined #rust
2016-12-18 18:01:27	Moonlightning	solidsnack: drop() doesn't do anything with Copy types
2016-12-18 18:01:43	Moonlightning	solidsnack: it is literally implemented as `pub fn drop<T>(_: T) {}`
2016-12-18 18:02:33	solidsnack	So how do I free the two words under the &str?
2016-12-18 18:02:35	Moonlightning	...oh, wait, you made another function called drop
2016-12-18 18:02:45	solidsnack	Yes.
2016-12-18 18:02:52	solidsnack	Maybe I should call it free.
2016-12-18 18:03:53	Moonlightning	also, you really can't "obtain ownership" of something if you're just given a raw pointer
2016-12-18 18:04:25	◥	Dima (textual@moz-iim.4il.27.103.IP) has joined #rust
2016-12-18 18:04:40	Moonlightning	you can still free the thing, but Rust can't guarantee that nothing else has a handle on it
2016-12-18 18:04:43	Moonlightning	yay, raw pointers!
2016-12-18 18:06:22	◣	JuggleTux (tux@moz-9o5sh5.cust.swisscom.ch) has quit (Quit: WeeChat 1.0.1)
2016-12-18 18:07:32	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2016-12-18 18:11:02	◥	thills (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2016-12-18 18:12:09	◥	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has joined #rust
2016-12-18 18:12:22	◣	durango (textual@moz-4udti5.at.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-18 18:14:15	◣	newbie (eibwen@moz-7517ta.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-18 18:15:29	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2016-12-18 18:16:32	◣	jsbruner (Instantbird@moz-tvo3fh.h4gj.q8mm.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 18:17:11	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Ping timeout: 121 seconds)
2016-12-18 18:19:59	Moonlightning	solidsnack: also, that `&'static str` basically means you'll only be able to use string literals... :P
2016-12-18 18:20:00	◣	nicholasf (nicholasf@moz-nap.qhj.136.1.IP) has quit (Connection closed)
2016-12-18 18:20:14	Moonlightning	borrowing any other string is going to produce a reference with a lifetime less than 'static
2016-12-18 18:21:16	◣	espadrine (tyl@moz-n5ok30.dd79.arl0.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 18:21:40	◣	Darfeel (Thunderbird@moz-56k.g3v.53.184.IP) has quit (Client exited)
2016-12-18 18:21:56	◥	marchelzo (marchelzo@moz-fg2sen.ns.bellaliant.net) has joined #rust
2016-12-18 18:24:50	◥	craigjb (textual@moz-3nh5q8.ph.cox.net) has joined #rust
2016-12-18 18:26:12	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 18:26:40	◣	CryZe (CryZe@moz-j11a9n.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2016-12-18 18:27:38	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 18:29:39	◣	craigjb (textual@moz-3nh5q8.ph.cox.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-18 18:32:18	solidsnack	Moonlightning: I'm sure I can do some unsafe evil to fix that.
2016-12-18 18:33:11	theemathas	solidsnack: I suspect that you are abusing lifetimes
2016-12-18 18:33:11	solidsnack	Maybe not, because of the stack thing, like ubsan said.
2016-12-18 18:33:15	Moonlightning	solidsnack: I can't say I know much at all about raw pointers, but...given the way you're interacting with C and stuff...I think that should be a raw pointer instead off a reference.
2016-12-18 18:33:36	ubsan	I don't think you should use any unsafe for this
2016-12-18 18:33:38	ubsan	like
2016-12-18 18:33:39	ubsan	at all
2016-12-18 18:33:44	solidsnack	But I don't think you can do "raw pointer to string"
2016-12-18 18:33:44	Moonlightning	I mean, that, or actually parameterize it with a lifetime
2016-12-18 18:33:47	Moonlightning	and use that lifetime
2016-12-18 18:33:50	theemathas	ubsan: Have you looked into CStr?
2016-12-18 18:33:51	ubsan	this shouldn't require unsafe at all
2016-12-18 18:33:55	theemathas	ubsan: https://doc.rust-lang.org/std/ffi/struct.CStr.html
2016-12-18 18:33:58	ubsan	theemathas: umm... yes
2016-12-18 18:34:15	ubsan	theemathas: https://www.rust-lang.org/en-US/team.html
2016-12-18 18:34:15	solidsnack	theemathas: It is not an actual counted string.
2016-12-18 18:34:16	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2016-12-18 18:34:23	ubsan	(I'm near the bottom)
2016-12-18 18:34:39	◥	IanCormac84 (Nathan@moz-ja6.mia.214.206.IP) has joined #rust
2016-12-18 18:34:48	ubsan	:P
2016-12-18 18:34:53	theemathas	ubsan: also CString
2016-12-18 18:35:13	ubsan	theemathas: yep, very useful
2016-12-18 18:36:39	◥	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has joined #rust
2016-12-18 18:39:11	◣	ezy (ezy@moz-aq7mml.pkln.6ub4.0602.2601.IP) has quit (Quit: WeeChat 1.5)
2016-12-18 18:39:11	◥	ghishadow________ (ghishadow@moz-oha.mvo.247.47.IP) has joined #rust
2016-12-18 18:39:17	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2016-12-18 18:40:55	◣	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-18 18:41:18	◥	Kingsqueeee (kingsley@moz-46ia3t.bchsia.telus.net) has joined #rust
2016-12-18 18:41:44	◥	ezy (ezy@moz-aq7mml.pkln.6ub4.0602.2601.IP) has joined #rust
2016-12-18 18:41:49	◣	ghishadow_______ (ghishadow@moz-rt5.i2c.199.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 18:44:30	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-18 18:44:32	◥	Guest37 (textual@moz-edsm98.res.rr.com) has joined #rust
2016-12-18 18:44:42	◣	vadix_ (vadix@moz-h9klev.nkcu.i5co.05c1.2601.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 18:44:49	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Quit: Konversation terminated!)
2016-12-18 18:45:03	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2016-12-18 18:45:26	◣	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Quit: Leaving.)
2016-12-18 18:45:48	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 18:47:11	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 18:47:46	◣	moltendorf (moltendorf@moz-140pst.ca.comcast.net) has quit (Connection closed)
2016-12-18 18:47:56	◥	scrogson1 (scrogson@moz-hq694i.tftc.9t39.0306.2602.IP) has joined #rust
2016-12-18 18:48:09	◣	mmstick (mmstick@moz-q1hptf.fios.verizon.net) has quit (Connection closed)
2016-12-18 18:49:22	◥	jsgrant_ (jsgrant@moz-ukbqhp.mo.charter.com) has joined #rust
2016-12-18 18:49:28	◥	starblue (juergen@moz-aobiin.pools.vodafone-ip.de) has joined #rust
2016-12-18 18:51:07	◣	starblue1 (juergen@moz-kvjkpf.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2016-12-18 18:52:04	◣	scrogson1 (scrogson@moz-hq694i.tftc.9t39.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 18:54:27	◣	theemathas (theemathas@moz-a2a6au.wa.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2016-12-18 18:56:19	◣	IanCormac84 (Nathan@moz-ja6.mia.214.206.IP) has quit (Quit: http://pidgin.renatosilva.me - Pidgin++)
2016-12-18 18:57:12	◣	ot (ot@moz-gmtpic.cpe.webspeed.dk) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161213212120])
2016-12-18 19:01:18	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 19:02:42	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 19:02:43	◥	IanCormac84 (Nathan@moz-ja6.mia.214.206.IP) has joined #rust
2016-12-18 19:05:34	◣	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-18 19:05:55	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2016-12-18 19:09:59	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-18 19:09:59	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2016-12-18 19:11:47	◥	thills (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2016-12-18 19:13:48	◥	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has joined #rust
2016-12-18 19:14:43	◥	kushal (kdas@moz-9j3.cdf.97.27.IP) has joined #rust
2016-12-18 19:15:00	Hail_Spacecake	what's the current state of Rust LLVM bindings?
2016-12-18 19:15:01	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Ping timeout: 121 seconds)
2016-12-18 19:15:21	XMPPwocky	doesn't rustc sort of necessarily have those
2016-12-18 19:16:08	solidsnack	ubsan theemathas But neither one is a counted string so it can't be used for sharing out of a buffer; it forces a copy so you can put the null on the end.
2016-12-18 19:16:12	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2016-12-18 19:16:26	ubsan	Hail_Spacecake: pretty good
2016-12-18 19:16:46	◥	Procrat (uid191381@moz-umcf07.highgate.irccloud.com) has joined #rust
2016-12-18 19:17:14	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Ping timeout: 121 seconds)
2016-12-18 19:19:55	◥	nicholasf (nicholasf@moz-nap.qhj.136.1.IP) has joined #rust
2016-12-18 19:20:52	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 19:21:27	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Ping timeout: 121 seconds)
2016-12-18 19:22:15	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 19:24:49	◣	Jobava (uid133806@moz-m691l3.richmond.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-18 19:25:46	◣	computerquip (NoXzema@moz-h86teo.hstntx.sbcglobal.net) has quit (Connection closed)
2016-12-18 19:26:12	◣	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:28:56	◥	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has joined #rust
2016-12-18 19:29:06	◥	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has joined #rust
2016-12-18 19:29:08	◣	nicholasf (nicholasf@moz-nap.qhj.136.1.IP) has quit (Connection closed)
2016-12-18 19:29:44	◣	kimundi (kimundi@moz-r95386.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2016-12-18 19:30:31	◣	wno (foo@moz-n5pms2.niksula.hut.fi) has quit (Ping timeout: 121 seconds)
2016-12-18 19:30:35	◥	wno (foo@moz-n5pms2.niksula.hut.fi) has joined #rust
2016-12-18 19:30:45	◣	def (def@moz-n5pms2.niksula.hut.fi) has quit (Ping timeout: 121 seconds)
2016-12-18 19:30:48	◥	def (def@moz-n5pms2.niksula.hut.fi) has joined #rust
2016-12-18 19:31:11	◥	kimundi (kimundi@moz-v4nr7g.dip0.t-ipconnect.de) has joined #rust
2016-12-18 19:33:28	◥	wccole (quassel@moz-bm54rh.al.comcast.net) has joined #rust
2016-12-18 19:33:43	◣	Yann (yann@moz-i2v.sjc.226.195.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:34:55	◥	martinium (martinium@moz-c06.kt4.181.107.IP) has joined #rust
2016-12-18 19:36:07	solidsnack	I think of a reference as being a way of addressing a type, not something with its own layout. But there is something special going on with &str and slices?
2016-12-18 19:36:43	solidsnack	Are there other examples of types in Rust where the reference and the underlying type can have different physical layout?
2016-12-18 19:36:48	◣	pepper_chico (pepper_chic@moz-o68lqd.telesp.net.br) has quit (Ping timeout: 121 seconds)
2016-12-18 19:37:45	◥	john_ (john@moz-ehabr6.dyn.telefonica.de) has joined #rust
2016-12-18 19:38:19	◥	ghishadow_______ (ghishadow@moz-rt5.i2c.199.117.IP) has joined #rust
2016-12-18 19:38:21	◣	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has quit (Connection closed)
2016-12-18 19:39:07	◣	jn (uid432@moz-lvoen4.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-18 19:39:36	◣	ghishadow________ (ghishadow@moz-oha.mvo.247.47.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:41:03	◣	pticochon (john@moz-bbbe8j.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2016-12-18 19:41:45	◥	ghishadow________ (ghishadow@moz-e1k.f76.207.117.IP) has joined #rust
2016-12-18 19:41:53	◣	Ser-Pounce (ser-pounce@moz-gu8.9qm.192.139.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:42:10	◥	brianpWins_ (brianpWins@moz-9dl0l5.dyn.nltelcom.net) has joined #rust
2016-12-18 19:42:18	◥	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has joined #rust
2016-12-18 19:42:43	◥	nicholasf (nicholasf@moz-6nedbk.internode.on.net) has joined #rust
2016-12-18 19:42:44	◣	ghishadow_______ (ghishadow@moz-rt5.i2c.199.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:43:09	◣	brianpWins (brianpWins@moz-amk.0cj.157.192.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:43:09	⚡	brianpWins_ is now known as brianpWins
2016-12-18 19:45:18	◥	Ser-Pounce (ser-pounce@moz-gu8.9qm.192.139.IP) has joined #rust
2016-12-18 19:45:36	Ralith	solidsnack: references nearly always have a different layout than the thing they refer to...
2016-12-18 19:46:02	Ralith	most types are not usize/isize
2016-12-18 19:46:23	solidsnack	But a reference to a strict and a struct...
2016-12-18 19:46:30	◣	brianpWins (brianpWins@moz-9dl0l5.dyn.nltelcom.net) has quit (Connection closed)
2016-12-18 19:46:43	solidsnack	There won't be like, an extra field on the reference.
2016-12-18 19:46:57	Ralith	there won't be a struct in the reference either
2016-12-18 19:47:08	◥	brianpWins (brianpWins@moz-9dl0l5.dyn.nltelcom.net) has joined #rust
2016-12-18 19:47:22	Ralith	references are a family of types, just like any other family
2016-12-18 19:48:07	Ralith	&T is no more the same as T than Vec<T> is
2016-12-18 19:48:46	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-18 19:48:56	◣	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2016-12-18 19:49:11	◥	Dylan16807 (dylan@moz-62uibl.cntmoh.sbcglobal.net) has joined #rust
2016-12-18 19:49:33	◥	ghishadow_________ (ghishadow@moz-5rf.mjt.247.47.IP) has joined #rust
2016-12-18 19:50:13	◣	ghishadow________ (ghishadow@moz-e1k.f76.207.117.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 19:52:19	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-18 19:54:19	◥	tmtwd (tmtwd@moz-8ob.tat.72.45.IP) has joined #rust
2016-12-18 19:54:31	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 19:54:59	◣	ghishadow_________ (ghishadow@moz-5rf.mjt.247.47.IP) has quit (Connection closed)
2016-12-18 19:55:11	◥	ghishadow_________ (ghishadow@moz-oha.mvo.247.47.IP) has joined #rust
2016-12-18 19:55:47	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 19:55:53	◣	russ_za (smuxi@moz-01aauh.voxdsl.co.za) has quit (Ping timeout: 121 seconds)
2016-12-18 19:56:26	◥	russ_za (smuxi@moz-2uiee8.voxdsl.co.za) has joined #rust
2016-12-18 19:57:42	solidsnack	Wow
2016-12-18 19:58:40	Ralith	?
2016-12-18 19:58:49	◥	yeahnoob (kvirc@moz-vah.a5n.9.111.IP) has joined #rust
2016-12-18 19:59:13	solidsnack	I think about a pointer.
2016-12-18 19:59:54	solidsnack	A pointer doesn't have any additional properties, viz-a-viz the type it points to.
2016-12-18 20:00:30	solidsnack	But it seems like &[_] has length and [_] doesn't.
2016-12-18 20:01:03	XMPPwocky	a pointer has loads of additional properties
2016-12-18 20:01:38	◣	ghishadow_________ (ghishadow@moz-oha.mvo.247.47.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 20:01:51	◥	ghishadow_________ (ghishadow@moz-e1k.f76.207.117.IP) has joined #rust
2016-12-18 20:02:26	◣	russ_za (smuxi@moz-2uiee8.voxdsl.co.za) has quit (Ping timeout: 121 seconds)
2016-12-18 20:04:34	◥	russ_za (smuxi@moz-01aauh.voxdsl.co.za) has joined #rust
2016-12-18 20:05:06	◥	scanfield (scanfield@moz-pcl24o.ca.comcast.net) has joined #rust
2016-12-18 20:06:12	scanfield	Is there a common way to perform mutliple operations that return e.g. Option or Result where you stop at the first error but otherwise collect all of the individual results?
2016-12-18 20:08:16	scanfield	https://gist.github.com/anonymous/ca28483ebeb3fd0080601602f5a56dd7
2016-12-18 20:09:55	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:10:02	◣	talchas (user@moz-i75sak.ca.comcast.net) has quit (Connection closed)
2016-12-18 20:10:10	◥	talchas (user@moz-i75sak.ca.comcast.net) has joined #rust
2016-12-18 20:11:19	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 20:11:21	◣	brianpWins (brianpWins@moz-9dl0l5.dyn.nltelcom.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:12:32	◥	thills (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2016-12-18 20:14:06	◣	hiptobecubic (john@moz-07gufc.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:14:16	◣	chao-tic (chao@moz-258.4aj.101.218.IP) has quit (Quit: WeeChat 1.0.1)
2016-12-18 20:14:42	talklittle	scanfield: that kind of sounds like the `try!` macro, does that not fit your use case?
2016-12-18 20:15:22	scanfield	ah maybe — but try! / ? is for Result<> only, not for Option right?
2016-12-18 20:15:55	XMPPwocky	scanfield: there's and_then for this too: https://doc.rust-lang.org/std/option/enum.Option.html#method.and_then
2016-12-18 20:16:09	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Connection closed)
2016-12-18 20:16:15	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-18 20:16:24	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Connection closed)
2016-12-18 20:16:38	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2016-12-18 20:16:59	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:17:30	scanfield	XMPPwocky: and_then seems interesting, but e.g. if I want all 3 values I don’t see how it works. I make the lambdas return tuples with increasingly many elements?
2016-12-18 20:18:11	Tari	you can express it as a fold
2016-12-18 20:18:18	XMPPwocky	yeah usually
2016-12-18 20:19:18	Tari	oh, I assumed there was an iterator involved; disregard
2016-12-18 20:20:23	scanfield	let me give that a try
2016-12-18 20:20:42	◥	scrogson1 (scrogson@moz-hq694i.tftc.9t39.0306.2602.IP) has joined #rust
2016-12-18 20:20:52	◣	cgar (cgar@moz-9eiloi.dyn.optonline.net) has quit (Quit: Leaving)
2016-12-18 20:21:03	◥	daschl (daschl@moz-kvc.ipu.178.62.IP) has joined #rust
2016-12-18 20:21:16	◣	sw1nn (sw1nn@moz-gdfr39.81.in-addr.arpa) has quit (Quit: Lost terminal)
2016-12-18 20:21:39	XMPPwocky	Tari: well if an iterator shows up you get to show off with .collect
2016-12-18 20:21:43	◥	jedahan (jedahan@moz-b93ovs.res.rr.com) has joined #rust
2016-12-18 20:22:19	scanfield	well I do have an itereator that I’m trying to read 3 elements from, but I couldn’t find a function that does that
2016-12-18 20:22:20	Tari	yeah, I realized take_while + collect and maybe a map is pretty obvious with an iterator
2016-12-18 20:22:31	XMPPwocky	scanfield: .take
2016-12-18 20:22:54	XMPPwocky	oh but you want a tuple?
2016-12-18 20:23:03	XMPPwocky	Tari: oh no- i mean this rad trick
2016-12-18 20:23:41	scanfield	What’s the behavior of it.take(3) when it is smaller than that
2016-12-18 20:24:16	Tari	it'll yield as many elements are available
2016-12-18 20:24:50	◣	scrogson1 (scrogson@moz-hq694i.tftc.9t39.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 20:24:53	scanfield	and does take advance the original iterator?
2016-12-18 20:24:55	XMPPwocky	playbot: let a  = vec![Some(1), Some(2), None]; let b = vec![Some(1), Some(2)]; (a.into_iter().collect::<Option<u8>>(), b.into_iter.collect::<Option<u8>>())
2016-12-18 20:24:58	⚡	Notice(playbot): error[E0277]: the trait bound `u8: std::iter::FromIterator<{integer}>` is not satisfied
2016-12-18 20:24:58	⚡	Notice(playbot):   --> <anon>:10:95
2016-12-18 20:24:58	⚡	Notice(playbot):    |
2016-12-18 20:24:58	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hKcSJg)
2016-12-18 20:25:16	XMPPwocky	playbot: let a  = vec![Some(1), Some(2), None]; let b = vec![Some(1), Some(2)]; (a.into_iter().collect::<Option<Vec<u8>>>(), b.into_iter.collect::<Option<Vec<u8>>>())
2016-12-18 20:25:19	⚡	Notice(playbot): error: attempted to take value of method `into_iter` on type `std::vec::Vec<std::option::Option<{integer}>>`
2016-12-18 20:25:19	⚡	Notice(playbot):   --> <anon>:10:127
2016-12-18 20:25:19	⚡	Notice(playbot):    |
2016-12-18 20:25:19	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hyPdxk)
2016-12-18 20:25:25	XMPPwocky	oh for cryin out loud
2016-12-18 20:25:30	XMPPwocky	playbot: let a  = vec![Some(1), Some(2), None]; let b = vec![Some(1), Some(2)]; (a.into_iter().collect::<Option<Vec<u8>>>(), b.into_iter().collect::<Option<Vec<u8>>>())
2016-12-18 20:25:33	⚡	Notice(playbot): (None, Some([1, 2]))
2016-12-18 20:25:38	XMPPwocky	that is the collect trick
2016-12-18 20:25:43	XMPPwocky	Option and Result both have it
2016-12-18 20:26:03	◣	ghishadow_________ (ghishadow@moz-e1k.f76.207.117.IP) has quit (Client exited)
2016-12-18 20:26:08	XMPPwocky	basically, Option<T> implements FromIterator<U> where T implements FromIterator<U>
2016-12-18 20:26:28	XMPPwocky	you get None if there were any None, otherwise a Some of all the values
2016-12-18 20:26:38	XMPPwocky	result gives you an Err with the first error encountered
2016-12-18 20:27:54	XMPPwocky	scanfield: take doesn't actually do anything to the iterator- it just wraps it
2016-12-18 20:27:59	◣	jedahan (jedahan@moz-b93ovs.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-18 20:28:02	XMPPwocky	you just get another iterator that yields no more than N elements
2016-12-18 20:28:07	scanfield	oh, I screwed up though — varint::decode_32 in my example reads N bytes
2016-12-18 20:28:39	XMPPwocky	you can then .collect that into your favorite collection type (probably Vec)
2016-12-18 20:29:57	◣	martinium (martinium@moz-c06.kt4.181.107.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 20:30:03	scanfield	but still might work. Let’s see.
2016-12-18 20:30:31	◥	sunng (nsun@moz-kmi.4oo.241.114.IP) has joined #rust
2016-12-18 20:30:32	◣	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-18 20:33:24	◣	gingermusketeer (gingermuske@moz-d93u6o.compute.amazonaws.com) has quit (Connection closed)
2016-12-18 20:33:31	◥	gingermusketeer (gingermuske@moz-ftrc3g.compute.amazonaws.com) has joined #rust
2016-12-18 20:34:27	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2016-12-18 20:35:31	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:36:51	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 20:37:27	◥	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has joined #rust
2016-12-18 20:38:29	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:40:29	SiegeLord	Is there a setting for RUST_BACKTRACE that hides the internal details of panicking?
2016-12-18 20:41:08	SiegeLord	Like there's 8 frames inside panicking.rs...
2016-12-18 20:41:24	simulacrum	SiegeLord: Being worked on: https://github.com/rust-lang/rust/pull/38165
2016-12-18 20:41:33	SiegeLord	Sweet
2016-12-18 20:41:46	◣	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-18 20:43:08	SiegeLord	I've been writing just C++/Python for nearly almost a year... coming back to Rust is pretty sweet
2016-12-18 20:43:19	SiegeLord	Just need to stop doing 'def' instead of 'fn'...
2016-12-18 20:43:28	◥	ubsandroid (ubsan@moz-djmlsp.subnet.rcn.com) has joined #rust
2016-12-18 20:44:17	scanfield	XMPPwocky, Tari: https://gist.github.com/anonymous/d45079d6c71935fe0d0e65923f3b69a4
2016-12-18 20:44:41	scanfield	made a little messier in that I’m going from Result to Option for no reason
2016-12-18 20:44:52	scanfield	actually I bet there’s a function for that.
2016-12-18 20:45:14	scanfield	ah .ok()
2016-12-18 20:45:57	◣	ubsandroid_ (ubsan@moz-uokv8f.subnet.rcn.com) has quit (Ping timeout: 121 seconds)
2016-12-18 20:49:29	◥	waffles (wafflespean@moz-kv4.jmi.165.122.IP) has joined #rust
2016-12-18 20:49:46	◣	yeahnoob (kvirc@moz-vah.a5n.9.111.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 20:50:01	◥	yeahnoob (kvirc@moz-vah.a5n.9.111.IP) has joined #rust
2016-12-18 20:50:59	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 20:51:16	◣	clay (clay@moz-d1q3b9.clayfreeman.com) has quit (Ping timeout: 121 seconds)
2016-12-18 20:51:36	◥	scrogson1 (scrogson@moz-hq694i.tftc.9t39.0306.2602.IP) has joined #rust
2016-12-18 20:52:23	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 20:53:04	◥	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has joined #rust
2016-12-18 20:56:08	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Connection closed)
2016-12-18 20:57:28	◥	twi (twi@moz-dhvtp3.clients.your-server.de) has joined #rust
2016-12-18 20:58:07	◥	sleffy (sleffy@moz-krsn06.4f2e.erii.0644.2601.IP) has joined #rust
2016-12-18 20:58:18	solidsnack	ubsan: Reading over your example in more detail: the thing I wonder about is, it looks like you are just taking a vector apart and putting it back together again as "your own vector".
2016-12-18 20:58:35	ubsan	solidsnack: yep
2016-12-18 20:58:45	◣	casey_ (casey@moz-v0ns05.tpgi.com.au) has quit (Connection closed)
2016-12-18 20:58:49	solidsnack	To deallocate it you put it back together again and let it drop.
2016-12-18 20:58:49	ubsan	solidsnack: because Vector<T> doesn't have a defined ordering
2016-12-18 20:58:53	ubsan	yep
2016-12-18 20:59:08	◣	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 20:59:23	solidsnack	It is because `Vec<T>` is not `repr(C)`?
2016-12-18 20:59:31	ubsan	yep
2016-12-18 20:59:44	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-18 20:59:48	solidsnack	I see. But say you exported it as an "opaque type".
2016-12-18 20:59:53	solidsnack	Would that still work?
2016-12-18 21:00:18	ubsan	yes, if you allocated it
2016-12-18 21:00:28	ubsan	but don't do that
2016-12-18 21:00:44	◥	jedahan (jedahan@moz-b93ovs.res.rr.com) has joined #rust
2016-12-18 21:01:08	◣	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-18 21:01:12	◥	mada (mariano@moz-8r3.lft.178.190.IP) has joined #rust
2016-12-18 21:01:28	◥	zyphrus (zyphrus@moz-ter.mu8.224.119.IP) has joined #rust
2016-12-18 21:02:05	◥	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has joined #rust
2016-12-18 21:03:20	◣	jedahan (jedahan@moz-b93ovs.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-18 21:03:58	◣	IanCormac84 (Nathan@moz-ja6.mia.214.206.IP) has quit (Quit: http://pidgin.renatosilva.me - Pidgin++)
2016-12-18 21:04:46	◣	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has quit (Connection closed)
2016-12-18 21:04:47	◣	bobross (bobross@moz-tfju8u.mi.comcast.net) has quit (Connection closed)
2016-12-18 21:05:26	◣	urcra (urcra@moz-9lk9gn.cpe.webspeed.dk) has quit (Connection closed)
2016-12-18 21:06:24	ubsan	an example of the opaque type pattern is: https://is.gd/o8RPcA
2016-12-18 21:07:03	ubsan	sorry, https://is.gd/76wlnL
2016-12-18 21:07:28	◥	IanCormac84 (Nathan@moz-ja6.mia.214.206.IP) has joined #rust
2016-12-18 21:08:23	◥	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has joined #rust
2016-12-18 21:08:23	◥	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has joined #rust
2016-12-18 21:10:49	◣	cscorley (cscorley@moz-fp90ai.WISOLT3.epbfi.com) has quit (Connection closed)
2016-12-18 21:11:12	◣	mada (mariano@moz-8r3.lft.178.190.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 21:11:19	solidsnack	In the opaque type example...
2016-12-18 21:12:08	solidsnack	How does the Box<Vec<_>> become a &Vec<_> in for ..._index, ..._len?
2016-12-18 21:12:20	ubsan	they're pointers
2016-12-18 21:12:29	ubsan	they're both pointers
2016-12-18 21:12:32	solidsnack	Ah.
2016-12-18 21:12:33	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 21:12:41	solidsnack	The C signature elides the box.
2016-12-18 21:12:44	◥	TechCrunch (Tech@moz-ant.ip3.100.101.IP) has joined #rust
2016-12-18 21:12:45	ubsan	notice how in C, I'm returning a VectorU8*
2016-12-18 21:12:52	solidsnack	Yes, I see.
2016-12-18 21:12:58	ubsan	because C doesn't have a good pointer-ownership model
2016-12-18 21:13:15	solidsnack	Earlier you say: "...but don't do that..."
2016-12-18 21:13:15	ubsan	therefore, the best you can do is document the types on the rust side, and hope the C side follows them
2016-12-18 21:13:16	◥	thills (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2016-12-18 21:13:20	ubsan	yep
2016-12-18 21:13:29	ubsan	unless you have to
2016-12-18 21:13:33	ubsan	you do not have to
2016-12-18 21:13:40	solidsnack	But aren't opaque the common/good way to expose abstract types with C?
2016-12-18 21:13:54	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-18 21:13:55	ubsan	nope
2016-12-18 21:13:56	solidsnack	s/opaque/opaque types/
2016-12-18 21:14:17	ubsan	if the type should be opaque, it should be opaque
2016-12-18 21:14:21	ubsan	this is a rare occurence
2016-12-18 21:14:23	◣	scanfield (scanfield@moz-pcl24o.ca.comcast.net) has quit (Client exited)
2016-12-18 21:14:26	solidsnack	Hmm.
2016-12-18 21:14:29	ubsan	for example
2016-12-18 21:14:38	ubsan	why the hell would I put a vector behind a pointer?
2016-12-18 21:14:44	ubsan	it just makes no sense
2016-12-18 21:14:51	ubsan	it's just a pointer, len, cap family
2016-12-18 21:15:07	◥	tripped (trip@moz-pekbbs.wa.comcast.net) has joined #rust
2016-12-18 21:15:14	ubsan	and it's not like it's ever going to change
2016-12-18 21:15:20	◣	ytain (ytain@moz-5sgv7g.ipv6.teksavvy.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-18 21:15:33	ajd	Any way to force rustup to use a different base install directory?
2016-12-18 21:15:33	ubsan	there is approximately one reason to make opaque types - being able to change implementation without changing ABI/API
2016-12-18 21:15:40	◣	TechnoCrunch (Tech@moz-ant.ip3.100.101.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 21:15:59	ubsan	(see FILE*, in C)
2016-12-18 21:16:22	ubsan	each platform implements it differently, and it is different across versions of the same platform
2016-12-18 21:16:32	ubsan	so it's very good to make it opaque
2016-12-18 21:17:42	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2016-12-18 21:18:04	solidsnack	I would assume the reason to make it opaque is: not to have 3rd parties rely on anything but the published API functions.
2016-12-18 21:18:37	ubsan	yep
2016-12-18 21:18:38	◥	Esption (Esption@moz-b6idu9.dynamic.tds.net) has joined #rust
2016-12-18 21:18:43	ubsan	but there are real costs
2016-12-18 21:19:02	ubsan	i.e., an extra allocation, and pointer chasing, and harder to optimize
2016-12-18 21:19:10	◣	bestofluck (textual@moz-i1j138.pe10.jh1n.e000.2605.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-18 21:20:10	◣	TechCrunch (Tech@moz-ant.ip3.100.101.IP) has quit (Ping timeout: 121 seconds)
2016-12-18 21:20:16	◣	kushal (kdas@moz-9j3.cdf.97.27.IP) has quit (Connection closed)
2016-12-18 21:20:45	◣	waffles (wafflespean@moz-kv4.jmi.165.122.IP) has quit (Connection closed)
2016-12-18 21:21:44	◥	waffles (wafflespean@moz-kv4.jmi.165.122.IP) has joined #rust
2016-12-18 21:24:31	◣	tobytailor (sid44@moz-vnkvob.0j4i.jtu0.0101.2620.IP) has quit (Quit: Updating details, brb)
2016-12-18 21:24:40	◥	kristof (Mibbit@moz-sjtpaj.rk.wavecable.com) has joined #rust
2016-12-18 21:25:46	solidsnack	In the case of this struct thing you are doing, there is no extra allocation because of the memcpy magic, I guess.
2016-12-18 21:26:12	solidsnack	Still getting used to this idea.
2016-12-18 21:26:56	solidsnack	Yeah, that makes it better.
2016-12-18 21:27:40	solidsnack	free() for free
2016-12-18 21:27:41	solidsnack	heh
2016-12-18 21:29:36	◣	marchelzo (marchelzo@moz-fg2sen.ns.bellaliant.net) has quit (Ping timeout: 121 seconds)
2016-12-18 21:31:38	◥	cceckman (cceckman@moz-vckcuj.ca.comcast.net) has joined #rust
2016-12-18 21:32:16	◣	nagisa_ (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2016-12-18 21:34:04	◣	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has quit (Ping timeout: 121 seconds)
2016-12-18 21:35:26	◥	offs3tzer0 (offs3tzer0@moz-9ak1ln.customer.lyse.net) has joined #rust
2016-12-28 13:44:12	◥	d8v3 (d8v3@moz-02lrv9.1jia.d83m.0600.2601.IP) has joined #rust
2016-12-28 13:44:12	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-28 13:44:12	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2016-12-28 13:44:12	⚡	Channel #rust: 1250 nicks (17 ops, 0 halfops, 2 voices, 1231 normals)
2016-12-28 13:44:14	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-28 13:45:09	Aaronepower	pedrocr You can specify for debug to use a certain optimisation level, I'm not sure at what level bounds checking is removed, release is `3`.
2016-12-28 13:45:19	raph	breeden1: we're going to have more public story before long, but in the meantime i can speak a bit to why it's personally exciting to me
2016-12-28 13:45:20	Aaronepower	and debug is 0
2016-12-28 13:45:52	raph	it's a real microkernel, with native support for channels and capabilities in the kernel (rather than having to simulate them over unix interprocess communication channels)
2016-12-28 13:46:25	raph	being a microkernel, it lets you implement huge parts of the system that would ordinarily be in-kernel in userspace - drivers, filesystem, network stack, etc
2016-12-28 13:46:41	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2016-12-28 13:46:41	sfackler	Sergio_: I don't think so yet, but it is something that would be fantastic to have
2016-12-28 13:47:22	raph	it's explicitly language-agnostic, writing a module in any language you feel like should work well
2016-12-28 13:47:22	breeden1	oh interesting.  I might have to keep an eye on that project.
2016-12-28 13:47:33	◥	pepijndevos (textual@moz-12qi4p.mq3f.i8f0.a213.2a02.IP) has joined #rust
2016-12-28 13:48:01	◣	breadmenace^ (breadmenac@moz-99sjhj.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2016-12-28 13:48:11	raph	(this is in contrast to Android, where Java is the only supported language for writing apps, C++ is only supported for some use cases, and the use of other languages gets progressively harder)
2016-12-28 13:48:17	◣	pepijndevos (textual@moz-12qi4p.mq3f.i8f0.a213.2a02.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-12-28 13:48:23	◣	ubsandroid_ (ubsan@moz-q62fcn.5ed5.d7mq.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2016-12-28 13:48:23	◥	breadmenace (breadmenac@moz-99sjhj.sntcca.sbcglobal.net) has joined #rust
2016-12-28 13:48:54	raph	so combining those features, it means that doing stuff in rust makes a lot of sense
2016-12-28 13:48:55	dave_	durka42: heeey, that was it!
2016-12-28 14:20:27	⚡	irc: disconnected from server
2016-12-28 14:20:38	◥	d8v3 (d8v3@moz-02lrv9.1jia.d83m.0600.2601.IP) has joined #rust
2016-12-28 14:20:38	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2016-12-28 14:20:38	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2016-12-28 14:20:38	⚡	Channel #rust: 1242 nicks (17 ops, 0 halfops, 2 voices, 1223 normals)
2016-12-28 14:20:40	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2016-12-28 14:20:48	hansihe	right, and then you can use something like a rwlock for mutability?
2016-12-28 14:20:49	talchas	and if you want to mutate, there's RwLock/Mutex or Atomic* or just flat up unsafe{}
2016-12-28 14:20:57	hansihe	yep, gotcha
2016-12-28 14:20:59	hansihe	thanks!
2016-12-28 14:21:08	talchas	(unsafe{} with UnsafeCell)
2016-12-28 14:21:31	◥	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has joined #rust
2016-12-28 14:22:21	◥	KeyboardFire (llama@moz-m5i.bhr.229.201.IP) has joined #rust
2016-12-28 14:22:58	◥	dowwie (quassel@moz-tvhqfu.fios.verizon.net) has joined #rust
2016-12-28 14:22:58	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2016-12-28 14:23:10	◥	meh (meh@moz-git.tcc.42.151.IP) has joined #rust
2016-12-28 14:24:02	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2016-12-28 14:24:57	Centril	Why is there no Add and Step implementation for char so that you can do:  for c in 'a' ... 'z' { ... } ?
2016-12-28 14:25:45	◣	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has quit (Ping timeout: 121 seconds)
2016-12-28 14:26:02	◣	raichoo (raichoo@moz-53o.knj.214.62.IP) has quit (Ping timeout: 121 seconds)
2016-12-28 14:26:13	raph	Centril: i'm guessing that skipping over surrogates would be tricky
2016-12-28 14:26:40	Centril	raph: makes sense, can you expand on that?
2016-12-28 14:26:57	raph	0xd000 .. 0xdfff are not valid unicode characters, and char can't be set to those values
2016-12-28 14:27:10	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2016-12-28 14:28:25	Centril	raph: right, but if you do  x + y and you land on an invalid char, can't you skip until the next valid one?
2016-12-28 14:28:52	raph	Centril: that would violate the expected algebraic properties of addition
2016-12-28 14:29:18	Centril	raph: specifically? commutativity, associativity, etc... ?
2016-12-28 14:29:36	raph	in the meantime, if you're just doing single-byte characters, b'a' ... b'z' works fine
2016-12-28 14:29:58	raph	(you can do `x as char` if x is u8; that can't fail)
2016-12-28 14:30:00	◥	Frooxius (Frooxius@moz-9p9.3v6.127.79.IP) has joined #rust
2016-12-28 14:30:28	raph	Centril: sure, take 0xcfff + 1 + 2 vs 0xcfff + 2 + 1
2016-12-28 14:30:30	◥	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2016-12-28 14:30:37	◥	rschiffl1n (randy@moz-ddf6l4.lv.cox.net) has joined #rust
2016-12-28 14:30:38	Centril	raph: yeah, I know, I was helping a friend, but I wanted to explain why you can't do it ;)
2016-12-28 14:30:49	raph	now you know :)
2016-12-28 14:31:07	Centril	and he will too ^^ thanks
2016-12-28 14:31:08	◣	jedahan (jedahan@moz-vof6g1.c02t.4vnb.067c.2001.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-28 14:32:11	◥	dhole_ (dhole@moz-84ftmg.dynamic.jazztel.es) has joined #rust
2016-12-28 14:32:23	◥	sobol (steve@moz-1op8i8.gps.caltech.edu) has joined #rust
2016-12-28 14:33:20	◥	srwalker101 (srwalker101@moz-mbc.c2v.84.91.IP) has joined #rust
2016-12-28 14:33:28	talchas	raph: no, you /could/ do it
2016-12-28 14:33:34	talchas	until you cast it out of a char
2016-12-28 14:34:13	Centril	so  0xcfff + 1 + 2 == nextvalid(nextvalid(0xd000) + 2)
2016-12-28 14:34:26	◣	dhole (dhole@moz-pvecft.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2016-12-28 14:34:58	j_ey	WindowsBunnyFlauschigeKaninchen: seems like you meant rustfmt cant format inside of a macro call
2016-12-28 14:35:07	j_ey	Thought you meant the macro itself
2016-12-28 14:35:57	talchas	they're different types, so full commutativity is out (if you're including char - char -> int), but associativity would still be there
2016-12-28 14:36:01	raph	talchas: hm? i was being a little loose with syntax, i meant char::from_u32(0xcfff).unwrap() and friends
2016-12-28 14:36:10	talchas	raph: ah, then yeah
2016-12-28 14:36:31	raph	Centril: nothing would prevent you from implementing a nextvalid() function for char
2016-12-28 14:36:31	Centril	raph, talchas: so, the procedure: cast char x, y as u32s, add them, until invalid => + 1 ?
2016-12-28 14:36:39	talchas	char::from_u32(0xcfff + 1)  would not == char::from_u32(0xcfff)  + 1
2016-12-28 14:37:13	◥	larkham (larkham@moz-v8lngu.jmn5.6qaa.2788.2a02.IP) has joined #rust
2016-12-28 14:37:15	◣	dm3 (dm3@moz-cf5td7.elekta.lt) has quit (Connection closed)
2016-12-28 14:37:38	◥	dm3 (dm3@moz-cf5td7.elekta.lt) has joined #rust
2016-12-28 14:37:53	talchas	(but char::from_u32(0xcfff)  + 1 + 2 would ==  char::from_u32(0xcfff)  + 2 + 1, which is what I was thinking you were saying)
2016-12-28 14:38:39	◣	rschiffl1n (randy@moz-ddf6l4.lv.cox.net) has quit (Ping timeout: 121 seconds)
2016-12-28 14:38:43	◥	sigma (sigma@moz-9epccp.cable.virginm.net) has joined #rust
2016-12-28 14:39:10	◣	mskalski (mskalski@moz-odbcj6.opt.im) has quit (Quit: Leaving...)
2016-12-28 14:39:13	Centril	talchas: is commutativity needed for Add & Step ?
2016-12-28 14:40:00	raph	Centril: it's expected for Add, maybe you could get away without it for Step
2016-12-28 14:40:21	epimorph	Centril: it's not required for Add (consider String).
2016-12-28 14:40:25	◣	walter (walter@moz-glm69e.ma.comcast.net) has quit (Connection closed)
2016-12-28 14:40:39	raph	oh right, add needs associativity
2016-12-28 14:41:11	Centril	raph: so a monoid, but not necessarily a commutative monoid
2016-12-28 14:41:12	raph	in theory one could define ... for char; you absolutely could write one yourself
2016-12-28 14:41:19	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2016-12-28 14:41:24	◣	mazniak (mazniak@moz-qi2pou.res.bhn.net) has quit (Quit: Leaving...)
2016-12-28 14:41:40	◣	dm3 (dm3@moz-cf5td7.elekta.lt) has quit (Ping timeout: 121 seconds)
2016-12-28 14:42:05	Centril	should it/not be added to std ?
2016-12-28 14:42:48	raph	what would you use it for?
2016-12-28 14:42:48	raph	seems pretty specialized to me
2016-12-28 14:42:55	Centril	iterating on char ranges mostly I guess
2016-12-28 14:43:01	◣	jdm (jdm@moz-hdva7h.cpe.teksavvy.com) has quit (Quit: )
2016-12-28 14:43:07	raph	i mean, why do you need to do that?
2016-12-28 14:43:11	Centril	yeah, it's quite a niche and specialized use case
2016-12-28 14:43:41	Centril	raph: the only thing I can think of: print out a table of all unicode characters
2016-12-28 14:43:41	raph	yeah, imho doesn't belong in language or stdlib
2016-12-28 14:43:49	Centril	i.e: a silly use case
2016-12-28 14:44:02	◥	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has joined #rust
2016-12-28 14:44:05	raph	Centril: which is not exactly a thing, i mean the definition of what's a "valid" unicode "character" is complex
2016-12-28 14:44:38	◣	splitty_ (Splitty@moz-rop.f9r.75.109.IP) has quit (Ping timeout: 121 seconds)
2016-12-28 14:45:15	◣	sigma (sigma@moz-9epccp.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2016-12-28 14:45:19	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2016-12-28 14:45:20	raph	i mean, u+ffff is a noncharacter, do you want that?
2016-12-28 14:45:29	◣	dave_ (dave@moz-t7r.7k1.236.104.IP) has left #rust
2016-12-28 14:45:29	◥	splitty_ (Splitty@moz-rop.f9r.75.109.IP) has joined #rust
2016-12-28 14:46:05	◥	montanonic (nicholas@moz-u3evs7.or.comcast.net) has joined #rust
2016-12-28 14:46:39	Centril	raph: isn't it [ c | x <- [U32_MIN, U32_MAX], let Some(c) = char::from_u32(x) ]  ?
2016-12-28 14:47:14	Centril	raph: if it exists in the unicode table, it's valid I guess
2016-12-28 14:47:16	raph	Centril: that's one possible definition, it gets you all valid code points
2016-12-28 14:47:24	raph	including the noncharacters :)
2016-12-28 14:47:42	Centril	raph: but you can add those non-characters in a String, no?
2016-12-28 14:47:57	◣	ville (ville@moz-3jdbqc.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2016-12-28 14:48:13	raph	yes, that's the definition of what String can hold
2016-12-28 14:48:28	raph	but you said _print_ them, which i don't think you want to do :)_
2016-12-28 14:48:34	Centril	Right =)
2016-12-28 14:48:44	◣	srwalker101 (srwalker101@moz-mbc.c2v.84.91.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-28 14:48:45	Centril	it's quite useless to do that, obviously ;)
2016-12-28 14:49:11	◥	mskalski (mskalski@moz-odbcj6.opt.im) has joined #rust
2016-12-28 14:49:19	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2016-12-28 14:49:40	◣	Jackneill (Jackneill@moz-i83i74.pool.digikabel.hu) has quit (Connection closed)
2016-12-28 14:50:00	◥	ville (ville@moz-6phunk.bb.dnainternet.fi) has joined #rust
2016-12-28 14:50:07	Centril	raph: devils advocate: use filter() on the iterator to keep only printable stuff
2016-12-28 14:50:24	raph	all of that stuff belongs in unicode utility libs imho
2016-12-28 14:50:30	◥	jedahan (jedahan@moz-io2c4c.c02t.4vnb.067c.2001.IP) has joined #rust
2016-12-28 14:50:41	Centril	agreed
2016-12-28 14:51:07	Centril	anyways, using 'a' ... 'a'.contains('c')  or indirectly via match blocks is far more useful
2016-12-28 14:51:17	Centril	and that, you can do
2016-12-28 14:51:52	◥	rschiffl1n (randy@moz-ddf6l4.lv.cox.net) has joined #rust
2016-12-28 14:51:58	◣	jedahan (jedahan@moz-io2c4c.c02t.4vnb.067c.2001.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2016-12-28 14:52:05	raph	yes, "contains" doesn't have any of the algebraic problems
2016-12-28 14:53:32	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2016-12-28 14:53:35	◣	LLBlumire (LLBlumire@moz-9so9ji.range165-120.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2016-12-28 14:53:35	⚡	LLBlumire1 is now known as LLBlumire
2016-12-28 14:54:35	◣	pengowen (Mibbit@moz-1msp9g.client.mchsi.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2016-12-28 14:54:53	◣	lakin (lakin@moz-37rktg.abhsia.telus.net) has quit (Quit: leaving)
2016-12-28 14:54:58	◣	cmyr (cmyr@moz-jfi.fqr.252.162.IP) has quit (Client exited)
2016-12-28 14:55:49	◥	bill`` (bill@moz-mo38qm.ca.comcast.net) has joined #rust
2016-12-28 14:57:01	◥	srwalker101 (srwalker101@moz-mbc.c2v.84.91.IP) has joined #rust
2016-12-28 14:57:06	◥	jedahan (jedahan@moz-4ng.fng.217.151.IP) has joined #rust
2016-12-28 14:57:35	◥	timg___ (timg___@moz-8986e9.dip0.t-ipconnect.de) has joined #rust
2016-12-28 14:58:03	◣	cynicaldevil (uid126068@moz-3m708d.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2016-12-28 14:58:03	◣	mcoffin (mcoffin@moz-svavrd.ga.charter.com) has quit (Quit: leaving)
2016-12-28 14:59:20	◥	mcoffin (mcoffin@moz-gbdt46.ga.charter.com) has joined #rust
2016-12-28 15:00:17	◣	srwalker101 (srwalker101@moz-mbc.c2v.84.91.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-28 15:01:51	◣	dranov (George@moz-5jo24u.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2016-12-28 15:02:23	◣	sgflt (sgflt@moz-60d.d1b.217.151.IP) has quit (Ping timeout: 121 seconds)
2016-12-28 15:02:36	◥	sigma (sigma@moz-v7r.it7.249.89.IP) has joined #rust
2016-12-28 15:04:00	◥	dranov (George@moz-5jo24u.cable.virginm.net) has joined #rust
2016-12-28 15:04:38	◣	handyman (handyman@moz-kv86bo.subp.5lka.0645.2601.IP) has quit (A TLS packet with unexpected length was received.)
2016-12-28 15:05:05	◥	handyman (handyman@moz-kv86bo.subp.5lka.0645.2601.IP) has joined #rust
2016-12-28 15:05:05	fgs	 /win 13
2016-12-28 15:05:06	◣	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has quit (Connection closed)
2016-12-28 15:05:09	fgs	sorry
2016-12-28 15:05:30	◥	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has joined #rust
2017-01-03 12:56:30	◥	d8v3 (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-03 12:56:30	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-03 12:56:30	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-03 12:56:30	⚡	Channel #rust: 1328 nicks (18 ops, 0 halfops, 2 voices, 1308 normals)
2017-01-03 12:56:32	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-03 12:56:46	⚡	You are now known as boon
2017-01-03 12:56:56	Centril	I've been following "This week in Rust" for like 1 year, but compiler internals I'm entirely oblivious to
2017-01-03 12:57:24	◣	phil-opp (phil-opp@moz-o7uu84.6rg8.bbcb.1398.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 12:57:34	◣	talchas (user@moz-i75sak.ca.comcast.net) has left #rust ("ERC (IRC client for Emacs 24.5.1)")
2017-01-03 12:57:38	◥	talchas (user@moz-i75sak.ca.comcast.net) has joined #rust
2017-01-03 12:57:50	pedrocr	apparently if you generate too big of a struct you will crash the stack
2017-01-03 12:57:55	pedrocr	and rust lets you do it...
2017-01-03 12:57:58	pedrocr	seems pretty unsafe
2017-01-03 12:58:15	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 12:58:59	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-03 12:59:19	ubsan	pedrocr: it's not unsafe
2017-01-03 12:59:22	ubsan	pedrocr: it just crashes
2017-01-03 12:59:25	ubsan	crashes are safe
2017-01-03 12:59:26	Ploppz	What happens if you call UdpSocket::recv_from and there is no packet? Err or size=0?
2017-01-03 12:59:49	m4b	ubsan: on linux it will typically segfault
2017-01-03 13:00:00	ubsan	m4b: right
2017-01-03 13:00:13	_habnabit	Ploppz, blocks until there's a packet or immediately returns an error, depending on what flags you've set
2017-01-03 13:00:13	ubsan	m4b: segfaults are safe
2017-01-03 13:00:13	m4b	agreed
2017-01-03 13:00:17	ubsan	m4b: if you don't segfault, that's an issue :P
2017-01-03 13:00:18	rkruppe	pedrocr: ubsan: well for lack of stack probes, a stack overflow *can* overwrite memory outside the stack and not segfault
2017-01-03 13:00:25	rkruppe	but that's a bug
2017-01-03 13:00:30	ubsan	yep
2017-01-03 13:00:40	◥	Akien_ (akien@moz-gd94u9.dyn.telefonica.de) has joined #rust
2017-01-03 13:00:46	◥	chc4 (chc4@moz-gepq9d.ma.comcast.net) has joined #rust
2017-01-03 13:00:51	hexagoxel	is the a common name for a variant whose only purpose is to serve as temporary "filler" (using mem::replacing twice) to work around borrow scoping problems?
2017-01-03 13:00:51	Ploppz	_habnabit: where do I set flags?
2017-01-03 13:01:02	◥	arroyoc (Thunderbird@moz-09j.b3d.136.46.IP) has joined #rust
2017-01-03 13:01:03	_habnabit	hexagoxel, Option::None
2017-01-03 13:03:27	◣	gunther (Mibbit@moz-h1lmbb.tbcn.telia.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-03 13:03:34	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-03 13:03:36	◥	Callaghan (Callaghan@moz-ar4je2.highway.telekom.at) has joined #rust
2017-01-03 13:03:40	hexagoxel	_habnabit: and if i don't like algebraic blindness?
2017-01-03 13:04:20	◣	Douman (Douman@moz-j80o9k.dynamic.mts-nn.ru) has quit (Quit: )
2017-01-03 13:04:42	▷	stephaneyfx googles "algebraic blindness"
2017-01-03 13:05:07	◥	zeryx (zeryx@moz-6k5tsq.ns.bellaliant.net) has joined #rust
2017-01-03 13:05:07	◣	zeryx (zeryx@moz-6k5tsq.ns.bellaliant.net) has quit (Connection closed)
2017-01-03 13:05:20	_habnabit	hexagoxel, i guess i've never seen value in having a dummy variant that i have to check for all the time instead of pushing it up a level into Option
2017-01-03 13:05:46	◣	chc4 (chc4@moz-gepq9d.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-03 13:05:46	Fylwind	src/librustc_trans/abi.rs:371: argument to function with "rust-call" ABI is not a tuple /sadface
2017-01-03 13:06:03	◥	martianwars (uid124042@moz-1flne0.brockwell.irccloud.com) has joined #rust
2017-01-03 13:06:05	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:06:09	▷	hexagoxel tries to find the chapter in the style guide where it recommends against using Options when they have a specific meaning.
2017-01-03 13:06:10	Ploppz	oh, set_nonblocking apparently
2017-01-03 13:07:12	◣	jseyfried (jeffrey@moz-199.44g.58.172.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:07:12	⚡	Binero_ is now known as Binero
2017-01-03 13:07:14	hexagoxel	ah, https://doc.rust-lang.org/1.12.0/style/features/types/README.html
2017-01-03 13:07:16	◥	ShadowIce_ (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-03 13:08:08	stephaneyfx	hexagoxel, this is mostly about bool
2017-01-03 13:08:18	gretchen	given a *const u8 and a known length, how can I turn that into a &[u8] ?
2017-01-03 13:09:01	_habnabit	gretchen, there's a slice from_raw_parts but careful you don't pass a null *const u8
2017-01-03 13:09:10	hexagoxel	stephaneyfx: also, https://github.com/quchen/articles/blob/master/algebraic-blindness.md
2017-01-03 13:09:24	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-03 13:09:24	stephaneyfx	hexagoxel, thanks
2017-01-03 13:09:28	◥	compressed (chris@moz-v3m6av.fios.verizon.net) has joined #rust
2017-01-03 13:10:37	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-03 13:10:40	stephaneyfx	hexagoxel, just skimmed through it but again the focus seems to be on bool
2017-01-03 13:11:26	_habnabit	note: specify the type using the syntax `<[type error] as Trait>::PluginLoader`
2017-01-03 13:11:29	_habnabit	that's a new one
2017-01-03 13:11:58	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2017-01-03 13:11:59	compressed	is there a way to tell some files in examples/* not to run if a given feature flag isn’t present? I tried putting `#![cfg(not(feature=“my_feat”))]` at the top of the example’s file, but then that gives me `main function not found` when I do `cargo test`… Ideally I’d like some files to be skipped entirely
2017-01-03 13:12:24	hexagoxel	in the paragraph about boolean blindness, sure :) but the "blindness" concept makes sense in a more general form, as detailed below.
2017-01-03 13:12:52	Fylwind	oh … figure out why the compiler was ICEing: apparently the error was because Fn* traits require tuples even for single-argument functions, so you have to do Fn<(Arg1,)> instead of Fn<Arg1>
2017-01-03 13:13:00	Fylwind	s/figure/figured/
2017-01-03 13:13:11	stephaneyfx	hexagoxel, yes, in generic types containing bool
2017-01-03 13:13:45	◣	Brochacho (Brochacho@moz-sqjals.il.comcast.net) has quit (Client exited)
2017-01-03 13:13:57	hexagoxel	Option<T> "contains" bool? Either<A,B> does too?
2017-01-03 13:13:59	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-03 13:14:13	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2017-01-03 13:14:35	stephaneyfx	hexagoxel, where? your link is about haskell
2017-01-03 13:15:08	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2017-01-03 13:15:20	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2017-01-03 13:15:22	◣	coaster (coaster@moz-dlbjbd.dip0.t-ipconnect.de) has quit (Client exited)
2017-01-03 13:15:29	stephaneyfx	hexagoxel, they're just saying Maybe a is at least as blind as a
2017-01-03 13:15:43	stephaneyfx	hexagoxel, that's doesn't make Maybe bad in itself
2017-01-03 13:15:51	stephaneyfx	that*
2017-01-03 13:16:03	hexagoxel	"Maybe a is as blind as a, plus one value."
2017-01-03 13:16:15	hexagoxel	cant just cut off the last part
2017-01-03 13:16:33	stephaneyfx	hexagoxel, i didn't cut it. don't you know what "at least" means?
2017-01-03 13:16:52	hexagoxel	sorry, i did not even intend to start a discussion about blindness.
2017-01-03 13:17:10	◣	arroyoc (Thunderbird@moz-09j.b3d.136.46.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:17:37	◣	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has quit (Connection closed)
2017-01-03 13:17:38	◥	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has joined #rust
2017-01-03 13:17:41	◣	schets (Mibbit@moz-v1tvr4.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-03 13:17:55	hexagoxel	stephaneyfx: that kind of reply is not constructive, i will stop here.
2017-01-03 13:17:58	stephaneyfx	hexagoxel, anyway types besides bool can me misused/misguiding for sure. i think it just needs some common sense and thought
2017-01-03 13:18:19	stephaneyfx	hexagoxel, sorry, i didn't mean to sound harsh
2017-01-03 13:18:22	◣	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has quit (Connection closed)
2017-01-03 13:18:23	◥	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has joined #rust
2017-01-03 13:18:56	◣	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has quit (Connection closed)
2017-01-03 13:19:12	◣	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has quit (Ping timeout: 121 seconds)
2017-01-03 13:19:13	◣	vandenoever (oever@moz-8onu2e.adsl-surfen.hetnet.nl) has quit (Quit: ䷴៚)
2017-01-03 13:19:16	◥	oever (oever@moz-8onu2e.adsl-surfen.hetnet.nl) has joined #rust
2017-01-03 13:19:27	◥	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has joined #rust
2017-01-03 13:19:31	hexagoxel	ok, all good :)
2017-01-03 13:20:01	◣	mcoffin (mcoffin@moz-gbdt46.ga.charter.com) has quit (Ping timeout: 121 seconds)
2017-01-03 13:20:17	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-03 13:22:21	stephaneyfx	hexagoxel, if you have a short example on the playground, we could see if Option is appropriate in your case
2017-01-03 13:22:21	◣	djcb (user@moz-nut283.elisa-mobile.fi) has quit (Connection closed)
2017-01-03 13:22:24	hexagoxel	(also sorry if my "cant just cut off" sounded harsh)
2017-01-03 13:22:35	◥	manuel_ (manuel@moz-44m.14s.6.209.IP) has joined #rust
2017-01-03 13:23:15	stephaneyfx	hexagoxel, it's alright. reading back, my reply was too harsh.
2017-01-03 13:23:29	◣	fyolnish (fyolnish@moz-r64h1q.so-net.ne.jp) has quit (Ping timeout: 121 seconds)
2017-01-03 13:24:03	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-03 13:24:09	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-03 13:24:30	◥	jseyfried (jeffrey@moz-f306oc.buj0.ie58.0306.2602.IP) has joined #rust
2017-01-03 13:24:39	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2017-01-03 13:24:55	◣	streblo (streblo@moz-6g2tqo.or3h.o3t5.0186.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 13:25:23	◥	wallacoloo____ (colin@moz-tvseqg.tukw.qwest.net) has joined #rust
2017-01-03 13:25:25	⚡	oever is now known as vandenoever
2017-01-03 13:25:29	◥	emilk (emilk@moz-segdev.cust.bredbandsbolaget.se) has joined #rust
2017-01-03 13:26:02	◥	jsgf (jsgf@moz-183.9o0.201.199.IP) has joined #rust
2017-01-03 13:26:40	◥	mcoffin (mcoffin@moz-gbdt46.ga.charter.com) has joined #rust
2017-01-03 13:26:51	⚡	bholley_away is now known as bholley
2017-01-03 13:27:49	epimorph	is there a less verbose wrapper for Seek::seek()?
2017-01-03 13:28:11	◥	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has joined #rust
2017-01-03 13:28:14	◣	walter (walter@moz-glm69e.ma.comcast.net) has quit (Connection closed)
2017-01-03 13:28:31	◥	makoLume (mako@moz-rmueac.flip.co.nz) has joined #rust
2017-01-03 13:29:07	◣	slomo (slomo@moz-cr5.9m0.117.188.IP) has quit (Quit: Leaving)
2017-01-03 13:29:14	◣	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161213225203])
2017-01-03 13:29:34	◣	emilk (emilk@moz-segdev.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2017-01-03 13:29:52	&mbrubeck	epimorph: I haven't seen one, but you could write one pretty easily...
2017-01-03 13:30:14	epimorph	mbrubeck: sure, i'd just prefer a standard one if it existed.
2017-01-03 13:31:51	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-03 13:32:26	◣	philippTheCat (philipp@moz-q8cl48.3f7q.38k9.aa13.2a02.IP) has quit (Connection closed)
2017-01-03 13:32:38	◣	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has quit (Quit: WeeChat 1.6)
2017-01-03 13:32:47	◥	ParadoxSpiral (ParadoxSpir@moz-8tm2as.8m1p.nldu.0908.2a02.IP) has joined #rust
2017-01-03 13:32:57	◥	chc4 (chc4@moz-gepq9d.ma.comcast.net) has joined #rust
2017-01-03 13:33:19	◣	tyoc__ (tyoc@moz-64b0ua.iusacell.net) has quit (Quit: tyoc213.github.com)
2017-01-03 13:33:28	◥	tyoc213 (tyoc@moz-l5e.5lp.203.189.IP) has joined #rust
2017-01-03 13:33:29	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:34:07	◥	srwalker101 (srwalker101@moz-i5q.7te.223.2.IP) has joined #rust
2017-01-03 13:34:55	◥	arroyoc (Thunderbird@moz-09j.b3d.136.46.IP) has joined #rust
2017-01-03 13:36:33	jimb	ubsan: Calling `str::len(&string)` just loads the length directly from the `String`.
2017-01-03 13:36:47	ubsan	jimb: huh
2017-01-03 13:36:49	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2017-01-03 13:36:51	jimb	ubsan: In Stable Release ASM, https://is.gd/ZV8ivD
2017-01-03 13:36:55	jimb		movq	72(%rsp), %r12
2017-01-03 13:36:55	jimb		movq	80(%rsp), %rbx
2017-01-03 13:37:06	ubsan	jimb: I believe you
2017-01-03 13:37:08	jimb	The first movq is fetching the pointer, which it's going to use later for freeing
2017-01-03 13:37:10	jimb	lol okay
2017-01-03 13:37:28	jimb	the second is the length, which it stuffs into the Arguments for the format
2017-01-03 13:37:32	ubsan	jimb: what about between release and debug?
2017-01-03 13:37:42	jimb	Oh, I just always assume debug is HORRIBLE
2017-01-03 13:37:48	ubsan	lol
2017-01-03 13:37:58	ubsan	but the stdlib has to be written to be as fast as possible in debug mode
2017-01-03 13:39:02	jimb	ubsan: Are you sure that's a goal? I mean, without inlining, just structuring your code reasonably can cost a lot.
2017-01-03 13:39:33	ubsan	jimb: umm, yeah :P
2017-01-03 13:39:34	jimb	ubsan: There was a bug a while back when they found that dropping a Vec<u8> in debug mode actually ran an empty drop on every u8 in the Vec.
2017-01-03 13:39:40	◥	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2017-01-03 13:39:42	ubsan	jimb: rust wants to be as fast as possible
2017-01-03 13:39:47	◥	epequeno (steven@moz-aqt.8oq.213.134.IP) has joined #rust
2017-01-03 13:39:48	ubsan	even if you aren't using release mode
2017-01-03 13:40:16	jimb	ubsan: I don't think that's the only cost in play here.
2017-01-03 13:40:28	ubsan	jimb: but it is one cost
2017-01-03 13:40:32	ubsan	that's easily made smaller
2017-01-03 13:40:33	jimb	sure thing, we agree
2017-01-03 13:41:03	jimb	Well, whether duplicating methods to avoid a Deref is "easy" or not is exactly what I'm questioning.
2017-01-03 13:41:35	jimb	I would say that duplicating code from str into String to avoid the cost of Deref in Debug builds is not an easy call to make.
2017-01-03 13:41:49	jimb	Am I correct in understanding that you think it should definitely be done?
2017-01-03 13:41:50	◥	nicoch (nicoch@moz-ubpbp2.2utt.76f9.0e34.2a01.IP) has joined #rust
2017-01-03 13:42:30	ubsan	no
2017-01-03 13:42:49	jimb	okay, sorry
2017-01-03 13:42:50	ubsan	I'm just giving the reasoning lol
2017-01-03 13:42:50	◥	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has joined #rust
2017-01-03 13:43:01	⚡	mrbkap|pto is now known as mrbkap
2017-01-03 13:43:05	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:43:31	◥	makoLime (mako@moz-o2p8h1.flip.co.nz) has joined #rust
2017-01-03 13:44:01	◣	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has quit (Quit: http://radiux.io/)
2017-01-03 13:44:58	◥	gavin (gavin@irc.mozilla.org) has joined #rust
2017-01-03 13:45:03	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-03 13:45:50	◥	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has joined #rust
2017-01-03 13:45:52	◣	makoLume (mako@moz-rmueac.flip.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-03 13:45:53	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-03 13:46:03	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-03 13:47:08	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-03 13:47:29	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Quit: Leaving)
2017-01-03 13:49:17	◣	gavin (gavin@irc.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-03 13:50:34	◥	wilfredh (user@moz-lafa9m.cable.virginm.net) has joined #rust
2017-01-03 13:50:46	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (Quit: Leaving)
2017-01-03 13:50:53	whitequark	jimb: oh hey i fixed that one (Vec<u8> drop)
2017-01-03 13:50:57	whitequark	surprised no one got it first
2017-01-03 13:51:26	jimb	whitequark: Right, and if I recall, acrichto wasn't even sure it should be done?
2017-01-03 13:51:30	◣	pengowen (Mibbit@moz-006ten.phnx.qwest.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-03 13:51:32	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2017-01-03 13:51:38	whitequark	yeah
2017-01-03 13:52:10	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2017-01-03 13:53:09	◣	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:53:44	◥	ttdonovan (ttdonovan@moz-l04.bae.185.208.IP) has joined #rust
2017-01-03 13:55:13	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-03 13:55:16	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-03 13:55:18	◣	Phrohdoh (Phrohdoh@moz-nv0.v7o.34.66.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-03 13:55:27	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2017-01-03 13:55:53	pedrocr	ubsan: makes sense, just wasn't used to seeing a rust program crash
2017-01-03 13:56:00	◣	jseyfried (jeffrey@moz-f306oc.buj0.ie58.0306.2602.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 13:56:07	meh	is there a reason {Stdin, Stdout} don't implement AsRawFd?
2017-01-03 13:56:09	pedrocr	so in MMU-less situations rust is unsafe?
2017-01-03 13:56:21	whitequark	pedrocr: MPU-less, yes
2017-01-03 13:56:28	◥	arcresu (arcresu@moz-m8qo83.tpgi.com.au) has joined #rust
2017-01-03 13:56:28	whitequark	I have a patch in queue that fixes that
2017-01-03 13:56:33	◣	xpe (textual@moz-1ko1nj.ei8p.t9hi.0644.2601.IP) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2017-01-03 13:56:38	supercurio	bye guys, I'll come back with a real IRC client :P
2017-01-03 13:56:41	◣	supercurio (Mibbit@moz-khkdde.cust.bredbandsbolaget.se) has quit (Quit: Bye!)
2017-01-03 13:57:23	◥	makoLume (mako@moz-o2p8h1.flip.co.nz) has joined #rust
2017-01-03 13:57:25	◥	xpe (textual@moz-1ko1nj.ei8p.t9hi.0644.2601.IP) has joined #rust
2017-01-03 13:57:45	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-03 13:58:00	pedrocr	whitequark: MPU?
2017-01-03 13:58:12	whitequark	memory protection unit
2017-01-03 13:58:22	whitequark	you don't need to be able to remap pages to crash on access
2017-01-03 13:58:25	whitequark	s/crash/trap/
2017-01-03 13:58:30	pedrocr	memory management unit was the term I knew
2017-01-03 13:58:54	pedrocr	an MPU only does access control and not remapping?
2017-01-03 13:59:06	◣	kaljaman69 (kaljamies@moz-ramduc.60.citypartner.pl) has quit (Ping timeout: 121 seconds)
2017-01-03 13:59:25	whitequark	yes
2017-01-03 13:59:32	◥	ineol (textual@moz-47gclt.fmnc.b88b.0e35.2a01.IP) has joined #rust
2017-01-03 13:59:33	pedrocr	ok, never heard of it
2017-01-03 13:59:54	◣	makoLime (mako@moz-o2p8h1.flip.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-03 14:00:14	faern	I kind of guess this does not work, but I have to ask. I would like to create a trait that is generic over a trait bound. Let's take this example:   trait Protocol<PayloadBound> { fn build<P: PayloadBound>(payload: P) -> Packet };      This would make it possible for different implementers of Protocol to specify different bounds on the possible payload. Is something similar possible in any way?
2017-01-03 14:00:48	faern	Make it possible to vary the bound and still have monomorphization.
2017-01-03 14:01:24	Yatekii	hey guys, why is it complaining here: http://pastebin.com/BLTjayJh ? isn' it just moving ownership of thze Vec?
2017-01-03 14:01:35	◥	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2017-01-03 14:01:36	◥	hiberheim (Mibbit@moz-umu.82u.101.160.IP) has joined #rust
2017-01-03 14:01:36	◥	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has joined #rust
2017-01-03 14:01:36	◣	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has quit (Connection closed)
2017-01-03 14:01:52	talchas	Yatekii: self is likely &mut self or &self, yes?
2017-01-03 14:02:09	◥	kaljaman69 (kaljamies@moz-ramduc.60.citypartner.pl) has joined #rust
2017-01-03 14:02:15	Yatekii	talchas: ya, it's inside the next() of my iterator
2017-01-03 14:02:19	Yatekii	so it is &mut self
2017-01-03 14:02:27	faern	Yatekii: Then you can't take ownership of the stuff inside self
2017-01-03 14:02:43	◥	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has joined #rust
2017-01-03 14:02:58	Yatekii	ahhhhhh can I even do a single bit in this language ... ffs I'm goin crazy
2017-01-03 14:03:17	◥	mchang (mchang@moz-786mcj.res.rr.com) has joined #rust
2017-01-03 14:03:29	faern	Yatekii: Haha. I know it's frustrating in the beginning. But yes, you can do a lot
2017-01-03 14:03:55	talchas	consider what you want the next call to next() to see in self.chunk
2017-01-03 14:04:24	Yatekii	talchas: idc ... it just creates a new instance ...
2017-01-03 14:04:42	◥	DroidLogician (cyber@moz-rbllem.ca.charter.com) has joined #rust
2017-01-03 14:04:42	faern	Yatekii: Every instance have exactly one owner. Who would you imagine being the owner of chunk after your code has executed? You could return a Some(&self.chunk) but then the return value would be bound by the lifetime of self.
2017-01-03 14:04:43	talchas	then why is it part of self at all?
2017-01-03 14:04:51	faern	talchas: if chunk is Clone or Copy, you can do that
2017-01-03 14:04:55	◣	nicoch (nicoch@moz-ubpbp2.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2017-01-03 14:05:40	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Connection closed)
2017-01-03 14:05:51	faern	 Err, Yatekii ^
2017-01-03 14:06:01	◥	dm3 (dm3@moz-rj6.7o9.61.78.IP) has joined #rust
2017-01-03 14:06:08	Yatekii	it is a simple vector ... 
2017-01-03 14:06:18	Yatekii	I just want to move ownership lol
2017-01-03 14:06:23	◣	mcoffin (mcoffin@moz-gbdt46.ga.charter.com) has quit (Ping timeout: 121 seconds)
2017-01-03 14:06:24	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-03 14:06:33	Yatekii	in c I would malloc the space and return the pointer. done ...
2017-01-03 14:06:34	faern	So one iteration in next() should consume the entire vector?
2017-01-03 14:06:48	hiberheim	So I have a Cargo binary project that references dylibs with extern blocks. I want to add a library and just use the binary as an example, but when I add the lib.rs in the same directory as main.rs I get " = note: Undefined symbols for architecture x86_64:" for every dylib call
2017-01-03 14:06:52	Yatekii	nah, the next() function fill sit up
2017-01-03 14:06:54	faern	So inside this next you want to clone the entire vector and return the clone?
2017-01-03 14:06:55	◥	eholk (eholk@moz-64vojk.q885.vk5s.0000.2620.IP) has joined #rust
2017-01-03 14:06:56	Yatekii	*fills it up
2017-01-03 14:07:02	◥	phil-opp (phil-opp@moz-o7uu84.6rg8.bbcb.1398.2a00.IP) has joined #rust
2017-01-03 14:07:14	talchas	Yatekii: if it doesn't need to be kept from one next() iteration to another, then don't store it in self
2017-01-03 14:07:17	◥	mcoffin (mcoffin@moz-gbdt46.ga.charter.com) has joined #rust
2017-01-03 14:07:43	Yatekii	talchas: uhm that might work
2017-01-03 14:07:58	Yatekii	faern: naj I just want to pass the owner ship back or say the pointer
2017-01-03 14:08:23	faern	Yatekii: So you want to return a Some containing the vector you are iterating over or just one element in it?
2017-01-03 14:08:35	talchas	if the idea is to reuse a single allocation for several next() calls, then it can't be owned by the Iterator struct (there is a slightly different definition of Iterator that at least sometimes can work, but has other downsides)
2017-01-03 14:08:47	talchas	(and so this definition of Iterator was chosen)
2017-01-03 14:08:47	Yatekii	faern: the vector
2017-01-03 14:08:53	◣	kaljaman69 (kaljamies@moz-ramduc.60.citypartner.pl) has quit (Quit: leaving)
2017-01-03 14:09:12	◥	emilk (emilk@moz-segdev.cust.bredbandsbolaget.se) has joined #rust
2017-01-03 14:09:34	faern	Yatekii: Ok. As I said, you can do Some(&self.chunk) but then the return value will be bound by the lifetime of self. That works if you want to borrow the vector to whoever is iterating over it.
2017-01-03 14:10:02	Yatekii	faern: being bound to self's lifetime is ok with me
2017-01-03 14:10:02	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-03 14:10:03	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:10:25	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-03 14:11:15	faern	Ok, try that. Note that this will then be a reference to the vector/slice, you will not return the ownership to the caller.
2017-01-03 14:11:24	Yatekii	also does the vectors lifetime end too if I assign self.chunk a new Vector instance?
2017-01-03 14:11:25	Yatekii	yap :)
2017-01-03 14:11:38	faern	If you overwrite self.chunk then that vector will be deallocated yes. The compiler won't allow you to do that in any place where a returned Some(&self.chunk) might be in scope still.
2017-01-03 14:11:46	faern	To protect you from having a reference to freed memory.
2017-01-03 14:12:03	Yatekii	but I still don't understand why I cannot transfer ownership :( it would be so simple telling it by whom the pointer is now owned ...
2017-01-03 14:12:13	faern	"Overwrite" as in self.chunk = vec![];, not as in changing the values inside it
2017-01-03 14:12:45	Yatekii	ofc :)
2017-01-03 14:12:48	epimorph	Yatekii: you can, with Box. you just can't transfer ownership of something you don't own.
2017-01-03 14:12:54	faern	Yatekii: Because you don't own self. Inside next() you only have a reference to &self, thus you don't have the mandate to transfer ownership of stuff in self.
2017-01-03 14:13:06	Yatekii	well I own the vector inside buffer
2017-01-03 14:13:09	Yatekii	it's owned by self
2017-01-03 14:13:18	Yatekii	now I want to pass owenership to the outside ...
2017-01-03 14:13:18	faern	but you don't own self.
2017-01-03 14:13:21	faern	Not inside next()
2017-01-03 14:13:26	Yatekii	ohhhh
2017-01-03 14:13:28	faern	Since you have &self
2017-01-03 14:13:34	Yatekii	now I get it
2017-01-03 14:13:42	Yatekii	wow this is so difficult
2017-01-03 14:13:44	faern	:)
2017-01-03 14:13:52	talchas	so you have to provide a replacement, and can use std::mem::replace for that
2017-01-03 14:14:28	talchas	(and if you're always doing this, you may want to just not have it part of self at all and allocate the Vec as a local in next())
2017-01-03 14:14:40	Yatekii	hmm I guess I do a box of vector with is then passed to the outside
2017-01-03 14:15:23	Yatekii	then I do not hav eto use ugly hacks and I avoid the values being copied
2017-01-03 14:15:32	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-03 14:16:19	faern	Hard to give advice without more context. But you could also store chunk in an Option. In that way you can do self.chunk.take() to replace self.chunk with None and take ownership of chunk.
2017-01-03 14:16:52	jimb	Option::take <3
2017-01-03 14:16:52	Yatekii	hmm
2017-01-03 14:17:20	faern	take() would of course only yield the chunk once, because after that self.chunk will be None.
2017-01-03 14:17:25	Yatekii	faern: I am iterating over a file and calculate the rolling hash of the bytes. when a chunk is detected I pass it to the otside
2017-01-03 14:17:44	Yatekii	because it can be several GB it would be dumb to copy the values multiple times
2017-01-03 14:17:45	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 14:17:48	Yatekii	so I'd like to avoid that
2017-01-03 14:17:57	faern	Yes.
2017-01-03 14:18:10	jimb	Yatekii: So your iterator's Items are chunks?
2017-01-03 14:18:11	◣	Ferreus (ferreus@moz-io44b3.hh50.4lve.2028.2a02.IP) has quit (Quit: WeeChat 1.6)
2017-01-03 14:18:12	faern	So different chunks overlap with each other?
2017-01-03 14:18:32	faern	Just pass a borrowed slice of the vector to your hashing function?
2017-01-03 14:18:37	◣	xpe (textual@moz-1ko1nj.ei8p.t9hi.0644.2601.IP) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2017-01-03 14:18:40	Yatekii	I have a working version which has different issues, so I try sth different (it's just a project to learn rust, nothing serious, but I would like to have the best solution, not some  glued junk)
2017-01-03 14:18:52	Yatekii	jimb: exactly
2017-01-03 14:19:10	Yatekii	faern: nope, that'^s the trick of the entire business :P they dont overlap :)
2017-01-03 14:19:43	jimb	Yatekii: You're using the rolling checksum to break the file into chunks that are likely to have already been seen elsewhere in other files with matching text?
2017-01-03 14:19:51	Yatekii	well ok, 1. my hashing function is inside next() (it decides when a chunk ends)
2017-01-03 14:20:32	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-03 14:20:35	Yatekii	2. I will have a second hash outside. but last time I then tried to iterate over my struct and use values of it inside the loop it complained about ownership issues
2017-01-03 14:20:48	Yatekii	wouldn't that be the same case if I passed down a borrowed slice?
2017-01-03 14:20:52	◣	phil-opp (phil-opp@moz-o7uu84.6rg8.bbcb.1398.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:21:15	Yatekii	jimb: exactly
2017-01-03 14:21:19	gretchen	How can I store a list of these in a vec?  https://is.gd/8CKSuG
2017-01-03 14:21:23	◥	dm3 (dm3@moz-rj6.7o9.61.78.IP) has joined #rust
2017-01-03 14:21:29	◥	chel (chel@moz-38vjjf.capstonetechnology.com) has joined #rust
2017-01-03 14:21:42	gretchen	if I pass in a different function for F, I get mismatched types
2017-01-03 14:21:48	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2017-01-03 14:22:12	talchas	gretchen: Command<Box<Fn(...) -> ...>>
2017-01-03 14:22:46	◣	hansaplast (hansaplast@moz-7v4sej.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2017-01-03 14:22:53	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Quit: Leaving...)
2017-01-03 14:22:55	◥	ineol_ (textual@moz-r9rif1.fmnc.b88b.0e35.2a01.IP) has joined #rust
2017-01-03 14:22:55	faern	Yatekii: So chunks can be of different size?
2017-01-03 14:23:02	◣	hardenedapple (hardenedapp@moz-ckqh3b.dsl.pipex.com) has quit (Quit: WeeChat 1.6)
2017-01-03 14:23:08	Yatekii	faern: yap :)
2017-01-03 14:23:36	Ralith	or fn(...) -> ... if you don't need closures
2017-01-03 14:23:39	Yatekii	bahhh i feel so noob ... I work on this since days ... in python it was 15mins ... XD
2017-01-03 14:23:47	faern	Yatekii: I would probably allocate a buffer large enough to (likely) hold the largest chunk and then start reading the file into that buffer. As soon as you find the end of a chunk you hash what you have. Then you copy whatever was left in the buffer read from the file but not hashed to the start and continue to read the file
2017-01-03 14:23:58	gretchen	talchas: could I do it using conservative_impl_trait?
2017-01-03 14:23:58	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-03 14:23:59	Yatekii	(ofc it was not too performant, but I am sure I would do it in ~same time in C :)
2017-01-03 14:23:59	◥	fyolnish (fyolnish@moz-jqsevj.ucom.ne.jp) has joined #rust
2017-01-03 14:24:21	◥	montanonic (nicholas@moz-8oe.qek.216.209.IP) has joined #rust
2017-01-03 14:24:27	◣	ineol (textual@moz-47gclt.fmnc.b88b.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:24:33	jimb	Yatekii: You can really appreciate the value of a garbage collector now, right? If you can live with GC, it makes life a lot easier.
2017-01-03 14:24:49	jimb	Everything just lives at least as long as it needs to.
2017-01-03 14:24:59	faern	Or, if your hash can iteratively digest bytes just have a fixed rather small buffer that you read into and continuously feed to the hash until you detect the end.
2017-01-03 14:25:00	Yatekii	faern: that's kind of what I do now, except that I push all values to a vector containing the chunk :)
2017-01-03 14:25:18	◣	Binero (Binero@moz-2gc2ul.isp.belgacom.be) has quit (Client exited)
2017-01-03 14:25:22	talchas	gretchen: no
2017-01-03 14:25:24	Yatekii	jimb: rust doesn'0t have a GC, no?
2017-01-03 14:25:43	talchas	if you want a heterogeneous vector, then you require trait objects at some point
2017-01-03 14:25:44	faern	Yatekii: You should not have to copy at all. Rust can read it to a buffer and then you can hash directly from there
2017-01-03 14:25:47	jimb	Yatekii: Right, I'm saying Rust is hard because it lacks one, and Python is easy because it has one.
2017-01-03 14:26:00	Yatekii	>><faern> Or, if your hash can iteratively digest bytes just have a fixed rather small buffer that you read into and continuously feed to the hash until you detect the end. that is what I do :)
2017-01-03 14:26:05	ngc0202	!paste
2017-01-03 14:26:05	+rustbot	Paste large text at https://paste.rs/, or code at https://play.rust-lang.org/ and shorten
2017-01-03 14:26:10	talchas	if you don't actually need the closure-ness, then you can save the Box by using fn() like Ralith mentioned
2017-01-03 14:26:11	◥	mindCrime (prhodes@moz-gsh24b.dyn6.twc.com) has joined #rust
2017-01-03 14:26:25	Yatekii	question is how excatly I return the chunk :) previously I returned a start and end pointer to the buffer array
2017-01-03 14:26:27	◥	tyoverby (tyoverby@moz-jkj.pe1.220.167.IP) has joined #rust
2017-01-03 14:26:35	faern	Yatekii: So your "return Some(self.chunk)" is for feeding to the hash?
2017-01-03 14:26:39	Yatekii	but that wont work since there is ownership issues
2017-01-03 14:26:56	faern	Yatekii: Why don't you just have the hasher in scope and do "hasher.digest(self.chunk)"
2017-01-03 14:27:06	faern	No need to return from next()?
2017-01-03 14:27:18	ngc0202	What's the best place to paste Rust with highlighting?
2017-01-03 14:27:24	Yatekii	faern: no that is after the hash was 0 on the lower 12 bits, I then return all read bytes since the last chunk ended as a new chunk
2017-01-03 14:27:53	◣	pseudo-sue (user@moz-epv.316.75.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:27:56	chel	so WindowsBunny, do you know of any existing projects to import COM typelibs into Rust, like what VC++ does with #import and .tlh/.tli files?
2017-01-03 14:28:10	m4b	does the tuple (T, U) have Default implimeneted if T and U do?
2017-01-03 14:28:16	_habnabit	m4b, yes
2017-01-03 14:28:21	◥	cmyr (cmyr@moz-to3mp4.158.electronicbox.net) has joined #rust
2017-01-03 14:28:21	faern	Yatekii: I think it would be easier if you provided more code.
2017-01-03 14:28:22	m4b	fancy
2017-01-03 14:28:28	gretchen	talchas: that doesn't seem to have improved matters, https://is.gd/VzFOYi
2017-01-03 14:28:36	Yatekii	jimb: ahh kk yeah well c doesnt have one either but would be easier, but only since I am more used to it ...
2017-01-03 14:28:37	gretchen	or unless you mean't  pub struct Command<F: Box<Fn(&Context, Vec<String>) -> RedisResult>>
2017-01-03 14:28:49	m4b	_habnabit: is it just hand impls for n-tuple up to n?
2017-01-03 14:28:52	faern	Yatekii: I don't fully understand if self.chunk is the start of the next chunk, everything read up until now or just the last part of a chunk.
2017-01-03 14:29:00	m4b	(macro hand impls)
2017-01-03 14:29:12	Yatekii	faern: no, self.chunk is a vector containing the entire chunk
2017-01-03 14:29:21	_habnabit	m4b, think so. there's no generalization over tuples yet
2017-01-03 14:29:33	jimb	Yatekii: When you decide to return a chunk, the chunk always starts at the beginning of the data your iterator is holding, and ends some bounded distance from the end of that data, right?
2017-01-03 14:29:33	jimb	That is, it could be extremely long, but the tail that's part of the next chunk is just one read's worth, at most?
2017-01-03 14:29:36	faern	Yatekii: Why do you need to store the entire chunk at the same time? Just hash the part you got and overwrite that buffer with new file data
2017-01-03 14:29:40	Yatekii	faern: I will just use a Box :) will make stuff easy
2017-01-03 14:29:54	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2017-01-03 14:30:11	m4b	_habnabit: it's nice for small cases though; i thought for sure this code wasn't going to compile because i changed a generic param from T: Default to (U, T) in fn parameter
2017-01-03 14:30:34	Ploppz	again about UdpSocket::recv_from: If I set nonblocking mode first, what happens if there are no messages? Will I get an Err or will size = 0?
2017-01-03 14:30:36	◣	tyoverby (tyoverby@moz-jkj.pe1.220.167.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:30:46	Yatekii	jimb: well that would depend on the implementation I use :) right now, this is the case. I push all bytes I read to self.chunk and once I detect the chunks end I try to return self.chunk *SOMEHOW* :P
2017-01-03 14:30:48	◣	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has quit (Client exited)
2017-01-03 14:30:52	_habnabit	Ploppz, size=0 is only if the socket is closed on the remote end
2017-01-03 14:30:53	WindowsBunny	chel: There's nothing to automatically pull in COM
2017-01-03 14:30:54	◣	submersive (tburdick@moz-2if.9q9.106.38.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:30:58	_habnabit	Ploppz, you'll never get it in any other case
2017-01-03 14:31:06	faern	Yatekii: Just have a fixed buffer that you read the file into. After ever read operation you feed the buffer to the hasher and overwrite the buffer with more file data.
2017-01-03 14:31:08	WindowsBunny	chel: You have to manually port the interface definitions to Rust
2017-01-03 14:31:09	talchas	gretchen: oh right, ughh
2017-01-03 14:31:20	◣	Jesin (Jesin@moz-a58euv.fios.verizon.net) has quit (Quit: Leaving)
2017-01-03 14:31:23	Yatekii	faern: hashing is not the only part. I want to write that chunk to a file too etc. to have that properly modularized I try to separate parts
2017-01-03 14:31:33	faern	Yatekii: If you detect a chunk termination in the middle of a buffer you just hash up until that and start a new hasher with the remaining buffer.
2017-01-03 14:31:33	Yatekii	if I do a one file show everything would be way easier :)
2017-01-03 14:31:40	_habnabit	Ploppz, http://beej.us/guide/bgnet/
2017-01-03 14:32:02	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-03 14:32:10	faern	Yatekii: If you open the output file before starting to iterate and on chunk change you close it and open the next file you can stream through all chunks without having the entire chunks in memory
2017-01-03 14:32:11	talchas	they really should add that impl
2017-01-03 14:32:21	chel	WindowsBunny, does it sound like a feasible project, if I learn a helluva lot more Rust and a helluva lot more COM? ;)
2017-01-03 14:32:24	jimb	Yatekii: Okay, so I'd suggest: when you detect the end of a chunk, use Vec::split_off to get a new vector holding the tail that isn't part of that chunk, and remove that tail from your buffer; then use std::mem::swap to exchange the new tail vector with self.chunk, and then return the chunk.
2017-01-03 14:32:24	faern	so you always have an open file handle and a hasher that you feed the buffer into
2017-01-03 14:32:38	◥	Mermi (uid96745@moz-ltoie4.hathersage.irccloud.com) has joined #rust
2017-01-03 14:32:42	talchas	gretchen: if this is the primary use case of Command, I suggest just doing Command { ... handler: Box<Fn(...) -> ...> }
2017-01-03 14:32:54	WindowsBunny	chel: It is a possible project, although feasability depends on your level of willpower sanity and skill
2017-01-03 14:32:58	jimb	Yatekii: That way you copy at most the tail, and you hand over the buffer to next's caller, which is just a move, no copies or allocations.
2017-01-03 14:33:00	gretchen	talchas: ok thanks
2017-01-03 14:33:14	WindowsBunny	chel: Oh, apparently this crate has some sort of generator for winrt bindings https://github.com/contextfree/winrt-rust
2017-01-03 14:33:16	gretchen	talchas: what are the consequences of that? 
2017-01-03 14:33:24	gretchen	( performance wise etc )
2017-01-03 14:33:33	_habnabit	Ploppz, also the man pages are useful
2017-01-03 14:33:40	Yatekii	jimb: that sounds greap :)
2017-01-03 14:33:44	talchas	gretchen: it means you can't make a Command that doesn't have a virtual call
2017-01-03 14:33:50	chel	WindowsBunny, since this is COM stuff I'm guessing the lower sanity you have, the better :P
2017-01-03 14:34:07	talchas	but if you're only using Command for the lookup and such, then you'd need a virtual call anyways
2017-01-03 14:34:07	◣	gretchen (Mibbit@moz-djp8lq.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-03 14:34:13	WindowsBunny	chel: In winapi I just manually prot the COM interface like this https://github.com/retep998/winapi-rs/blob/dev/src/um/d3d11.rs#L2245-L2470
2017-01-03 14:34:17	◣	tromey (tromey@moz-hn05ml.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.90.2))
2017-01-03 14:34:20	WindowsBunny	*port
2017-01-03 14:34:49	chel	WindowsBunny, thanks, this is good stuff to look at!
2017-01-03 14:34:50	WindowsBunny	It's fairly sane to actually use those interfaces. It's just tedious doing the porting by hand.
2017-01-03 14:34:52	hiberheim	So I have a Cargo binary project that references dylibs with extern blocks. I want to add a library and just use the binary as a sample/demo, but when I add the lib.rs in the same directory as main.rs I get " = note: Undefined symbols for architecture x86_64:" for every dylib call. Why is adding the lib.rs file breaking linking, and how do I make it work?
2017-01-03 14:35:11	WindowsBunny	chel: However, if you ever want to implement a COM interface yourself... you're in for hell :D
2017-01-03 14:35:12	Yatekii	>> <faern> Yatekii: If you open the output file before starting to iterate and on chunk change you close it and open the next file you can stream through all chunks without having the entire chunks in memory
2017-01-03 14:35:18	Yatekii	that is a very valid point :)
2017-01-03 14:35:53	WindowsBunny	chel: You can improve the COM experience with a ComPtr smart pointer https://github.com/retep998/wio-rs/blob/master/src/com.rs
2017-01-03 14:36:01	Yatekii	faern: I don't intend having stuff in memory for more than one iteration anyways :) the iterator is just a way to have it modular :) otherwise it becomes a 500l loop ...
2017-01-03 14:36:11	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2017-01-03 14:36:29	faern	500 lines? :O You have the implementation of the hash inside the same function?
2017-01-03 14:36:49	WindowsBunny	chel: Implementing a COM interface yourself requires manually filling out vtables, and if you want to implement multiple interfaces for a single type you'll even have to do thunks to offset This to the actual self
2017-01-03 14:36:56	WindowsBunny	and manual thunks is *not* fun
2017-01-03 14:37:17	Yatekii	faern: nah but the rolling hash is long, then I do the chunk hashing, writing tose hashes to a idx file in order, zip the chunks and write em to files :)
2017-01-03 14:37:20	◥	skeuomorf (skeuomorf@moz-cdt.7n4.210.156.IP) has joined #rust
2017-01-03 14:37:27	◥	phil-opp (phil-opp@moz-o7uu84.6rg8.bbcb.1398.2a00.IP) has joined #rust
2017-01-03 14:37:54	chel	WindowsBunny, unfortunately I may have to experiment with implementing a server unfortunately, the ultimate goal (for me) is to get Rust to host an Excel ribbon
2017-01-03 14:37:57	◣	davs (davs@moz-pk0b43.pool.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-03 14:38:02	Yatekii	jimb: faern: thank you very much! Yatekii is no going to bed and will continue working tomorrow :) We'll see if the slipt_off way works :) I am very positive :)
2017-01-03 14:38:11	jimb	lol yay
2017-01-03 14:38:17	faern	Yatekii: good lock.
2017-01-03 14:38:19	faern	luck*
2017-01-03 14:38:26	Yatekii	thank you!
2017-01-03 14:38:30	WindowsBunny	chel: well, you're in for a fun ride
2017-01-03 14:38:33	◥	walter (walter@moz-glm69e.ma.comcast.net) has joined #rust
2017-01-03 14:38:40	Ploppz	_habnabit: but how do I know when recv_from didn't write any bytes to the buffer? e.g. there were no queued messages? Err?
2017-01-03 14:38:52	◣	Darfeel (Thunderbird@moz-th8.505.53.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:39:03	chel	WindowsBunny, I'll be sure to save the “best” for last, and pick away at the relatively low-hanging fruit first ;) thanks for all the info!
2017-01-03 14:39:14	◣	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-03 14:39:18	◥	gvandere_ (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-03 14:39:21	Nafai	It's been 16+ years since I last tried doing anything with COM, glad I haven't had to face that beast since.
2017-01-03 14:39:29	◣	Ekho (Ekho@moz-064315.compute.amazonaws.com) has quit (Quit: An alternate universe was just created where I didn't leave. But here, I left you. I'm sorry.)
2017-01-03 14:39:31	◣	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2017-01-03 14:39:52	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Connection closed)
2017-01-03 14:39:56	m4b	there's no default associated types (like default generic paramters e.g, pub trait Foo<T = usize>)
2017-01-03 14:40:17	◥	Darfeel (Thunderbird@moz-th8.505.53.184.IP) has joined #rust
2017-01-03 14:40:31	◥	bjz (bjz@moz-k9990q.optusnet.com.au) has joined #rust
2017-01-03 14:40:44	◥	staticasrt (Mibbit@moz-bb6mst.ma.comcast.net) has joined #rust
2017-01-03 14:40:52	◣	kitsu (kitsu@moz-34sno4.dynamic.ufanet.ru) has quit (Ping timeout: 121 seconds)
2017-01-03 14:41:02	◣	raichoo (raichoo@moz-u2g8ea.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-03 14:41:46	m4b	that was a question, sorry
2017-01-03 14:42:13	◥	rschiffl1n (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2017-01-03 14:42:28	◥	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has joined #rust
2017-01-03 14:43:11	◣	jbradberry (jrb@moz-kpp3mi.biz.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-03 14:43:40	◥	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has joined #rust
2017-01-03 14:43:57	◣	sooda (sooda@moz-fn3nq3.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2017-01-03 14:45:14	◣	mastizada (Thunderbird@moz-288.r0a.3.188.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-03 14:45:47	◥	streblo (streblo@moz-6g2tqo.or3h.o3t5.0186.2601.IP) has joined #rust
2017-01-03 14:46:42	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:46:49	◥	mastizada (Thunderbird@moz-288.r0a.3.188.IP) has joined #rust
2017-01-03 14:47:14	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-03 14:47:33	◣	bjz (bjz@moz-k9990q.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 14:48:27	_habnabit	Ploppz, you should read the man pages and/or the thing i linked
2017-01-03 14:49:07	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2017-01-03 14:49:11	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-03 14:49:14	bluss	m4b: there is defaults but they are the default for when implementing the trait (and it's an unstable feature)
2017-01-03 14:49:29	◣	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has quit (Ping timeout: 121 seconds)
2017-01-03 14:49:46	◥	bjz (bjz@moz-k9990q.optusnet.com.au) has joined #rust
2017-01-03 14:50:11	◣	stelarcf_______________________ (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2017-01-03 14:50:16	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-03 14:50:18	◥	stelarcf_______________________ (stelarcf@moz-jd7lsk.com) has joined #rust
2017-01-03 14:50:37	◥	cryptojuice (cryptojuice@moz-gaj1tg.86er.bbgm.2000.2604.IP) has joined #rust
2017-01-03 14:50:51	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-03 14:51:08	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2017-01-03 14:51:58	◣	tscheck (t@moz-32k.iso.151.83.IP) has quit (Quit: WeeChat 0.3.2)
2017-01-03 14:53:31	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-03 14:54:14	◣	arroyoc (Thunderbird@moz-09j.b3d.136.46.IP) has quit (Client exited)
2017-01-03 14:54:40	◣	cryptojuice (cryptojuice@moz-gaj1tg.86er.bbgm.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:55:03	◥	REMqb (REMqb@moz-bff1b1.abo.wanadoo.fr) has joined #rust
2017-01-03 14:55:15	◣	Akien_ (akien@moz-gd94u9.dyn.telefonica.de) has quit (Quit: self.get_tree().quit())
2017-01-03 14:56:13	◣	epimorph (epimorph@moz-37flav.tbcn.telia.com) has quit (Quit: Leaving)
2017-01-03 14:56:31	◣	phil-opp (phil-opp@moz-o7uu84.6rg8.bbcb.1398.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 14:58:37	vadix	is there a way to derive default on an enumeration, specifying that some variant be the default case?
2017-01-03 14:59:00	&mbrubeck	vadix: You can implement it explicitly
2017-01-03 14:59:16	bluss	A crate could implement that derive variant using proc macros
2017-01-03 14:59:21	◣	streblo (streblo@moz-6g2tqo.or3h.o3t5.0186.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 14:59:27	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-03 14:59:39	vadix	that would be nice
2017-01-03 15:00:11	◣	bjz (bjz@moz-k9990q.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 15:00:39	⚡	bholley is now known as bholley_away
2017-01-03 15:00:47	&mbrubeck	`impl Default for MyEnum { fn default() -> Self { MyEnum::Variant } }`
2017-01-03 15:00:52	bluss	oh it's already implemented. here https://github.com/mcarton/rust-derivative
2017-01-03 15:01:03	bluss	that said I would do as mbrubeck says myself
2017-01-03 15:02:07	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Connection closed)
2017-01-03 15:02:09	Centril	is there a stable version of std::intrinsics::abort  somewhere in core or libstd?
2017-01-03 15:02:23	Centril	also for std::intrinsics::asume
2017-01-03 15:02:29	◥	dm3 (dm3@moz-rj6.7o9.61.78.IP) has joined #rust
2017-01-03 15:02:31	@steveklabnik	i don't believe so? std::process::exit is almost equivlanet in a way?
2017-01-03 15:02:36	bluss	abort is coming https://doc.rust-lang.org/nightly/std/process/fn.abort.html (unstable)
2017-01-03 15:02:46	@steveklabnik	ah nice
2017-01-03 15:02:48	vadix	bluss: ooh, thats a neat crate
2017-01-03 15:02:49	bluss	yeah and assume is out of reach
2017-01-03 15:03:03	bluss	no stable assume
2017-01-03 15:03:22	⚡	bholley_away is now known as bholley
2017-01-03 15:03:25	talchas	you can do something like assume with enum Void {}, but no guarantees that llvm will notice in the same way
2017-01-03 15:03:43	vadix	btw, does anyone know if I can rebind a binding inside of an enum struct variant into a different name?
2017-01-03 15:03:47	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-03 15:03:52	bluss	yes it is not as good as assume
2017-01-03 15:04:10	◣	Kreest_ (Kreest@moz-voslm9.pool.invitel.hu) has quit (Connection closed)
2017-01-03 15:04:47	◥	Jayflux_ (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-03 15:04:54	vadix	for instance the "contained" in if let EnumType::VariantType { ref mut contained, .. } = self.v {}
2017-01-03 15:05:05	◣	espadrine (tyl@moz-16ak3r.dd79.arl0.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:05:17	◣	anjumkaiser (anjumkaiser@moz-11r.5cv.50.39.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:05:22	bluss	{ contained: ref mut x }
2017-01-03 15:05:32	vadix	bluss: ahh, thanks
2017-01-03 15:05:33	bluss	oh and the .. are needed of course, too
2017-01-03 15:05:57	vadix	I tried every combination except for that
2017-01-03 15:06:05	▷	vadix facepalms
2017-01-03 15:06:22	◥	prz (prz@moz-8o4.tv0.129.66.IP) has joined #rust
2017-01-03 15:06:25	Centril	steveklabnik, bluss: what about libc::abort?  also... abort() aborts all threads, without a way to recover, correct?
2017-01-03 15:06:31	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:06:34	◥	JasonW (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-03 15:06:45	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2017-01-03 15:07:08	@steveklabnik	iirc the difference there is that llvm knows more about the intrinsict than just calling a function
2017-01-03 15:07:16	bluss	there must be some difference to libc's abort
2017-01-03 15:07:19	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:07:20	@steveklabnik	but i'm not like, sure about that
2017-01-03 15:07:41	WindowsBunny	bluss: specifically we don't use libc abort on windows. We just TerminateProcess
2017-01-03 15:07:52	WindowsBunny	quick silent and deadly
2017-01-03 15:08:18	Centril	hmm... isn't this a bit harsh for std::rc::Rc::inc_strong ?
2017-01-03 15:08:19	Centril	self.inner().strong.set(self.strong().checked_add(1).unwrap_or_else(|| unsafe { abort() }));
2017-01-03 15:08:37	Centril	why not just a panic?
2017-01-03 15:08:40	bluss	Centril: I think we can find the rationale for that in the PR that introduced it
2017-01-03 15:08:44	◥	poolish (bread@moz-q8q2pe.east.myfairpoint.net) has joined #rust
2017-01-03 15:09:19	meh	is there a simple way to forward a trait to a struct field?
2017-01-03 15:09:26	◣	birryree (wizbang@moz-7h5ipr.com) has quit (Ping timeout: 121 seconds)
2017-01-03 15:09:29	&Manishearth	meh: no
2017-01-03 15:09:31	&Manishearth	macroooo
2017-01-03 15:09:35	◣	bread|laptop (bread@moz-22g.5vs.16.70.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:09:51	Centril	bluss: got the RFC #id ?
2017-01-03 15:09:53	meh	Manishearth, I'll rephrase: is there any crate with such a magical macro? :P
2017-01-03 15:10:03	◥	birryree (wizbang@moz-7h5ipr.com) has joined #rust
2017-01-03 15:10:07	talchas	meh: the macro would have to be on the trait
2017-01-03 15:10:14	◣	Jayflux_ (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2017-01-03 15:10:17	talchas	and even then it's gonna be tricky
2017-01-03 15:10:57	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-03 15:10:58	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2017-01-03 15:11:01	◣	nairware (CELLIS@moz-p2c267.rlghnc.sbcglobal.net) has quit (Quit: Leaving.)
2017-01-03 15:11:22	◣	skeuomorf (skeuomorf@moz-cdt.7n4.210.156.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 15:11:29	◣	junqed (junqed@moz-rlk.8dl.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-03 15:11:44	bluss	Centril: no rfc, but https://github.com/rust-lang/rust/pull/27174
2017-01-03 15:11:54	◥	junqed (junqed@moz-rlk.8dl.70.178.IP) has joined #rust
2017-01-03 15:12:20	bluss	there is a motivation in the comments in the code actually
2017-01-03 15:12:25	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-03 15:12:34	&Manishearth	meh: only the one you are about to write :>
2017-01-03 15:12:37	&Manishearth	there probably is actually
2017-01-03 15:12:52	Centril	bluss: "We abort because this is such a degenerate scenario that we don't care about
2017-01-03 15:12:54	Centril	/ what happens -- no real program should ever experience this.
2017-01-03 15:12:57	Centril	that one ?
2017-01-03 15:13:16	◣	geal (geal@moz-5p8kss.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2017-01-03 15:13:16	_habnabit	seems strange to prefer abort over panic for that
2017-01-03 15:13:21	_habnabit	but i'm jumping in the middle here
2017-01-03 15:13:38	meh	Manishearth, yeah, the thing is I only need to do that for a single struct, so at that point I'd just do it by hand
2017-01-03 15:13:49	bluss	eys
2017-01-03 15:13:53	Centril	_habnabit: one could just as well introduce a TryClone trait that returns Option<Self>
2017-01-03 15:14:02	Centril	and make the function total
2017-01-03 15:14:39	Centril	and then let Clone  just do try_clone().unwrap()
2017-01-03 15:15:18	snakers	https://is.gd/vdVHl8 -- Is it not possible to test inline fn definitions?
2017-01-03 15:15:26	m4b	you know, i really dislike typing trait fn prototypes over and over, the compiler usually knows what it has to be, i wish i could write a trait impl in "closure" style like let from = |from| { // bla bla }
2017-01-03 15:15:56	◥	nagisa (nagisa@moz-8t068g.static.zebra.lt) has joined #rust
2017-01-03 15:15:56	◣	junqed (junqed@moz-rlk.8dl.70.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:16:22	◥	Cyderize_ (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2017-01-03 15:16:25	snakers	I could take it outside but that wrecks my flow, man
2017-01-03 15:16:36	wilfredh	I'm trying to define a function for a C FFI of the form fn(foo_arr *const Foo, arr_length: c_int);
2017-01-03 15:16:47	wilfredh	how can I convert a *const Foo into an array?
2017-01-03 15:16:56	_habnabit	wilfredh, you mean a slice?
2017-01-03 15:17:22	wilfredh	_habnabit: um, I think so. Do Rust slices work the same as C arrays?
2017-01-03 15:17:44	_habnabit	wilfredh, no. what did you mean by 'array'? a C array?
2017-01-03 15:17:54	wilfredh	_habnabit: yep, a C array
2017-01-03 15:18:29	jmesmon	wilfredh: c arrays are basically pointers (from a function call perspective)
2017-01-03 15:18:41	_habnabit	wilfredh, while rust has an array type like a C array, 1) C implicitly converts unsized arrays in function parameters to pointers anyway, and 2) you can't safely convert to a rust array
2017-01-03 15:18:47	wilfredh	e.g. a function like this https://gist.github.com/Wilfred/fe6e8fc559c1386762388c7f4204166a
2017-01-03 15:18:54	◣	ShadowIce_ (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-03 15:19:13	_habnabit	wilfredh, that's a pointer, not an array. the equivalent in rust would be a slice
2017-01-03 15:19:13	wilfredh	_habnabit: yep, FFI means I don't have much safety. So I should transmut to a slice?
2017-01-03 15:19:19	_habnabit	wilfredh, no, never transmute
2017-01-03 15:19:44	staticasrt	ibubsan
2017-01-03 15:19:49	◣	yehnra (nick@moz-uu0.gqu.168.205.IP) has left #rust
2017-01-03 15:20:33	◥	tyoverby (tyoverby@moz-bbj.q2s.220.167.IP) has joined #rust
2017-01-03 15:20:45	_habnabit	wilfredh, there's a slice from_raw_parts
2017-01-03 15:21:20	wilfredh	ooh, that looks like just what I want
2017-01-03 15:21:45	wilfredh	thank you :)
2017-01-03 15:22:40	◣	futile (felix@moz-q7s1bv.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-03 15:23:26	◣	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2017-01-03 15:23:33	◥	hansaplast (hansaplast@moz-7v4sej.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-03 15:24:25	◥	pengowen (Mibbit@moz-99d.ie5.58.172.IP) has joined #rust
2017-01-03 15:24:42	◣	tyoverby (tyoverby@moz-bbj.q2s.220.167.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:25:06	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-03 15:25:10	◣	Fanaen (Fanaen@moz-0kbtih.6rfj.92aj.0e35.2a01.IP) has quit (Connection closed)
2017-01-03 15:26:54	◥	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-03 15:26:57	◥	robertbalicki (robertbalic@moz-6mr26d.res.rr.com) has joined #rust
2017-01-03 15:27:35	◣	hansaplast (hansaplast@moz-7v4sej.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:29:08	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:29:23	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (A TLS packet with unexpected length was received.)
2017-01-03 15:30:01	◣	makoLume (mako@moz-o2p8h1.flip.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-03 15:30:20	◣	refold (refold@moz-lkj.2mj.172.188.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:30:29	◣	cmyr (cmyr@moz-to3mp4.158.electronicbox.net) has quit (Client exited)
2017-01-03 15:32:59	◣	fede1024_ (quassel@moz-oc9.1o8.32.195.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:35:23	◣	manuel_ (manuel@moz-44m.14s.6.209.IP) has quit (Client exited)
2017-01-03 15:35:51	◣	srwalker101 (srwalker101@moz-i5q.7te.223.2.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-03 15:36:02	◣	robertbalicki (robertbalic@moz-6mr26d.res.rr.com) has quit (Client exited)
2017-01-03 15:36:35	◣	wilfredh (user@moz-lafa9m.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-03 15:37:44	◣	CryZe (Mibbit@moz-j11a9n.dynamic.kabel-deutschland.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-03 15:38:39	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-03 15:39:05	◥	KermitoniT (kermitonit@moz-51mu2f.optusnet.com.au) has joined #rust
2017-01-03 15:39:27	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-03 15:41:51	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-03 15:41:53	◣	ineol_ (textual@moz-r9rif1.fmnc.b88b.0e35.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 15:42:33	◣	wldcordeiro (wldcordeiro@moz-e5e9o7.maon.n3es.0681.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:43:09	◥	refold (refold@moz-lkj.2mj.172.188.IP) has joined #rust
2017-01-03 15:43:34	◣	mcoffin (mcoffin@moz-gbdt46.ga.charter.com) has quit (Quit: leaving)
2017-01-03 15:43:52	◣	fyolnish (fyolnish@moz-jqsevj.ucom.ne.jp) has quit (Quit: Bye)
2017-01-03 15:44:14	m4b	there's no struct destructuring in fn paramaters right?
2017-01-03 15:44:33	◣	eibwen (eibwen@moz-hid249.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-03 15:44:41	◣	fwiw (fwiw@moz-2od.81c.78.36.IP) has quit (Quit: testing irc)
2017-01-03 15:44:43	sp3d	any irrefutable pattern (e.g. struct destructuring) should work, afaik
2017-01-03 15:44:48	talchas	I suspect there is, but not for self
2017-01-03 15:44:53	m4b	omg wat?
2017-01-03 15:44:56	◥	cryptojuice (cryptojuice@moz-glp72u.86er.bbgm.2000.2604.IP) has joined #rust
2017-01-03 15:45:23	◥	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2017-01-03 15:45:26	j_ey	playbot: fn foo((x, y): (u32, i8)) {}
2017-01-03 15:45:28	⚡	Notice(playbot): ()
2017-01-03 15:45:29	◥	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has joined #rust
2017-01-03 15:45:39	j_ey	playbot: fn foo((x, y): (u32, i8)) -> i8 { y }
2017-01-03 15:45:43	m4b	that's a tuple tho
2017-01-03 15:45:43	talchas	playbot: struct S { a: i32 } fn foo(S {a}: S) {}
2017-01-03 15:45:43	⚡	Notice(playbot): ()
2017-01-03 15:45:47	⚡	Notice(playbot): ()
2017-01-03 15:45:49	◥	fyolnish (fyolnish@moz-jqsevj.ucom.ne.jp) has joined #rust
2017-01-03 15:45:52	m4b	mrrrrrrppppp
2017-01-03 15:45:52	◥	gavin (gavin@irc.mozilla.org) has joined #rust
2017-01-03 15:46:05	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2017-01-03 15:46:08	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:46:51	m4b	wow wow wow so excite much wow
2017-01-03 15:47:49	chel	playbot, (2, 2).0
2017-01-03 15:47:53	⚡	Notice(playbot): 2
2017-01-03 15:48:01	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-03 15:48:01	m4b	:]
2017-01-03 15:48:17	◣	LLBlumire (LLBlumire@moz-9so9ji.range165-120.btcentralplus.com) has quit (Quit: Leaving)
2017-01-03 15:48:59	◣	cryptojuice (cryptojuice@moz-glp72u.86er.bbgm.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:50:01	◣	gavin (gavin@irc.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-03 15:50:04	◣	plutoniix (q@moz-9dq8h4.dynamic.totbb.net) has quit (Quit: Leaving)
2017-01-03 15:50:06	◣	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2017-01-03 15:52:18	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:55:17	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-03 15:55:29	◥	manuel_ (manuel@moz-5eskqg.ma.comcast.net) has joined #rust
2017-01-03 15:55:31	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 15:55:43	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-03 15:57:51	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-03 15:58:40	◥	lambda-11235 (Lambda@moz-rh7.31p.21.184.IP) has joined #rust
2017-01-03 15:59:45	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-03 16:00:38	◣	KermitoniT (kermitonit@moz-51mu2f.optusnet.com.au) has quit (Quit: This computer has gone to sleep)
2017-01-03 16:01:34	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 16:01:53	◣	veqz (veqz@moz-vfd.nbt.159.195.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:02:47	◥	KermitoniT (kermitonit@moz-51mu2f.optusnet.com.au) has joined #rust
2017-01-03 16:03:14	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-03 16:04:59	◥	tyoverby (tyoverby@moz-jkj.pe1.220.167.IP) has joined #rust
2017-01-03 16:05:07	◥	wldcordeiro (wldcordeiro@moz-e5e9o7.maon.n3es.0681.2601.IP) has joined #rust
2017-01-03 16:06:19	◣	khj (Thunderbird@moz-2flut3.dynamic.jazztel.es) has quit (Client exited)
2017-01-03 16:07:30	◣	manuel_ (manuel@moz-5eskqg.ma.comcast.net) has quit (Client exited)
2017-01-03 16:08:52	◥	submersive (tburdick@moz-8fibb6.20o8.i6ht.0241.2601.IP) has joined #rust
2017-01-03 16:09:09	◣	tyoverby (tyoverby@moz-jkj.pe1.220.167.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:10:09	◣	SuperFluffy (janis@moz-tir2ec.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-03 16:10:31	◥	cjhowe (textual@moz-6f600u.hr.cox.net) has joined #rust
2017-01-03 16:13:02	◣	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-03 16:13:23	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-03 16:14:04	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-03 16:14:07	◣	tyoc213 (tyoc@moz-l5e.5lp.203.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:14:08	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Quit: Leaving...)
2017-01-03 16:15:04	jimb	_habnabit: You're no fun, transmute is a lovely double-ended chainsaw! :)
2017-01-03 16:15:09	_habnabit	jimb, nah
2017-01-03 16:15:50	◥	Phrohdoh (Phrohdoh@moz-tl9q9l.res.rr.com) has joined #rust
2017-01-03 16:15:56	◣	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:16:01	◥	sbw (Thunderbird@moz-gkj.r2e.173.59.IP) has joined #rust
2017-01-03 16:16:03	◣	cjhowe (textual@moz-6f600u.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-03 16:16:53	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-03 16:17:48	◣	cynicaldevil (uid126068@moz-3m708d.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-03 16:20:01	◥	Quxxy2 (Quxxy@moz-efh10q.internode.on.net) has joined #rust
2017-01-03 16:21:30	◣	wallacoloo____ (colin@moz-tvseqg.tukw.qwest.net) has quit (Client exited)
2017-01-03 16:22:39	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:22:47	◣	rooster (rooster@moz-o0od08.user.start.ca) has quit (Connection closed)
2017-01-03 16:23:31	SpaceManiac	m4b: be warned, there's a risk of it looking terrible in Rustdoc
2017-01-03 16:23:45	◣	staticasrt (Mibbit@moz-bb6mst.ma.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-03 16:24:45	◥	hansaplast (hansaplast@moz-7v4sej.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-03 16:25:06	ubsan	_habnabit over here, doing god's work <3
2017-01-03 16:25:11	◥	Jesin (Jesin@moz-0bqk66.hfc.comcastbusiness.net) has joined #rust
2017-01-03 16:25:32	◥	chc4_ (chc4@moz-gepq9d.ma.comcast.net) has joined #rust
2017-01-03 16:26:24	◣	Ploppz (ploppz@moz-qal8cm.studby.ntnu.no) has quit (Quit: WeeChat 1.6)
2017-01-03 16:27:58	◣	chc4 (chc4@moz-gepq9d.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-03 16:28:28	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2017-01-03 16:28:30	◣	vadix (vadix@moz-h9klev.nkcu.i5co.05c1.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:28:48	◣	hansaplast (hansaplast@moz-7v4sej.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-03 16:30:04	◥	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-03 16:31:10	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-03 16:31:20	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-03 16:31:32	◥	Kingsqueeee (kingsley@moz-sf902d.bchsia.telus.net) has joined #rust
2017-01-03 16:31:33	Redrield	When I try to read data from a socket, I'm getting this error https://hastebin.com/wayusajahe.tex
2017-01-03 16:31:40	◣	saimen (saimen@moz-6nh7io.hsi5.kabel-badenwuerttemberg.de) has quit (Quit: WeeChat 1.6)
2017-01-03 16:31:48	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-03 16:31:54	Redrield	The socket that I am reading from was accepted from an event with kind Ready::readable(). What am I doing wrong (Using mio)
2017-01-03 16:32:38	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2017-01-03 16:34:28	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-03 16:35:13	◣	fyolnish (fyolnish@moz-jqsevj.ucom.ne.jp) has quit (Connection closed)
2017-01-03 16:35:35	◥	fyolnish (fyolnish@moz-jqsevj.ucom.ne.jp) has joined #rust
2017-01-03 16:35:47	◣	poolish (bread@moz-q8q2pe.east.myfairpoint.net) has quit (Client exited)
2017-01-03 16:35:50	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-03 16:35:57	◣	KermitoniT (kermitonit@moz-51mu2f.optusnet.com.au) has quit (Quit: This computer has gone to sleep)
2017-01-03 16:36:07	◥	bread|laptop (bread@moz-q8q2pe.east.myfairpoint.net) has joined #rust
2017-01-04 09:56:13	⚡	irc: disconnected from server
2017-01-04 09:56:29	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-04 09:56:29	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-04 09:56:29	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-04 09:56:29	⚡	Channel #rust: 1283 nicks (17 ops, 0 halfops, 2 voices, 1264 normals)
2017-01-04 09:56:32	nox	Noldorin: We are talking about providing it only through hyper_openssl,
2017-01-04 09:56:33	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-04 09:56:46	seanmonstar	nox: doing that makes my life easier, but users lives harder
2017-01-04 09:56:47	nox	not removing the entire feature.
2017-01-04 09:56:54	&mbrubeck	wcrichto: Appears to be fixed in 1.13.0 stable, I think?
2017-01-04 09:57:05	nox	seanmonstar: Except if they need more bumps than you are willing to do, no? :)
2017-01-04 09:57:10	wcrichto	hmm ok
2017-01-04 09:57:11	&mbrubeck	wcrichto: I mean 1.14.0: https://is.gd/Xank0S
2017-01-04 09:57:13	wcrichto	ah ok
2017-01-04 09:57:14	◣	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 09:57:22	nox	seanmonstar: It's a bit more code, for more dependency flexibility.
2017-01-04 09:57:32	wcrichto	just need to update my rust :-) thanks mbrubeck!
2017-01-04 09:57:40	nox	So it also makes users lives a bit easier on another front IMO.
2017-01-04 09:57:44	seanmonstar	On one hand, HTTP doesn't depend on TLS really, and so it'd be nice if hyper didn't need to change when TLS libs do
2017-01-04 09:58:07	seanmonstar	On the other, "real" HTTP requires tls
2017-01-04 09:58:36	◣	kAworu (alex@moz-r13phb.ip-37-59-30.eu) has quit (A TLS packet with unexpected length was received.)
2017-01-04 09:58:58	nox	Being able to update openssl easily is important, and I think going through a separate crate helps that.
2017-01-04 09:59:29	seanmonstar	Looking at tokio, I don't think the tokio-tls crate will be part of normal crate
2017-01-04 09:59:38	seanmonstar	Maybe I should do the same
2017-01-04 09:59:55	wcrichto	ok so still type aliasing problem... https://gist.github.com/willcrichton/98a3bdb60819267adf9a2c3450df84bf
2017-01-04 09:59:59	◥	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has joined #rust
2017-01-04 10:00:04	◥	tyoc (tyoc@moz-l5e.5lp.203.189.IP) has joined #rust
2017-01-04 10:00:09	wcrichto	it says that i have to specify `T: Debug`
2017-01-04 10:00:29	wcrichto	but that should be inferrable 
2017-01-04 10:00:51	wcrichto	since Expr<T> = Typed<.., T> and struct Typed<..., T: Debug>
2017-01-04 10:00:59	wcrichto	but i guess rustc just doesn't reason that far?
2017-01-04 10:01:23	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 10:01:45	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-04 10:01:45	◣	ideasman42 (cambo@moz-hf4pn0.iinet.net.au) has quit (Connection closed)
2017-01-04 10:02:45	◥	rovar (rovar@moz-qa6fd4.compute-1.amazonaws.com) has joined #rust
2017-01-04 10:03:32	◣	tyoc213 (tyoc@moz-2ilelt.iusacell.net) has quit (Ping timeout: 121 seconds)
2017-01-04 10:04:24	&mbrubeck	wcrichto: Yeah, any bounds on generic parameters must be stated up-front. Otherwise changing the body of the item could change its bounds.  Or changing some unrelated type (even in another crate) could do the same!
2017-01-04 10:28:17	⚡	irc: disconnected from server
2017-01-04 10:28:34	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-04 10:28:34	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-04 10:28:34	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-04 10:28:34	⚡	Channel #rust: 1285 nicks (17 ops, 0 halfops, 2 voices, 1266 normals)
2017-01-04 10:28:38	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-04 10:29:03	◥	Ploppz (ploppz@moz-qal8cm.studby.ntnu.no) has joined #rust
2017-01-04 10:29:42	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 10:31:09	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-04 10:32:21	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-04 10:32:40	◥	srwalker_ (srwalker101@moz-l3sgo2.warwick.ac.uk) has joined #rust
2017-01-04 10:33:15	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 10:34:03	◥	ichy-wayland (ichy-waylan@moz-jfs642.1hl7.v3c8.07f5.2804.IP) has joined #rust
2017-01-04 10:34:19	ichy-wayland	The only way to do mixed lists is still Box<Trait>, right?
2017-01-04 10:35:04	◥	Ferreus (ferreus@moz-9gpthc.2sob.kr0n.2028.2a02.IP) has joined #rust
2017-01-04 10:35:04	Moonlightning	Trait object, yeah (so Box<Trait> or &Trait or &mut Trait)
2017-01-04 10:35:52	◥	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has joined #rust
2017-01-04 10:35:52	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-04 10:36:03	◣	srwalker101 (srwalker101@moz-ec8ffd.warwick.ac.uk) has quit (Ping timeout: 121 seconds)
2017-01-04 10:36:50	◣	srwalker_ (srwalker101@moz-l3sgo2.warwick.ac.uk) has quit (Ping timeout: 121 seconds)
2017-01-04 10:37:38	◥	wallacoloo____ (colin@moz-3f4g94.dhcp4.washington.edu) has joined #rust
2017-01-04 10:38:42	epimorph	ichy-wayland: that's only true for completely open-ended types though. if you have a fixed set of alternative types you can use an enum.
2017-01-04 10:38:52	⚡	agibson is now known as agibson|afk
2017-01-04 10:39:42	◥	rovar_ (rovar@moz-ai0250.wa.charter.com) has joined #rust
2017-01-04 10:41:23	epimorph	hmm... what's the right way to check that an integer value is in the right range before you do an 'as' cast? just using a < target_type::max_value() doesn't work unless they're the same type already...
2017-01-04 10:41:25	◣	Ilphrin (Ilphrin@moz-br4pjb.fbx.proxad.net) has quit (Quit: Leaving)
2017-01-04 10:41:58	◣	sepp2k (sepp2k@moz-aeuiqb.dyn.telefonica.de) has quit (Quit: Leaving.)
2017-01-04 10:42:12	◥	leonardo2 (chatzilla@moz-v70ao4.retail.telecomitalia.it) has joined #rust
2017-01-04 10:42:13	◣	rovar (rovar@moz-qa6fd4.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-04 10:42:27	Noldorin	seanmonstar, fair point
2017-01-04 10:42:40	◣	rovar_ (rovar@moz-ai0250.wa.charter.com) has quit (Connection closed)
2017-01-04 10:42:51	epimorph	in the case where you aren't sure which of the types have the largest max_value() (say usize and i64).
2017-01-04 10:43:49	◣	Shtong (realshtong@moz-cbcjf9.dsl.ovh.fr) has quit (Connection closed)
2017-01-04 10:44:01	◥	nalexander (nalexander@moz-nqgs58.mozilla.com) has joined #rust
2017-01-04 10:44:16	◥	sepp2k (Sepp2k@moz-aeuiqb.dyn.telefonica.de) has joined #rust
2017-01-04 10:45:02	◥	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has joined #rust
2017-01-04 10:45:51	&mbrubeck	epimorph: The `num_traits` crate has some checked cast functions like http://rust-num.github.io/num/num_traits/cast/trait.NumCast.html
2017-01-04 10:45:52	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 10:45:55	◥	blank_name1 (blank_name@moz-qjsup5.mi.frontiernet.net) has joined #rust
2017-01-04 10:45:56	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2017-01-04 10:46:08	&mbrubeck	epimorph:And soon this will be in the standard library as TryFrom: https://doc.rust-lang.org/std/convert/trait.TryFrom.html
2017-01-04 10:46:15	epimorph	mbrubeck: ok, thanks!
2017-01-04 10:47:31	&mbrubeck	epimorph: If you want to check manually, you can do `if x < target_type::max_value() as source_type`
2017-01-04 10:47:33	◥	djump (djump@moz-dkcp2c.wa.comcast.net) has joined #rust
2017-01-04 10:47:48	◥	dpyro (dpyro@moz-el40ti.tx.frontiernet.net) has joined #rust
2017-01-04 10:48:03	◣	blank_name (blank_name@moz-djh.87k.36.50.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 10:48:31	epimorph	mbrubeck: but what happens when target_type::max_value() doesn't fit in source_type?
2017-01-04 10:48:39	epimorph	ah. then the cast is to a larger type and is safe anyway.
2017-01-04 10:49:27	frewsxcv	Is it possible to create a function such that it takes a closure and panics if any heap allocations happen within the closure?
2017-01-04 10:49:31	&mbrubeck	epimorph: And of course when signed types are involved there are more things to check
2017-01-04 10:49:40	◥	chc4_ (chc4@moz-rsira7.ma.comcast.net) has joined #rust
2017-01-04 10:50:02	◣	zeryx (zeryx@moz-6k5tsq.ns.bellaliant.net) has quit (Client exited)
2017-01-04 10:50:10	◣	djump_ (djump@moz-dkcp2c.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 10:50:10	epimorph	frewsxcv: maybe with some os-specific magic.
2017-01-04 10:50:13	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 10:51:00	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-04 10:51:16	epimorph	though that depends on what you mean by heap allocations... if an allocator happens to have a pre-allocated block of memory and just hands out a pointer to a part of that it would be difficult to detect without allocator-specific checks.
2017-01-04 10:52:10	&mbrubeck	frewsxcv: Is this something you'd want to use only in a test suite (so the build fails if some code violates a "no allocations" rule), or in "production" code?
2017-01-04 10:52:38	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-04 10:52:48	◥	Fanaen (Fanaen@moz-v84md9.6rfj.92aj.0e35.2a01.IP) has joined #rust
2017-01-04 10:52:56	frewsxcv	mbrubeck: Probably just something that would be enabled during tests
2017-01-04 10:53:07	◣	leonardo2 (chatzilla@moz-v70ao4.retail.telecomitalia.it) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161208153507])
2017-01-04 10:53:17	frewsxcv	In a similar vein to debug_assert
2017-01-04 10:53:48	&mbrubeck	frewsxcv: I'm imagining a test harness that uses a custom allocator, and maybe also some LD_PRELOAD stuff to intercept libc calls like malloc and mmap. https://doc.rust-lang.org/nightly/book/custom-allocators.html
2017-01-04 10:54:09	frewsxcv	Hmm
2017-01-04 10:54:16	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-04 10:54:44	◥	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2017-01-04 10:55:05	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-04 10:56:00	⚡	rail-lunch is now known as rail
2017-01-04 10:57:38	◥	s_kunk (s_kunk@moz-1hb0ft.rev.sfr.net) has joined #rust
2017-01-04 10:58:02	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-04 10:58:04	◥	skeeter (skeeter@moz-d5s7vm.tukw.qwest.net) has joined #rust
2017-01-04 10:58:29	◣	tglman (tglman@moz-bsmqe2.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-04 10:58:32	◥	tglman (tglman@moz-bsmqe2.cable.virginm.net) has joined #rust
2017-01-04 10:59:35	◣	kaljaman69 (kaljamies@moz-ramduc.60.citypartner.pl) has quit (Quit: leaving)
2017-01-04 11:00:04	◣	phil-opp (phil-opp@moz-rjo3gr.hsi5.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-04 11:02:02	◥	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has joined #rust
2017-01-04 11:02:24	frewsxcv	mbrubeck: The LD_PRELOAD trick would be used to detect allocations within C code?
2017-01-04 11:02:38	frewsxcv	Since presumably the custom allocator won't detect those?
2017-01-04 11:02:58	&mbrubeck	frewsxcv: Yeah
2017-01-04 11:03:15	◣	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2017-01-04 11:03:36	◥	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2017-01-04 11:03:44	◥	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has joined #rust
2017-01-04 11:03:57	◣	c4757p (cmp@moz-jh0cjp.5qbc.b7gn.a880.2604.IP) has quit (Quit: brb)
2017-01-04 11:04:31	◥	c4757p (cmp@moz-jh0cjp.5qbc.b7gn.a880.2604.IP) has joined #rust
2017-01-04 11:07:00	frewsxcv	Well, this at least won't work at the function level
2017-01-04 11:07:12	◥	alx741_ (alx741@moz-qqb.dkk.152.190.IP) has joined #rust
2017-01-04 11:07:48	◣	undeadleech (undeadleech@moz-jf98c5.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-04 11:08:07	◥	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has joined #rust
2017-01-04 11:08:36	◥	rafaeldelucena (Rafael@moz-i2f.lcl.130.177.IP) has joined #rust
2017-01-04 11:08:52	frewsxcv	Changing allocator per unit test might be fine, if I could get that working somehow
2017-01-04 11:09:14	◣	alx741_ (alx741@moz-qqb.dkk.152.190.IP) has quit (Client exited)
2017-01-04 11:09:50	◣	alx741 (alx741@moz-736.gma.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:10:25	◥	flavius (flavius@moz-rl6prl.bo1n.rh19.8388.2a02.IP) has joined #rust
2017-01-04 11:12:11	◥	kmicu1 (kmicu@moz-c3t.224.218.91.IP) has joined #rust
2017-01-04 11:12:17	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:12:17	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Connection closed)
2017-01-04 11:12:32	◥	REMqb (REMqb@moz-77leug.abo.wanadoo.fr) has joined #rust
2017-01-04 11:13:34	◣	nightmared (configure@moz-k73lkr.abo.bbox.fr) has quit (Ping timeout: 121 seconds)
2017-01-04 11:13:45	◣	Ploppz (ploppz@moz-qal8cm.studby.ntnu.no) has quit (Quit: WeeChat 1.6)
2017-01-04 11:14:31	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-04 11:15:41	◥	maddie9 (maddie@moz-fpe67k.dyn.plus.net) has joined #rust
2017-01-04 11:15:44	maddie9	hello
2017-01-04 11:15:54	maddie9	which library would you recommend to write a parser with?
2017-01-04 11:16:57	mgdm	maddie9: I've been using nom and quite enjoying it
2017-01-04 11:17:03	maddie9	thank you!
2017-01-04 11:17:10	mgdm	https://github.com/Geal/nom if you've not seen it 
2017-01-04 11:17:53	◥	Ploppz (ploppz@moz-169br5.studby.ntnu.no) has joined #rust
2017-01-04 11:18:17	◣	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:18:21	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-04 11:18:59	◣	cmyr (cmyr@moz-4vu.06r.98.75.IP) has quit (Client exited)
2017-01-04 11:19:23	◣	TileHalo (TileHalo@moz-sq9.a86.166.188.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 11:19:27	◣	cpup (cpup@moz-cjd.b21.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:19:37	nalexander	maddie9: I am not expert at all, but I've been poking at combine to parse token streams; it's a little easier to use than nom.
2017-01-04 11:19:41	Aaronepower	maddie9 It depends on what you are parsing, nom is great for binary data, but when you're trying to parse utf8 it isn't so great.
2017-01-04 11:19:46	◣	wallacoloo____ (colin@moz-3f4g94.dhcp4.washington.edu) has quit (Client exited)
2017-01-04 11:20:29	maddie9	what i want to parse is utf8 s-expressions
2017-01-04 11:20:38	Xion	It's fine with the str parsers.
2017-01-04 11:20:43	epimorph	is it defined what happens when you do file.set_len(n) and the read/write position is currently beyond n? or is it platform-dependent?
2017-01-04 11:20:53	Xion	Ir you can just map!(.., str::from_utf8)
2017-01-04 11:21:43	◥	cpup (cpup@moz-cjd.b21.218.32.IP) has joined #rust
2017-01-04 11:22:23	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-04 11:22:33	◥	urcra (urcra@moz-9lk9gn.cpe.webspeed.dk) has joined #rust
2017-01-04 11:23:03	◥	reset (reset@moz-sm9.doc.152.104.IP) has joined #rust
2017-01-04 11:23:16	◣	reset (reset@moz-sm9.doc.152.104.IP) has quit (Quit: Linkinus - http://linkinus.com)
2017-01-04 11:23:32	◣	sigma (sigma@moz-9epccp.cable.virginm.net) has quit (Connection closed)
2017-01-04 11:23:37	◥	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has joined #rust
2017-01-04 11:23:37	◥	gavin (gavin@irc.mozilla.org) has joined #rust
2017-01-04 11:23:56	epimorph	maddie9: as far as i know nom only parses all data at once and has to restart from the beginning if it doesn't get a complete word, which may or may not be important depending on your application.
2017-01-04 11:25:06	◥	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2017-01-04 11:25:26	◣	rkruppe_ (rkruppe@moz-c6skn4.unity-media.net) has quit (Quit: Bye)
2017-01-04 11:25:43	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2017-01-04 11:26:52	◥	petso (petson@moz-p5i8vb.dyn.telefonica.de) has joined #rust
2017-01-04 11:27:00	maddie9	https://www.reddit.com/r/rust/comments/5iq3ws/schemers_parser_part_1_lets_build_our_scheme/
2017-01-04 11:27:04	maddie9	I found this but i cant load the page
2017-01-04 11:27:16	maddie9	I wonder what's up with that
2017-01-04 11:27:17	◣	sleffy (sleffy@moz-6h8duu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 11:27:53	◣	vadix (vadix@moz-h9klev.nkcu.i5co.05c1.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:27:58	◥	AlexW (awalcutt@moz-lpnnlu.wa.comcast.net) has joined #rust
2017-01-04 11:28:14	◣	gavin (gavin@irc.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-04 11:28:14	◣	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2017-01-04 11:28:16	◥	JuanMiguel (JuanMiguel@moz-esg6ur.dynamicip.rima-tde.net) has joined #rust
2017-01-04 11:30:00	◣	awalcutt (awalcutt@moz-lpnnlu.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 11:30:03	Moonlightning	epimorph: the seek position stays where it is; if you write() anything, then you'll get a file with a hole in it (holes aren't bad at all; they just read as zeroes without actually taking up space on the filesystem[*])
2017-01-04 11:30:39	Moonlightning	epimorph: and, I dunno, Windows probably does something stupid like invalidate the file descriptor
2017-01-04 11:30:48	epimorph	Moonlightning: ok, thanks!
2017-01-04 11:30:53	epimorph	ehm... why would it do that?
2017-01-04 11:30:56	mgdm	maddie9: https://mgattozzi.com/scheme-parser - try that, site seems to have been rearranged
2017-01-04 11:31:05	◥	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-04 11:31:06	maddie9	thanks!
2017-01-04 11:31:08	Moonlightning	Why does Windows do any of the stupid stuff it does. :P
2017-01-04 11:31:10	bobross	has anyone used the wui crate? I see it in examples but not on cargo 
2017-01-04 11:31:32	Moonlightning	Just to annoy people? So we can't just write stuff for *nix, we have to specialcase it?
2017-01-04 11:31:53	Moonlightning	#[cfg(windows)] /* gotta reopen the darn file... */
2017-01-04 11:32:04	◣	xpe (textual@moz-0ln4n1.ei8p.t9hi.0644.2601.IP) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2017-01-04 11:32:33	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2017-01-04 11:34:10	Moonlightning	epimorph: ...it might not be /stupid/, per se, but I bet it's /different./
2017-01-04 11:34:46	Moonlightning	epimorph: I do fully expect that, on *nix, the behavior is as usual: you can truncate the file shorter to the current seek position; everything is normal; if you then write at that position, you get a sparse file.
2017-01-04 11:35:08	Moonlightning	You can also seek past the end of the file and write there, which has the same effect.
2017-01-04 11:35:32	epimorph	i wasn't planning to write past the end anyway, just wondering if i needed to seek before i changed the length to avoid an error from set_len().
2017-01-04 11:35:45	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2017-01-04 11:36:05	Moonlightning	epimorph: Nope; you don't.
2017-01-04 11:36:17	Moonlightning	Well, not on *nix, anyways.
2017-01-04 11:37:30	◣	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has quit (Connection closed)
2017-01-04 11:37:54	◥	wat (bobross@moz-tfju8u.mi.comcast.net) has joined #rust
2017-01-04 11:39:42	◥	alexchandel (Adium@moz-ag7tl3.gk0d.9nia.100d.2600.IP) has joined #rust
2017-01-04 11:40:08	◣	kdlv (kdlv@moz-p88oti.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2017-01-04 11:40:31	◥	bollu (bollu@moz-9i1.k6o.139.14.IP) has joined #rust
2017-01-04 11:40:54	◣	bobross (bobross@moz-blpdau.openskytelcom.net) has quit (Ping timeout: 121 seconds)
2017-01-04 11:41:01	◥	kdlv (kdlv@moz-p88oti.tbcn.telia.com) has joined #rust
2017-01-04 11:42:18	◥	xiinotulp (q@moz-aad980.dynamic.totbb.net) has joined #rust
2017-01-04 11:42:49	◣	petso (petson@moz-p5i8vb.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-04 11:43:19	geal	epimorph: the point of nom is in writing a lot of small parsers, and handle a state machine above those parsers
2017-01-04 11:43:25	◣	ato (sid11@moz-vhmn17.0j4i.jtu0.0101.2620.IP) has quit (Quit: )
2017-01-04 11:43:34	geal	so when you restart parsing something, you never have a lot to reparse
2017-01-04 11:43:39	◥	Ralith (ralithrali@moz-905bpb.openmarket.com) has joined #rust
2017-01-04 11:43:41	Ralith	hm
2017-01-04 11:44:21	◥	ai (ai@moz-0bh.58o.60.92.IP) has joined #rust
2017-01-04 11:44:35	◣	bollu (bollu@moz-9i1.k6o.139.14.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:44:36	geal	maddie9: see http://rust.unhandledexpression.com/nom/making_a_new_parser_from_scratch.html
2017-01-04 11:45:53	◣	plutoniix (q@moz-9dq8h4.dynamic.totbb.net) has quit (Ping timeout: 121 seconds)
2017-01-04 11:46:36	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-04 11:47:49	◥	gamozo_ (gamozo_@moz-qs71v5.fl.comcast.net) has joined #rust
2017-01-04 11:48:13	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-04 11:48:28	gamozo_	what's more 'rustic': "for blah in &some_thing[start..end]" or "for blah in some_thing[start..end].iter()"
2017-01-04 11:48:42	◣	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2017-01-04 11:48:53	gamozo_	trying to figure out which style to stick with (to my knowledge they're the same in terms of usage)
2017-01-04 11:49:04	◥	vmeson (rmacleod@moz-hs5cri.cable.teksavvy.com) has joined #rust
2017-01-04 11:49:30	◥	Sergio_ (uid203766@moz-h8mp44.stonehaven.irccloud.com) has joined #rust
2017-01-04 11:49:39	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2017-01-04 11:49:50	◥	stelarcf (stelarcf@moz-jd7lsk.com) has joined #rust
2017-01-04 11:50:14	@steveklabnik	gamozo_: they are the same, i prefer the former personally
2017-01-04 11:50:48	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2017-01-04 11:50:53	gamozo_	sounds good, that's what I've been using
2017-01-04 11:51:06	pepper_chico	also prefer that one...
2017-01-04 11:51:13	◣	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has quit (Quit: )
2017-01-04 11:51:21	gamozo_	just used usize::saturated_add() for the first time today. I wrote it out manually and then remembered it's already part of core :D
2017-01-04 11:51:33	gamozo_	saturating_add*
2017-01-04 11:51:44	◥	bdnelson (bdnelson@moz-0ntthp.om.cox.net) has joined #rust
2017-01-04 11:52:26	vegai	the hyper docs talk about the Client implementing Sync
2017-01-04 11:53:07	vegai	how is that useful, though? Is it significantly more efficient to share the same client between threads versus creating a separate client for each thread?
2017-01-04 11:53:30	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 11:53:42	◣	breeden1 (breeden@moz-l0ff2r.wi.charter.com) has quit (Quit: WeeChat 1.6)
2017-01-04 11:53:44	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-04 11:53:59	◥	breeden1 (breeden@moz-l0ff2r.wi.charter.com) has joined #rust
2017-01-04 11:54:57	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-04 11:55:08	seanmonstar	vegai: the Client owns a connection pool. so by sharing a client, you can make use of pooled connections
2017-01-04 11:55:20	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Connection closed)
2017-01-04 11:55:27	◥	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-04 11:55:33	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2017-01-04 11:55:51	◣	gamozo_ (gamozo_@moz-qs71v5.fl.comcast.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-04 11:56:16	◥	Altenius (Altenius@moz-3mi.gai.193.199.IP) has joined #rust
2017-01-04 11:56:19	◥	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2017-01-04 11:58:15	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 11:58:18	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Connection closed)
2017-01-04 11:58:32	◣	Guest30 (textual@moz-dvvmvp.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 11:58:45	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-04 11:59:07	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 11:59:17	vegai	seanmonstar: what does that do? Maintain a single connection for a single host even when logically doing multiple connections?
2017-01-04 12:00:11	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2017-01-04 12:00:25	seanmonstar	vegai: with http1, if you do 2 connections to the same host at the same time, you'll see no benefit. however, if you happen to do the requests to the same host at different times, the pool may have a waiting connection it can reuse
2017-01-04 12:01:09	seanmonstar	with http2, it should all go through 1 connection regardless
2017-01-04 12:01:30	seanmonstar	(h2 is not implemented yet)
2017-01-04 12:02:25	vegai	right
2017-01-04 12:02:39	vegai	and I suppose the host will be thankful if I have 20k of those threads :0
2017-01-04 12:02:43	vegai	:) that is
2017-01-04 12:02:49	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:02:50	vegai	thanks
2017-01-04 12:03:10	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-04 12:04:44	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 12:05:06	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-04 12:05:18	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:06:21	◣	cornelius (Mibbit@moz-c8h.16c.135.128.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-04 12:07:12	◣	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 12:07:17	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 12:07:26	◣	kybishop (kybishop@moz-9fe.kjf.88.146.IP) has quit (Connection closed)
2017-01-04 12:07:53	◥	kybishop (kybishop@moz-e8c.2aq.88.146.IP) has joined #rust
2017-01-04 12:08:03	◥	srwalker101 (srwalker101@moz-i5q.7te.223.2.IP) has joined #rust
2017-01-04 12:08:20	◣	kybishop (kybishop@moz-e8c.2aq.88.146.IP) has quit (Connection closed)
2017-01-04 12:08:35	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-04 12:08:56	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-04 12:09:01	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:11:15	◣	alexchandel (Adium@moz-ag7tl3.gk0d.9nia.100d.2600.IP) has quit (Quit: Leaving.)
2017-01-04 12:11:23	vegai	perhaps I'll contribute a doc diff to hyper that points this out in the client docs
2017-01-04 12:11:34	vegai	unless I read lazily, I don't think they give the motivation for Sync there right now
2017-01-04 12:11:40	vegai	but tomorrow is for that =>
2017-01-04 12:11:42	◥	sleffy (sleffy@moz-t0jr43.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-04 12:13:11	seanmonstar	I thought I had, but no. It's mentioned in reqwest docs, but not hyper
2017-01-04 12:13:54	◥	snakers (nauxas@moz-bts.eah.198.71.IP) has joined #rust
2017-01-04 12:14:04	◥	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has joined #rust
2017-01-04 12:14:16	◣	sebasmagri (user@moz-l4s.upu.146.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:14:19	◥	Guest30 (textual@moz-dvvmvp.a82i.2ods.0260.2a01.IP) has joined #rust
2017-01-04 12:14:36	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2017-01-04 12:14:39	SuperFluffy	sfackler: Is it possible to return a slice with your StreamingIterator? I am wondering how to specify type Item to make that work.
2017-01-04 12:14:47	◣	maddie9 (maddie@moz-fpe67k.dyn.plus.net) has quit (Quit: Leaving)
2017-01-04 12:14:57	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 12:15:23	◥	mib_uxi4tx (Mibbit@moz-kcs3se.res.rr.com) has joined #rust
2017-01-04 12:17:46	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-04 12:19:03	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-04 12:19:07	sfackler	SuperFluffy: [T] should work
2017-01-04 12:19:10	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:20:04	◥	eholk (eholk@moz-6fs.t2b.132.104.IP) has joined #rust
2017-01-04 12:20:11	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-04 12:20:37	◣	bitgin (tburdick@moz-8fibb6.20o8.i6ht.0241.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:20:57	SuperFluffy	sfackler: I should have probably tried that :-)
2017-01-04 12:21:07	SuperFluffy	Wasn't sure about how [T] <> &[T] relate
2017-01-04 12:21:48	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-04 12:21:54	◣	Altenius (Altenius@moz-3mi.gai.193.199.IP) has quit (Connection closed)
2017-01-04 12:22:11	◥	Altenius (Altenius@moz-3mi.gai.193.199.IP) has joined #rust
2017-01-04 12:22:46	◥	cjhowe (textual@moz-qpbq0h.va.comcast.net) has joined #rust
2017-01-04 12:23:21	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-04 12:23:45	eholk	in cargo, is there an easy way to see the output of build.rs?
2017-01-04 12:24:25	Moonlightning	sfackler: wait, what? Surely you can't return a [T]
2017-01-04 12:24:52	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-04 12:25:01	◥	SilverKey (SilverKey@moz-pf5aar.biz.rr.com) has joined #rust
2017-01-04 12:25:17	◣	SilverKey (SilverKey@moz-pf5aar.biz.rr.com) has quit (Quit: Cheerio!)
2017-01-04 12:25:21	sfackler	Moonlightning: the method return &Self::Item
2017-01-04 12:25:25	◣	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-04 12:25:25	◥	SilverKey (SilverKey@moz-pf5aar.biz.rr.com) has joined #rust
2017-01-04 12:25:41	Moonlightning	Ahhh.
2017-01-04 12:25:43	Ploppz	tomaka: let display = glutin::WindowBuilder::new().build_glium().unwrap(); how can I close the window again manually? It's just in a function that needs a GlutinFacade in order to use OpenGL for something.
2017-01-04 12:25:45	◣	gingermusketeer (gingermuske@moz-q4ugas.compute.amazonaws.com) has quit (Connection closed)
2017-01-04 12:25:51	◥	gingermusketeer (gingermuske@moz-57eiau.compute.amazonaws.com) has joined #rust
2017-01-04 12:26:09	tomaka	Ploppz, you can't close the window without dropping it
2017-01-04 12:26:14	tomaka	but alternatively you can hide it
2017-01-04 12:26:22	Ploppz	dropping as in?
2017-01-04 12:26:41	tomaka	dropping as it removing all traces of the `display` variable and all of its clones
2017-01-04 12:26:44	tomaka	in*
2017-01-04 12:26:53	◥	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2017-01-04 12:27:01	◥	kaljaman69 (kaljamies@moz-ramduc.60.citypartner.pl) has joined #rust
2017-01-04 12:27:30	tomaka	if you add something like .with_visibility(false) before .build_glium() the window will just not be visible
2017-01-04 12:27:37	◣	hiberheim (Mibbit@moz-umu.82u.101.160.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-04 12:27:45	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (Quit: Leaving)
2017-01-04 12:27:52	◥	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has joined #rust
2017-01-04 12:28:18	Ploppz	ah, I'll do that. But shouldn't the window be closed after this function? https://bpaste.net/show/4b973d16d806
2017-01-04 12:28:19	◥	grover (grover@moz-ibnplt.groveronline.com) has joined #rust
2017-01-04 12:28:34	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 12:29:07	tomaka	yes it should
2017-01-04 12:29:33	tomaka	if you're on Linux I think there's a bug with the x11 code that doesn't close it
2017-01-04 12:31:14	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-04 12:31:20	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-04 12:31:26	◥	handyman (handyman@moz-pdknca.subp.5lka.0645.2601.IP) has joined #rust
2017-01-04 12:31:49	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (Quit: Leaving)
2017-01-04 12:31:56	◥	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has joined #rust
2017-01-04 12:34:54	Ploppz	huh :o well hiding seems okay
2017-01-04 12:35:01	Ploppz	thank you
2017-01-04 12:35:42	Ploppz	remarkable that such ancient software has so annoying bugs. I know of several.
2017-01-04 12:36:27	◥	rschifflin (randy@moz-fr2b0k.lv.cox.net) has joined #rust
2017-01-04 12:37:38	◥	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has joined #rust
2017-01-04 12:37:38	◣	eholk (eholk@moz-6fs.t2b.132.104.IP) has quit (Client exited)
2017-01-04 12:38:51	◥	refold (refold@moz-lkj.2mj.172.188.IP) has joined #rust
2017-01-04 12:40:57	◥	pylbrecht (pylbrecht@moz-rhd91h.leu1.nofh.8109.2a02.IP) has joined #rust
2017-01-04 12:41:25	◥	rovar (rovar@moz-qa6fd4.compute-1.amazonaws.com) has joined #rust
2017-01-04 12:41:28	◣	futile (felix@moz-edjue4.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-04 12:42:14	◥	supercell (supercell@moz-h8d59r.red.bezeqint.net) has joined #rust
2017-01-04 12:42:38	◥	prz_ (prz@moz-c5kf0t.sntcca.sbcglobal.net) has joined #rust
2017-01-04 12:43:52	supercell	I was reading the RFC about stackless co-routines, and have a curious thought, want some feedback on it
2017-01-04 12:44:27	supercell	what whould the effect be if we have the co-routines always consume self, and return self again?
2017-01-04 12:44:57	◥	hardenedapple (hardenedapp@moz-l8680p.dsl.pipex.com) has joined #rust
2017-01-04 12:45:23	⚡	bholley is now known as bholley_away
2017-01-04 12:45:24	◣	prz (prz@moz-8o4.tv0.129.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:45:30	Vtec234	There is an inconsistency in crossbeam's interface for Atomic. (http://aturon.github.io/crossbeam-doc/crossbeam/mem/epoch/struct.Atomic.html) While all interfaces take Option<Ptr> for nullable pointers, Atomic::null() just returns Atomic<T> and is not unsafe. It should clearly return None instead, since null().load().deref() is an easy segfault
2017-01-04 12:45:45	◣	chc4_ (chc4@moz-rsira7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 12:45:48	Vtec234	oh no wait, it's not
2017-01-04 12:45:57	Vtec234	nevermind :<
2017-01-04 12:45:57	◥	xpe (textual@moz-0ln4n1.ei8p.t9hi.0644.2601.IP) has joined #rust
2017-01-04 12:46:40	◣	prz_ (prz@moz-c5kf0t.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2017-01-04 12:46:42	◣	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 12:47:05	◣	Soichiro (Soichiro@moz-pc78cj.nframe.net) has quit (Ping timeout: 121 seconds)
2017-01-04 12:49:27	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-04 12:50:38	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2017-01-04 12:50:50	◣	cjhowe (textual@moz-qpbq0h.va.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 12:51:00	talchas	more problematic is store_shared(); in general epoch requires you to not screw up in a couple of places
2017-01-04 12:51:35	◥	stjepang_ (stjepang@moz-ia8.g3l.39.5.IP) has joined #rust
2017-01-04 12:51:40	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-04 12:52:29	talchas	(but that unsafety marker is handled generally over on unlinked())
2017-01-04 12:52:42	◣	Guest30 (textual@moz-dvvmvp.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 12:52:49	◥	Jobava (uid133806@moz-vm3786.stonehaven.irccloud.com) has joined #rust
2017-01-04 12:54:04	Vtec234	talchas: as long as you uphold the two conditions that for unlinked(a) a is only known inside the structure and no more copies of a will be created, it's safe, no?
2017-01-04 12:54:04	◣	srwalker101 (srwalker101@moz-i5q.7te.223.2.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 12:54:15	◥	Guest30 (textual@moz-dvvmvp.a82i.2ods.0260.2a01.IP) has joined #rust
2017-01-04 12:54:21	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2017-01-04 12:54:23	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-04 12:54:28	◣	stjepang (stjepang@moz-h34.aah.252.151.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:54:48	◣	sleffy (sleffy@moz-t0jr43.4f2e.erii.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:55:25	◥	srwalker101 (srwalker101@moz-i5q.7te.223.2.IP) has joined #rust
2017-01-04 12:55:35	◥	prz (prz@moz-fif.76a.129.66.IP) has joined #rust
2017-01-04 12:55:52	◣	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has quit (Client exited)
2017-01-04 12:55:55	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 12:57:24	◥	prz_ (prz@moz-fif.76a.129.66.IP) has joined #rust
2017-01-04 12:57:24	◣	prz (prz@moz-fif.76a.129.66.IP) has quit (Connection closed)
2017-01-04 12:57:26	talchas	Vtec234: I believe the condition is that a is not currently available outside of any Guards, and has been removed from any Atomics
2017-01-04 12:57:43	◣	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 12:58:24	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-04 12:58:46	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-04 12:59:13	Vtec234	talchas: same thing :) Guards -> inside the structure, removed from Atomics -> no more copies
2017-01-04 12:59:43	talchas	well, inside the structure's code, but no longer inside of its memory
2017-01-04 12:59:46	◥	davs (davs@moz-due.96s.131.95.IP) has joined #rust
2017-01-04 12:59:47	◣	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-04 13:01:03	◣	davs (davs@moz-due.96s.131.95.IP) has quit (Connection closed)
2017-01-04 13:01:23	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Connection closed)
2017-01-04 13:01:26	◣	prz_ (prz@moz-fif.76a.129.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:01:43	◥	Quxxy2 (Quxxy@moz-efh10q.internode.on.net) has joined #rust
2017-01-04 13:01:55	◥	dm3 (dm3@moz-rj6.7o9.61.78.IP) has joined #rust
2017-01-04 13:04:11	Vtec234	talchas: well, it's still in the structure's memory, just that no more operations are able to reach it. really, you can think about it any way you want as long as it works for you
2017-01-04 13:04:39	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-04 13:05:18	◥	dinfuehr1 (dinfuehr1@moz-lbm873.highway.telekom.at) has joined #rust
2017-01-04 13:05:43	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-04 13:05:43	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-04 13:05:57	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:07:35	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-04 13:08:06	◥	insaneinside (user@moz-ck7c5n.customer.broadstripe.net) has joined #rust
2017-01-04 13:08:23	◥	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2017-01-04 13:08:35	◥	cjhowe (textual@moz-qpbq0h.va.comcast.net) has joined #rust
2017-01-04 13:08:38	◣	cjhowe (textual@moz-qpbq0h.va.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 13:10:31	◥	makoLine (mako@moz-o2p8h1.flip.co.nz) has joined #rust
2017-01-04 13:10:32	◥	mib_mgh91x (Mibbit@moz-jtbggm.pobb.as13285.net) has joined #rust
2017-01-04 13:11:21	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-04 13:13:04	nalexander	Hi, I have the following question about defining const higher-order functions.
2017-01-04 13:13:06	◥	nicoch (nicoch@moz-slle8t.2utt.76f9.0e34.2a01.IP) has joined #rust
2017-01-04 13:13:46	nalexander	I'm playing with the combine parser combinator library from https://github.com/Marwes/combine.
2017-01-04 13:13:46	◥	dm3 (dm3@moz-rj6.7o9.61.78.IP) has joined #rust
2017-01-04 13:13:46	nalexander	The library defines a Parser<..> trait, and provides several combinators which return concrete types implementing that trait.
2017-01-04 13:13:54	nalexander	So, for example, char('x') returns some CharParser<...> concrete type.
2017-01-04 13:13:58	◣	Ploppz (ploppz@moz-169br5.studby.ntnu.no) has quit (Quit: WeeChat 1.6)
2017-01-04 13:14:24	nalexander	I want to define some constant such things using the point-free style, like:
2017-01-04 13:14:48	nalexander	const two: TYPE = option('x', 'y')
2017-01-04 13:14:52	◣	rembo10 (rembo10@moz-9vjc0f.ab2q.2uic.04f8.2a01.IP) has quit (Quit: ZNC 1.6.3 - http://znc.in)
2017-01-04 13:14:55	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 13:15:16	nalexander	However, the concrete TYPE that the compiler reports is ... opaque to say the least.  Including a closure type which I can't really understand.
2017-01-04 13:15:40	◥	rembo10 (rembo10@moz-4sgf27.codeshy.com) has joined #rust
2017-01-04 13:15:41	nalexander	I was hoping to define `const two: Parser<..>` where the trait is given rather than the concrete type.
2017-01-04 13:15:57	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-04 13:15:59	◣	hardenedapple (hardenedapp@moz-l8680p.dsl.pipex.com) has quit (Ping timeout: 121 seconds)
2017-01-04 13:16:18	nalexander	Question: is that ever going to be possible?  The compiler definitely needs to know the size of two, and "traited things" are variable size, IIUC, so am I wasting time pursuing this?
2017-01-04 13:16:27	◣	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2017-01-04 13:16:38	◥	cjhowe (textual@moz-qpbq0h.va.comcast.net) has joined #rust
2017-01-04 13:16:50	nalexander	If this is straight-up not possible, can anybody suggest how to divine the inner closure type that the compiler won't tell me?
2017-01-04 13:17:09	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-04 13:17:12	talchas	you can't name closure types
2017-01-04 13:17:23	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-04 13:17:31	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2017-01-04 13:17:37	_habnabit	nalexander, you might be able to `const two: &Parser<...> = &option(...)`
2017-01-04 13:18:06	talchas	you can use a trait object &|| foo with type &'static Fn(...) -> whatever
2017-01-04 13:18:45	talchas	"impl Trait" could in theory do this, but I don't think even the current unstable implementation works on consts
2017-01-04 13:18:48	nalexander	talchas: _habnabit: thanks for the suggestions.  I will investigate and ask more questions.
2017-01-04 13:18:50	ichy-wayland	Can you cast a f32 to i32?
2017-01-04 13:19:10	◥	sleffy (sleffy@moz-t0jr43.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-04 13:19:27	talchas	ichy-wayland: yes, some_f32 as i32
2017-01-04 13:19:33	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2017-01-04 13:19:57	talchas	(and if some_f32 is entirely outside of the range of i32, this is UB without unsafe{}, wheeeeee)
2017-01-04 13:20:09	ichy-wayland	thanks!
2017-01-04 13:20:10	◥	hardenedapple (hardenedapp@moz-l8680p.dsl.pipex.com) has joined #rust
2017-01-04 13:20:11	_habnabit	dang
2017-01-04 13:20:13	ichy-wayland	;)
2017-01-04 13:20:24	_habnabit	TryFrom is still unstable i expect
2017-01-04 13:20:36	talchas	playbot: let x = 1f32/0.0; (x as i32, x as i32)
2017-01-04 13:20:39	⚡	Notice(playbot): (-526724448, -526724448)
2017-01-04 13:20:50	◥	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has joined #rust
2017-01-04 13:21:23	◥	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has joined #rust
2017-01-04 13:22:05	◥	beedaddy (martin@moz-cijo51.dip0.t-ipconnect.de) has joined #rust
2017-01-04 13:22:14	◥	futile (felix@moz-edjue4.dip0.t-ipconnect.de) has joined #rust
2017-01-04 13:23:37	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:24:50	◥	Kreest__ (Kreest@moz-k9dper.pool.invitel.hu) has joined #rust
2017-01-04 13:24:58	◥	gavin (gavin@irc.mozilla.org) has joined #rust
2017-01-04 13:25:44	◣	Guest30 (textual@moz-dvvmvp.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 13:27:22	◣	Douman (Douman@moz-qmb.9u5.208.82.IP) has quit (Quit: )
2017-01-04 13:27:25	◣	pylbrecht (pylbrecht@moz-rhd91h.leu1.nofh.8109.2a02.IP) has quit (Quit: Segmentation fault (core dumped))
2017-01-04 13:27:38	◥	impetus (impetus@moz-5ts3qt.fuse.net) has joined #rust
2017-01-04 13:28:12	◥	lenwood (manjaro-kde@moz-uke9g4.r4a5.s6a3.8108.2a02.IP) has joined #rust
2017-01-04 13:28:21	◥	zeryx (zeryx@moz-6k5tsq.ns.bellaliant.net) has joined #rust
2017-01-04 13:28:38	◣	TheCycoONE (quassel@moz-d4s.1g6.223.162.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 13:28:42	supercell	I am writing a no_std crate that is using another no_std crate
2017-01-04 13:29:00	◣	gavin (gavin@irc.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-04 13:29:08	supercell	how do I mark that I'm not using that crate's std feature?
2017-01-04 13:29:49	supercell	and more importantly, how do I make an std feature that then DOES use that crate's std feature?
2017-01-04 13:29:59	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 13:30:08	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 13:30:28	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 13:30:48	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 13:31:15	◣	impetus (impetus@moz-5ts3qt.fuse.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-04 13:32:47	◥	splitty__ (Splitty@moz-rop.f9r.75.109.IP) has joined #rust
2017-01-04 13:32:51	◣	splitty__ (Splitty@moz-rop.f9r.75.109.IP) has quit (Connection closed)
2017-01-04 13:33:37	◣	junqed (junqed@moz-rlk.8dl.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 13:33:42	◥	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has joined #rust
2017-01-04 13:34:03	◥	junqed (junqed@moz-rlk.8dl.70.178.IP) has joined #rust
2017-01-04 13:34:05	◣	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:34:23	◣	arBmind (Andreas@moz-i8v0pu.dyn.telefonica.de) has quit (Quit: Leaving.)
2017-01-04 13:34:58	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:35:00	◣	handyman (handyman@moz-pdknca.subp.5lka.0645.2601.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 13:35:13	⚡	rail is now known as rail-away
2017-01-04 13:35:18	SneakySnake	what the hell
2017-01-04 13:35:25	SneakySnake	could this actually be? A new nightly release?
2017-01-04 13:35:49	◥	handyman (handyman@moz-lmhaus.ca.comcast.net) has joined #rust
2017-01-04 13:35:50	WindowsBunnyBirthday	supercell: The correct way to do std/no_std is to have a feature to *enable* usage of std
2017-01-04 13:36:19	WindowsBunnyBirthday	supercell: Then you just make your crate's std feature depend on the std feature of that dependency
2017-01-04 13:36:29	◣	pears (pear@moz-e7i.0bb.139.98.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 13:36:40	◣	hardenedapple (hardenedapp@moz-l8680p.dsl.pipex.com) has quit (Quit: WeeChat 1.6)
2017-01-04 13:36:51	WindowsBunnyBirthday	supercell: If that dependency has std enabled by default you'll need to disable its default features
2017-01-04 13:37:03	supercell	how do I do that in Cargo.toml?
2017-01-04 13:37:06	◥	hansaplast (hansaplast@moz-2ar695.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-04 13:37:41	badboy	SneakySnake: ✓ Yes
2017-01-04 13:38:01	◥	adeln (adeln@moz-km939r.dyn.telefonica.de) has joined #rust
2017-01-04 13:38:05	◣	junqed (junqed@moz-rlk.8dl.70.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:38:57	WindowsBunnyBirthday	supercell: [dependencies] whatever = { version = "1.2.3", default-features = false }
2017-01-04 13:39:13	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-04 13:39:26	supercell	I mean make my std feature depend on other crate's std feature
2017-01-04 13:39:30	WindowsBunnyBirthday	supercell: And as for creating your own feature which depends on a dependency's feature http://doc.crates.io/manifest.html#the-features-section
2017-01-04 13:39:47	ai	Hi there. Is there somebody willing to do a code review of my 555 lines cooperative multithreading library (actual multithreading is not implemented yet)? Here it is: https://gitlab.com/niksaak/fibers/blob/master/src/lib.rs
2017-01-04 13:40:25	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-04 13:40:52	◥	pepper_c1 (pepper_chic@moz-f1h.t92.209.191.IP) has joined #rust
2017-01-04 13:41:23	ai	Specifically, I have problems with two tests - the test at line 552 segfaults when I don't switch to system allocator, and then the test at line 528 fails though by the looks of it it shouldn't fail at all.
2017-01-04 13:41:26	◥	bollu (bollu@moz-9i1.k6o.139.14.IP) has joined #rust
2017-01-04 13:41:38	◥	Rolph (Mibbit@moz-umu.82u.101.160.IP) has joined #rust
2017-01-04 13:41:51	◣	pepper_c1 (pepper_chic@moz-f1h.t92.209.191.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 13:41:56	◥	pepper_c1 (pepper_chic@moz-f1h.t92.209.191.IP) has joined #rust
2017-01-04 13:42:04	dinfuehr1	sorry for being off-topic: what do you use for creating bar charts images?
2017-01-04 13:42:09	◣	pepper_c1 (pepper_chic@moz-f1h.t92.209.191.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 13:42:19	◥	eholk (eholk@moz-6fs.t2b.132.104.IP) has joined #rust
2017-01-04 13:42:45	◥	Kreest_ (Kreest@moz-k9dper.pool.invitel.hu) has joined #rust
2017-01-04 13:42:47	◣	pepper_chico (pepper_chic@moz-hqf.ehe.78.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:42:48	Ploppz	SneakySnake: how do you see when there's a new release?
2017-01-04 13:43:06	ai	(btw you must run it with `--test-threads 1` because it is not supposed to be run from multiple threads simultaneously)
2017-01-04 13:43:10	SneakySnake	Ploppz: I run rustup update periodically
2017-01-04 13:43:14	Ploppz	ah
2017-01-04 13:43:23	supercell	WindowsBunnyBirthday: session = ["cookie/session"] is the example. But... what if cookie is an optional dependency?
2017-01-04 13:43:40	Ploppz	would be cool if some bot notified in here whenever there's a release :P
2017-01-04 13:43:42	supercell	will it still be optional or does it forces it to come in?
2017-01-04 13:44:05	◣	Trangar (Trangar@moz-scf.k7b.97.185.IP) has quit (Quit: Leaving)
2017-01-04 13:44:25	◥	prz (prz@moz-fif.76a.129.66.IP) has joined #rust
2017-01-04 13:44:25	WindowsBunnyBirthday	supercell: oh um
2017-01-04 13:44:35	◣	prz (prz@moz-fif.76a.129.66.IP) has quit (Connection closed)
2017-01-04 13:44:42	⚡	bholley_away is now known as bholley
2017-01-04 13:44:43	WindowsBunnyBirthday	supercell: I don't know actually
2017-01-04 13:44:43	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-04 13:44:56	◥	prz (prz@moz-8o4.tv0.129.66.IP) has joined #rust
2017-01-04 13:44:57	WindowsBunnyBirthday	I suppose you can always try it and find out
2017-01-04 13:45:02	◣	prz (prz@moz-8o4.tv0.129.66.IP) has quit (Connection closed)
2017-01-04 13:45:05	◣	adeln (adeln@moz-km939r.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-04 13:45:24	◥	prz (prz@moz-8o4.tv0.129.66.IP) has joined #rust
2017-01-04 13:45:29	◣	bollu (bollu@moz-9i1.k6o.139.14.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:45:33	Rolph	What's the idiomatic type to return if you have a function that just sets some state, but can fail. Like MyContainer.AddWithInvarient(myType). The call would typically just return void, but if the argument doesn't pass some validation, the function does nothing but should report it's failure somehow. In C, I'd probably just return a bool
2017-01-04 13:45:36	◣	Kreest__ (Kreest@moz-k9dper.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-04 13:45:52	sfackler	Result<(), MyErrorType>
2017-01-04 13:45:54	misdreavus	Result<(), SomeError>
2017-01-04 13:46:38	◥	nkr (nkr@moz-p2a.qp2.141.177.IP) has joined #rust
2017-01-04 13:46:43	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 13:46:49	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 13:46:54	Rolph	Thanks!
2017-01-04 13:47:02	◣	mib_mgh91x (Mibbit@moz-jtbggm.pobb.as13285.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-04 13:48:17	◣	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:48:18	◥	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-04 13:48:19	Rolph	Also, for mocking object for tests, do you just create a bunch of traits and then have your real objects and test objects implement them? Is that the best way to go?
2017-01-04 13:49:06	◥	sebasmagri (user@moz-5t1.qu8.124.201.IP) has joined #rust
2017-01-04 13:49:30	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-04 13:50:28	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Connection closed)
2017-01-04 13:50:44	◣	nkr (nkr@moz-p2a.qp2.141.177.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:50:44	◣	cjhowe (textual@moz-qpbq0h.va.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 13:51:22	supercell	WindowsBunnyBirthday: it forces it as a dependency :( 
2017-01-04 13:51:34	◥	chris_999 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2017-01-04 13:51:46	WindowsBunnyBirthday	supercell: oh well, I dunno then
2017-01-04 13:51:56	WindowsBunnyBirthday	cargo is simply deficient I suppose
2017-01-04 13:52:14	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 13:52:17	◥	bjz (bjz@moz-pvt9bh.optusnet.com.au) has joined #rust
2017-01-04 13:52:19	WindowsBunnyBirthday	supercell: Feel free to file an issue in the cargo repo if such an issue doesn't already exist
2017-01-04 13:52:31	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Connection closed)
2017-01-04 13:52:37	◥	cjhowe (textual@moz-qpbq0h.va.comcast.net) has joined #rust
2017-01-04 13:52:40	◣	cjhowe (textual@moz-qpbq0h.va.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 13:52:42	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:52:48	◥	thills (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2017-01-04 13:53:10	◥	sscott (Thunderbird@moz-bg61s1.res.rr.com) has joined #rust
2017-01-04 13:53:12	⚡	chris_999 is now known as chris_99
2017-01-04 13:53:13	◥	fqtw (me@moz-clnrnl.dynamic.qsc.de) has joined #rust
2017-01-04 13:53:30	◥	petso (petson@moz-p5i8vb.dyn.telefonica.de) has joined #rust
2017-01-04 13:53:45	◣	fqtw (me@moz-clnrnl.dynamic.qsc.de) has quit (Quit: Leaving)
2017-01-04 13:54:24	◣	nicoch (nicoch@moz-slle8t.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2017-01-04 13:54:27	◣	raichoo (raichoo@moz-5ra2jq.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-04 13:54:33	◣	bennofs1 (benno@moz-dmv86e.qn0t.tnpg.c1a0.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:54:39	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 13:55:19	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2017-01-04 13:55:37	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Connection closed)
2017-01-04 13:56:09	◥	dm3 (dm3@moz-rj6.7o9.61.78.IP) has joined #rust
2017-01-04 13:56:19	◣	zach (zach@moz-cbdjgs.raasta.org) has quit (Quit: leaving)
2017-01-04 13:56:20	◥	wldcordeiro (wldcordeiro@moz-e5e9o7.maon.n3es.0681.2601.IP) has joined #rust
2017-01-04 13:56:39	compressed	is it possible to check if an external crate’s feature is set? Something like: `#[cfg(features = "ext_crate/feature1”)]` doesn’t seem to work
2017-01-04 13:56:40	WindowsBunnyBirthday	supercell: I could not find an existing issue, so feel free to open one
2017-01-04 13:56:50	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2017-01-04 13:57:17	nalexander	Simple question: is there a short-hand for an "enum branch predicate", the equivalent of `|x| { if let x = Branch(... possible data ...) { true } else { false } }`
2017-01-04 13:57:26	◥	zach (zach@moz-cbdjgs.raasta.org) has joined #rust
2017-01-04 13:57:37	◥	rovar_ (rovar@moz-ai0250.wa.charter.com) has joined #rust
2017-01-04 13:57:44	nalexander	Where I explicitly don't want to match the data (or specifiy it's shape, I just want to branch on the enum branch tag.
2017-01-04 13:57:47	_habnabit	nalexander, a match, or a function, or a method on the enum
2017-01-04 13:58:10	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-04 13:58:11	◣	eholk (eholk@moz-6fs.t2b.132.104.IP) has quit (Client exited)
2017-01-04 13:58:15	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-04 13:58:26	nalexander	_habnabit: sorry, is that a question or a statement?  I understand match, but it's verbose.
2017-01-04 13:58:44	_habnabit	nalexander, that was a statement
2017-01-04 13:58:45	supercell	WindowsBunnyBirthday: yea I couldn't see it either. The amount of open issues is discouraging though
2017-01-04 13:58:47	nalexander	_habnabit: I don't want to define functions for all these predicates.  Is there a method on the enum that does it?
2017-01-04 13:58:55	nalexander	_habnabit: OK, can you drill into the third option?
2017-01-04 13:59:01	◥	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-04 13:59:02	_habnabit	nalexander, oh, if you want a method for each variant, no, there's no magic generation of that
2017-01-04 13:59:23	supercell	WindowsBunnyBirthday: well it's not very critical for me. I was just in the mood of "hey lets add no_std support for some crate"
2017-01-04 13:59:30	nalexander	_habnabit: OK.  Seems like PartialEq + some matches stuff is the best way to do this.
2017-01-04 13:59:53	◣	rovar (rovar@moz-qa6fd4.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-04 13:59:55	_habnabit	nalexander, PartialEq requires you to construct an object of that variant, which might not be easy or possible
2017-01-04 14:00:04	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 14:00:08	nalexander	_habnabit: aye, I agree.
2017-01-04 14:00:11	◣	dm3 (dm3@moz-rj6.7o9.61.78.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:00:16	◣	sadboy13 (dbishop@moz-ok6.k7o.229.192.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 14:00:19	_habnabit	nalexander, well, and A(1) != A(2)
2017-01-04 14:00:20	◣	tromey (tromey@moz-hn05ml.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.90.2))
2017-01-04 14:00:23	◣	ineol (textual@moz-tvboap.fmnc.b88b.0e35.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 14:01:09	nalexander	_habnabit: so, using match, is it possble to match against `Branch _` without regard to the inner shape of Branch?
2017-01-04 14:01:19	▷	nalexander should just test that.
2017-01-04 14:01:35	_habnabit	nalexander, sure. it's no different from what if let allows, but `match x { Variant(..) => true, _ => false }`
2017-01-04 14:01:52	◥	raichoo (raichoo@moz-5ra2jq.versanet.de) has joined #rust
2017-01-04 14:02:24	nalexander	_habnabit: I was not aware that `match x { Variant => true, _ => false }` was a valid pattern.  First day with Rust :)
2017-01-04 14:02:34	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2017-01-04 14:02:40	◣	xpe (textual@moz-0ln4n1.ei8p.t9hi.0644.2601.IP) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2017-01-04 14:02:45	_habnabit	nalexander, you need the (..) if the variant has fields
2017-01-04 14:03:20	nalexander	_habnabit: rats.  If Variant(x, y), do I need Variant(_, _) or can I match Variant(_)?
2017-01-04 14:03:31	_habnabit	nalexander, (..) was not metasyntax
2017-01-04 14:03:32	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2017-01-04 14:04:30	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:04:54	◣	walter (walter@moz-glm69e.ma.comcast.net) has quit (Connection closed)
2017-01-04 14:05:00	SneakySnake	Nice, the latest nightly has i128
2017-01-04 14:05:06	SneakySnake	Holy crap, that is huge
2017-01-04 14:05:08	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (A TLS packet with unexpected length was received.)
2017-01-04 14:05:49	◥	Soichiro (Soichiro@moz-pfirh6.in.comcast.net) has joined #rust
2017-01-04 14:05:54	◣	raichoo (raichoo@moz-5ra2jq.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-04 14:06:22	◥	eholk (eholk@moz-6fs.t2b.132.104.IP) has joined #rust
2017-01-04 14:06:29	Ralith	hurray for unreasonably large integers
2017-01-04 14:06:39	◣	bjz (bjz@moz-pvt9bh.optusnet.com.au) has quit (Connection closed)
2017-01-04 14:06:50	◣	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-04 14:07:03	Yatekii	Valgrind X Rust == </3 :(
2017-01-04 14:07:41	Ploppz	isn't there any max function for usize?
2017-01-04 14:07:50	_habnabit	Ploppz, usize::MAX ?
2017-01-04 14:08:05	Ploppz	a function that gives the greatest of two numbers
2017-01-04 14:08:07	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-04 14:08:09	_habnabit	std::cmp::max
2017-01-04 14:08:44	Ploppz	thanks
2017-01-04 14:09:02	Vtec234	Ralith: not unreasonably, there are cases where you want/need them :)
2017-01-04 14:09:08	◣	kmein (kmein@moz-q09pe6.dyn.telefonica.de) has quit (Quit: Konversation terminated!)
2017-01-04 14:09:25	Ralith	thus hurray ^^
2017-01-04 14:09:34	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-04 14:09:53	Vtec234	ah, true
2017-01-04 14:11:07	◥	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has joined #rust
2017-01-04 14:11:18	◣	Sergio_ (uid203766@moz-h8mp44.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-04 14:11:44	supercell	WindowsBunnyBirthday: I did open a bug report, but guess no more work for me on this front for today. Thanks for the help though. <3 bunnies.
2017-01-04 14:11:52	◥	arBmind (Andreas@moz-s7v1rj.dyn.telefonica.de) has joined #rust
2017-01-04 14:11:52	◥	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has joined #rust
2017-01-04 14:12:48	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 14:13:15	sebasmagri	Hi! How could I implement something like HashMap<usize, Fn> without hitting the std::ops::Mul guard for the value item? I basically need something where I can put some functions that will be invoked depending on the parameters of an upper function.
2017-01-04 14:13:40	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:13:54	Ralith	what Mul guard?
2017-01-04 14:14:12	Ralith	you can't put Fn(...) -> ... in a HashMap because it's a trait, not a type
2017-01-04 14:14:43	Ralith	use fn(...) -> ... if you don't actually need closures, otherwise use Box<Fn(...) -> ...>
2017-01-04 14:14:44	Xion	You can Box it, but either way you need to specify params.
2017-01-04 14:15:29	◣	avawn (dv@moz-8mrn7i.winged.ch) has quit (Ping timeout: 121 seconds)
2017-01-04 14:15:45	◥	avawn (dv@moz-8mrn7i.winged.ch) has joined #rust
2017-01-04 14:16:02	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2017-01-04 14:16:10	sebasmagri	the type of the value I'm trying to put in the HashMap is actually `type Generator = fn(Config) -> Wrapper`
2017-01-04 14:16:58	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:16:58	◣	eholk (eholk@moz-6fs.t2b.132.104.IP) has quit (Client exited)
2017-01-04 14:17:01	Xion	This is regular fn so it should be fine as is.
2017-01-04 14:17:04	Ralith	that should work fine, then
2017-01-04 14:17:21	◣	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has quit (Client exited)
2017-01-04 14:17:42	Ralith	Mul is not involved in HashMap's interface
2017-01-04 14:18:22	sebasmagri	anyway when I try to insert a new function it throws "binary operation `*` cannot be applied to type `std::option::Option<fn(Config) -> Wrapper>`"
2017-01-04 14:18:29	sebasmagri	Mul is just in the note after that
2017-01-04 14:18:37	◥	mib_ld3bxf (Mibbit@moz-d260l4.143.16clouds.com) has joined #rust
2017-01-04 14:18:54	sebasmagri	"note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<fn(Config) -> Wrapper>`"
2017-01-04 14:18:59	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-04 14:19:27	ubsan	sebasmagri: what is the actual code
2017-01-04 14:19:29	ubsan	!paste
2017-01-04 14:19:29	+rustbot	Paste large text at https://paste.rs/, or code at https://play.rust-lang.org/ and shorten
2017-01-04 14:19:38	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 14:19:43	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:20:35	◥	chc4_ (chc4@moz-rsira7.ma.comcast.net) has joined #rust
2017-01-04 14:20:45	◣	mib_ld3bxf (Mibbit@moz-d260l4.143.16clouds.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-04 14:21:18	◣	solenodica (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:21:27	sebasmagri	ok
2017-01-04 14:21:31	◥	undeadleech (undeadleech@moz-jf98c5.dip0.t-ipconnect.de) has joined #rust
2017-01-04 14:21:42	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-04 14:23:09	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 14:23:54	◥	onix (Mibbit@moz-jtbggm.pobb.as13285.net) has joined #rust
2017-01-04 14:24:58	sebasmagri	oh d*mn... I realized what the issue was while pasting... I do a `hash.insert(number, func)` and below that I return with `*gens.get(&(id)).unwrap()`, I forgot putting `;` after the insert so it was multiplying... :-/
2017-01-04 14:25:06	sebasmagri	sorry to bother you guys... Thanks!
2017-01-04 14:25:57	◥	pepper_chico (pepper_chic@moz-f1h.t92.209.191.IP) has joined #rust
2017-01-04 14:26:21	◣	flavius (flavius@moz-rl6prl.bo1n.rh19.8388.2a02.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 14:26:49	◣	the_2nd (the_2nd@moz-v87043.sijg.c1oi.8070.2a02.IP) has quit (Quit: Leaving)
2017-01-04 14:26:59	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 14:27:17	◣	lenwood (manjaro-kde@moz-uke9g4.r4a5.s6a3.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:27:32	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-04 14:27:35	maurer	Is there a way to create a an error type with error_chain! which is parameterized on another type? In my case, implementors of a specific trait are allowed to specify their own error type, and it would be nice to have an error_chain-based error type which is polymorphic over that choice somehow
2017-01-04 14:28:05	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-04 14:28:41	◣	JuanMiguel (JuanMiguel@moz-esg6ur.dynamicip.rima-tde.net) has quit (Quit: Saliendo)
2017-01-04 14:29:05	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2017-01-04 14:29:35	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-04 14:30:07	◥	kulshrax (kulshrax@moz-1aa3mr.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-04 14:30:17	◥	ineol (textual@moz-a39ieb.fmnc.b88b.0e35.2a01.IP) has joined #rust
2017-01-04 14:30:19	Ralith	maurer: you could work around the problem by defining `enum<T> MyError { Internal(Error), External(T) }`
2017-01-04 14:30:35	Ralith	boilerplatey but with suitable trait impls it'll do what you want
2017-01-04 14:31:29	◥	junqed (junqed@moz-rlk.8dl.70.178.IP) has joined #rust
2017-01-04 14:31:52	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:32:03	◣	sscott (Thunderbird@moz-bg61s1.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 14:32:33	◣	handyman (handyman@moz-lmhaus.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2017-01-04 14:32:34	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 14:33:05	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-04 14:33:25	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-04 14:33:53	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-04 14:34:31	◣	junqed (junqed@moz-rlk.8dl.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 14:36:26	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-04 14:36:38	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:36:50	⚡	wat is now known as bobross
2017-01-04 14:37:07	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-04 14:37:24	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 14:37:30	bobross	WindowsBunnyBirthday hey, I'm trying to make a windows program with a simple list box, I found an example but it uses a crate called wui which isn't on crates.io
2017-01-04 14:37:44	WindowsBunnyBirthday	supercell: Just remember to never have a feature that *disables* stuff, because that is the exact opposite of how cargo features are supposed to work and will cause issues
2017-01-04 14:37:56	◣	sqwishy (sqwishy@moz-ifh.q9a.172.69.IP) has quit (Connection closed)
2017-01-04 14:38:05	◣	moriarty (moriarty@moz-q4vb8g.eu) has quit (Ping timeout: 121 seconds)
2017-01-04 14:38:06	WindowsBunnyBirthday	bobross: It's not even on github :D
2017-01-04 14:38:15	◣	globin (robin@moz-isrgf8.de) has quit (Ping timeout: 121 seconds)
2017-01-04 14:38:24	◥	sqwishy (sqwishy@moz-ifh.q9a.172.69.IP) has joined #rust
2017-01-04 14:38:24	WindowsBunnyBirthday	bobross: It is on gitlab though https://gitlab.com/DanielKeep/qui/tree/master
2017-01-04 14:38:29	bobross	but the main thing is that I don't know where to find LB_ADDSTRING
2017-01-04 14:38:29	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Connection closed)
2017-01-04 14:38:35	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-04 14:38:38	WindowsBunnyBirthday	bobross: Go pester Quxxy2 if you want to know about wui
2017-01-04 14:38:41	◥	moriarty (moriarty@moz-0do.8ua.47.78.IP) has joined #rust
2017-01-04 14:38:52	◣	m94asr (sck@moz-fiq6cs.swsch.de) has quit (Ping timeout: 121 seconds)
2017-01-04 14:39:08	◣	beedaddy (martin@moz-cijo51.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-04 14:39:14	◣	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-04 14:39:16	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 14:39:23	bobross	WindowsBunnyBirthday is that a ffi binding to window ui stuff or is it its own thing? 
2017-01-04 14:39:26	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 14:39:44	◣	sebk (sebk@moz-05nbdi.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2017-01-04 14:39:44	WindowsBunnyBirthday	That's just a library that provides a fancy windows UI thing, but built on top of winapi still
2017-01-04 14:39:46	◣	tav (tav@moz-3b0gib.range31-52.btcentralplus.com) has quit (Quit: Hakuna Matata!)
2017-01-04 14:39:51	bobross	WindowsBunnyBirthday in other words, is there enough in the rust windows bindings to do ui stuff and I just don't where to find everything?
2017-01-04 14:40:04	WindowsBunnyBirthday	bobross: LB_ADDSTRING is not bound yet in winapi
2017-01-04 14:40:11	◥	globin (robin@moz-isrgf8.de) has joined #rust
2017-01-04 14:40:12	◥	eholk (eholk@moz-6fs.t2b.132.104.IP) has joined #rust
2017-01-04 14:40:15	bobross	:(
2017-01-04 14:40:17	WindowsBunnyBirthday	It will be bound eventually
2017-01-04 14:40:23	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 14:40:49	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 14:40:51	bobross	is all of that stuff done by hand?
2017-01-04 14:40:53	◥	m94asr (sck@moz-fiq6cs.swsch.de) has joined #rust
2017-01-04 14:41:02	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 14:41:06	WindowsBunnyBirthday	bobross: for the most part, yes
2017-01-04 14:42:03	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-04 14:45:15	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 14:46:29	◣	hansaplast (hansaplast@moz-2ar695.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2017-01-04 14:47:25	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 14:47:31	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 14:48:28	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2017-01-04 14:48:40	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 14:48:54	◣	ftop_ (ftop@moz-9casb7.internode.on.net) has quit (Ping timeout: 121 seconds)
2017-01-04 14:49:10	◥	zaeleus (zaeleus@moz-019oq0.cpe.cableone.net) has joined #rust
2017-01-04 14:50:28	◣	Akien (akien@moz-3ub1lc.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-04 14:50:48	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 14:51:36	◣	anjumkaiser (anjumkaiser@moz-11r.5cv.50.39.IP) has quit (Quit: Leaving.)
2017-01-04 14:51:42	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:52:07	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 14:52:36	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 14:52:57	Rolph	anyone know the size of a C-enum? Is it an i32?
2017-01-04 14:53:09	Rolph	rather, is it the same size as i32?
2017-01-04 14:53:20	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 14:53:52	est31	I'm not sure, but generally it should be the case
2017-01-04 14:53:56	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2017-01-04 14:54:30	est31	rustbot: #[repr(C)] enum Bla{A, B, C, D}; ::std::mem::size_of::<Bla>()
2017-01-04 14:54:35	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 14:54:40	◥	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has joined #rust
2017-01-04 14:55:52	breeden1	playbot: #[repr(C)] enum Blah {A,B,C,D} ::std::mem::size_of::<Blah>()
2017-01-04 14:55:55	talchas	in practice it tends to be int/i32, but it's allowed to be other things
2017-01-04 14:55:57	&mbrubeck	Rolph: It's implementation-defined, but  in popular implementations it's usually the same size as `int`, which is `i32` on Rust's most-commonly-targeted platforms
2017-01-04 14:55:59	⚡	Notice(playbot): 4
2017-01-04 14:56:10	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 14:56:25	◥	ftop (ftop@moz-4b6gv7.internode.on.net) has joined #rust
2017-01-04 14:56:29	Rolph	so for FFI purposes, are enums "Intly" typed... I can pass an i32 as an enum to the C code and any enum the C code returns, I can declare as an i32?
2017-01-04 14:57:05	talchas	in practice probably, but not by spec
2017-01-04 14:57:18	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-04 14:57:39	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Quit: Leaving)
2017-01-04 14:58:02	Rolph	talchas what do GCC and Clang do?
2017-01-04 14:58:03	talchas	if you reproduce the C enum with a rust one tagged #[repr(C)], then that's guaranteed to be ffi-compatible
2017-01-04 14:58:18	rkruppe	Rolph: why write i32 if you could use just the enum in the signature and on the C side?
2017-01-04 14:58:39	Rolph	rkruppe because I didn't know I can do that
2017-01-04 14:59:02	rkruppe	Rolph: btw a Rust enum is assumed to be exhaustive so if the C code hands you an i32 that doesn't correspond to a declared enum value, you get Undefined Behavior
2017-01-04 14:59:30	◣	onix (Mibbit@moz-jtbggm.pobb.as13285.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-04 15:00:06	◥	sscott (Thunderbird@moz-bg61s1.res.rr.com) has joined #rust
2017-01-04 15:00:22	Rolph	I knew you had to exhaustively match an enum, but what do you mean? That the C enum has to be a subset of the Rust one (by values)?
2017-01-04 15:00:37	bluss	The question starts with the assumption that C int is i32, which is not always true
2017-01-04 15:01:16	&mbrubeck	I recommend https://github.com/Yamakaky/rust-bindgen which uses libclang to generate Rust types that correspond to C types, given a C header
2017-01-04 15:01:42	jimb	bluss: I'm trying to understand how generic functions and implicit reborrows interact; is this coherent? https://gist.github.com/jimblandy/b4fe875939bf5e2a789d03348ef9c50e
2017-01-04 15:02:03	rkruppe	Rolph: yes, any value which Rust does not know about is instant bad news
2017-01-04 15:02:43	jimb	bluss: Err, just realized I'm rather rudely asking you to read something non-trivial. Sorry about that.
2017-01-04 15:02:54	talchas	jimb: "My guess is that inferring id's type parameter unifies the T with m's type, so that T has the same lifetime as m," is not correct
2017-01-04 15:03:08	Fenrir	You can use repr(u32) to specify the size of a C enum, though I don't know if the u32 part means that the enum values can't be negative.
2017-01-04 15:03:20	talchas	that is what happens without specifying T, and you wind up taking the entire borrow
2017-01-04 15:03:24	jimb	talchas: So unification of type parameters doesn't extend to unifying the type's lifetimes?
2017-01-04 15:03:36	Rolph	mbrubeck, That looks really helpful. This will replace slogging away with manual translation from headers to extern blocks?
2017-01-04 15:03:46	◣	ghosss (textual@moz-rr8npu.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-04 15:03:48	◣	kmicu1 (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 15:03:57	&mbrubeck	Rolph: yes
2017-01-04 15:04:04	jimb	talchas: "without specifying T" is what I meant by "inferring id's type parameter".
2017-01-04 15:04:17	Rolph	my life = changed. That sounds amazing!
2017-01-04 15:04:21	jimb	talchas: Is my terminology weird there?
2017-01-04 15:04:26	◣	madmalik (uid13697@moz-mac7ts.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-04 15:04:32	talchas	jimb: oh, inferring, sorry
2017-01-04 15:04:37	jimb	*whew*
2017-01-04 15:04:44	talchas	I read that as specifying id::<&mut i32>
2017-01-04 15:04:49	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-04 15:04:51	◥	nagisa (nagisa@moz-8t068g.static.zebra.lt) has joined #rust
2017-01-04 15:04:56	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 15:05:12	jimb	talchas: Okay, so when you do let Rust infer T, then T does pick up m's lifetime?
2017-01-04 15:05:37	talchas	I think the more important thing is it doesn't do the implicit reborrow
2017-01-04 15:05:48	bluss	jimb: cool example. Note that f has a lifetime parameter and id has not, I guess
2017-01-04 15:05:49	talchas	where f(m) is basically f(&mut *m)
2017-01-04 15:06:22	bluss	even id::<&mut i32> is not like f<'a>(&'a mut i32) -> &'a mut i32
2017-01-04 15:06:55	talchas	but id(m) is _not_ id(&mut *m), because that would compile
2017-01-04 15:07:09	◥	kirillkh (kirillkh@moz-36fngh.red.bezeqint.net) has joined #rust
2017-01-04 15:07:38	talchas	and presumably, id::<&mut i32>(m) means that when it looks at what "m" is being passed to it sees the &mut rather than a generic T and adds the reborrow
2017-01-04 15:07:38	◣	tomprogrammer (thomas@moz-6kjq3u.dynamic.kabel-deutschland.de) has quit (Connection closed)
2017-01-04 15:08:10	◥	tomprogrammer (thomas@moz-6kjq3u.dynamic.kabel-deutschland.de) has joined #rust
2017-01-04 15:08:47	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2017-01-04 15:09:14	◥	walter (walter@moz-glm69e.ma.comcast.net) has joined #rust
2017-01-04 15:09:23	◥	machuga (machuga@moz-kuh.odq.223.162.IP) has joined #rust
2017-01-04 15:09:29	◥	TechnoCrunch (TechnoCrunc@moz-ant.ip3.100.101.IP) has joined #rust
2017-01-04 15:09:35	◥	CoderPuppy (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-04 15:09:42	talchas	(if you look at the MIR, you can see the added bits like "_4 = &mut (*_2)")
2017-01-04 15:09:57	◥	davs (davs@moz-due.96s.131.95.IP) has joined #rust
2017-01-04 15:10:16	insaneinside	does function-parameter destructuring work with `self` arguments?  e.g. can I do `&(x, y): &Self` instead of `&self`?
2017-01-04 15:10:22	◣	hub (hub@moz-59grbl.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-04 15:10:37	bluss	insaneinside: no, it's not a "self parameter" any more then
2017-01-04 15:10:52	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-04 15:10:55	bluss	it's the "self" that does it (said from how the syntax works)
2017-01-04 15:11:04	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 15:11:23	epimorph	i prefer destructuring in a separate 'let' statement in the function body anyway. makes the function arguments easier to read.
2017-01-04 15:13:16	◣	cpup (cpup@moz-cjd.b21.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:13:43	◣	geal (geal@moz-5p8kss.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2017-01-04 15:14:13	jimb	bluss: "even ... is not like": That is very interesting. So id::<&mut i32> is a type with a fresh lifetime variable, so if I assigned `id::<&mut i32>` to a variable and used it in several places, all the argument references' lifetimes would be unified with each other?
2017-01-04 15:14:19	◣	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has quit (Connection closed)
2017-01-04 15:14:37	jimb	Err, I mean, "So, in id::<&mut i32>, the &mut i32 is a type with..."
2017-01-04 15:15:18	◣	davs (davs@moz-due.96s.131.95.IP) has quit (Connection closed)
2017-01-04 15:15:43	Rolph	mrbrubeck "dyld: Library not loaded: @rpath/libclang.dylib" after I ran "cargo install bindgen"
2017-01-04 15:16:48	talchas	jimb: that seems to be the case
2017-01-04 15:16:51	◥	davs (davs@moz-due.96s.131.95.IP) has joined #rust
2017-01-04 15:16:54	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:16:54	◣	davs (davs@moz-due.96s.131.95.IP) has quit (Connection closed)
2017-01-04 15:16:54	jimb	The way I imagine this working is that each call to a generic function introduces a fresh set of type variables for its type parameters, so that different calls can operate at different types.
2017-01-04 15:16:55	bluss	jimb: I think so? And even then https://is.gd/OCT89u  the type of g must outlive the scope of `g`, of course
2017-01-04 15:17:06	bluss	jimb: which is why this is a borrow error, I think
2017-01-04 15:17:27	jimb	And that functions that are only "generic" via lifetime parameters, elided or otherwise, behave the same way, introducing a fresh set of lifetime variables at each call.
2017-01-04 15:18:21	talchas	jimb: yeah, I believe that is generally how it works or at least a workable way of thinking about it
2017-01-04 15:18:47	jimb	talchas: Excellent, that makes me happy
2017-01-04 15:18:49	talchas	but specifically naming id::<&mut i32> is a little weird, because that isn't a complete type right there
2017-01-04 15:18:57	◣	sebasmagri (user@moz-5t1.qu8.124.201.IP) has quit (Quit: ERC (IRC client for Emacs 25.1.1))
2017-01-04 15:19:20	talchas	and I'm not sure exactly how that works
2017-01-04 15:19:23	jimb	Because there's an unwritten lifetime variable in there?
2017-01-04 15:19:27	talchas	yeah
2017-01-04 15:19:35	◣	chc4_ (chc4@moz-rsira7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 15:19:37	jimb	mmmmmmmmm
2017-01-04 15:19:38	bluss	let g = id::<_>; is also ok though
2017-01-04 15:20:07	bluss	more incomplete
2017-01-04 15:20:15	jimb	bluss: Okay, that lets the type inferencer drop in a &mut i32 with a suitable lifetime variable?
2017-01-04 15:20:24	◣	burntsushi (burntsushi@moz-rhb6m6.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2017-01-04 15:20:44	◥	sebasmagri (user@moz-5t1.qu8.124.201.IP) has joined #rust
2017-01-04 15:21:03	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-04 15:22:16	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-04 15:22:16	◥	davs (davs@moz-due.96s.131.95.IP) has joined #rust
2017-01-04 15:22:26	◣	davs (davs@moz-due.96s.131.95.IP) has quit (Connection closed)
2017-01-04 15:22:35	bluss	it's like using `id` directly, but with the quirk of type type of g outliving the scope of g
2017-01-04 15:22:44	◣	jbradberry (jrb@moz-kpp3mi.biz.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 15:23:09	◣	Ferreus (ferreus@moz-9gpthc.2sob.kr0n.2028.2a02.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 15:24:02	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 15:24:12	◣	poolish (bread@moz-75o.mno.16.70.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:24:14	◥	bread|laptop (bread@moz-vi643c.east.myfairpoint.net) has joined #rust
2017-01-04 15:24:16	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 15:24:18	◣	sscott (Thunderbird@moz-bg61s1.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 15:24:19	jimb	Okay, so in https://is.gd/OCT89u, the reborrow does occur (rustc says a borrow occurs in `g(m)`), but the lifetime of the introduced &mut is the same as the lifetime of the &mut in g's type, which outlasts g. Which means the borrow doesn't end immediately after the statement `g(m);`, and interferes with the assignment.
2017-01-04 15:24:40	bluss	yes
2017-01-04 15:25:12	◥	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has joined #rust
2017-01-04 15:25:17	jimb	all right, that is satisfying
2017-01-04 15:25:46	◣	manuel_ (manuel@moz-44m.14s.6.209.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:26:05	◥	Cyderize_ (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2017-01-04 15:26:22	◥	fqtw (me@moz-clnrnl.dynamic.qsc.de) has joined #rust
2017-01-04 15:26:33	◣	futile (felix@moz-edjue4.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-04 15:26:52	fqtw	i want to accept bitcoin payments in my rust app, whats the easiest way to do it? use this? https://github.com/steveklabnik/coinbaser/blob/master/src/coinbaser.rs
2017-01-04 15:27:02	◥	crowder (ec2-user@moz-fj7q38.compute-1.amazonaws.com) has joined #rust
2017-01-04 15:27:06	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2017-01-04 15:27:33	◥	poolish (bread@moz-mgr.uql.222.64.IP) has joined #rust
2017-01-04 15:27:33	◥	davs (davs@moz-due.96s.131.95.IP) has joined #rust
2017-01-04 15:27:44	crowder	Perhaps a stupid question: http://docs.piston.rs/imageproc/imageproc/drawing/fn.draw_line_segment.html <--- what does the non-"_mut" version of this function actually? Does it return a brand new image which is a copy of the original plus the drawn line?
2017-01-04 15:27:45	◣	davs (davs@moz-due.96s.131.95.IP) has quit (Connection closed)
2017-01-04 15:28:11	◣	sepp2k (Sepp2k@moz-aeuiqb.dyn.telefonica.de) has quit (Connection closed)
2017-01-04 15:28:13	tilpner	fqtw - The readme says "not functional", and the last commit was in July 2015. So, probably not that
2017-01-04 15:28:14	◣	Soichiro (Soichiro@moz-pfirh6.in.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 15:28:19	jimb	bluss: One last question: in the `id(m)` case, `m` gets *moved* by that call. What exactly causes Rust to decide not do an implicit reborrow there?
2017-01-04 15:28:24	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2017-01-04 15:28:31	&mbrubeck	jimb: Since you are exploring the wonderful world of reborrowing versus moving &mut T values, you might be interested in https://users.rust-lang.org/t/transmutting-a-u32-array-to-a-u8-array/8250/17
2017-01-04 15:28:37	fqtw	tilpner: this? https://github.com/apoelstra/rust-bitcoin/
2017-01-04 15:28:40	crowder	Oh, I see. Answered my own q
2017-01-04 15:28:42	◣	bread|laptop (bread@moz-vi643c.east.myfairpoint.net) has quit (Ping timeout: 121 seconds)
2017-01-04 15:29:16	bluss	jimb: heh, I'd love to know too
2017-01-04 15:29:20	jimb	mbrubeck: That's beautiful!
2017-01-04 15:29:24	jimb	bluss: Okay. :D
2017-01-04 15:29:31	◣	allight (allight@moz-pl8h9j.k8q4.vk5s.0000.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:29:32	◥	bushidoboy (dbishop@moz-kefqnd.bish0p.org) has joined #rust
2017-01-04 15:29:46	talchas	note that there's a bunch of other implicit things that don't trigger on any generics
2017-01-04 15:29:49	◣	not_gavin (gavin@moz-hbsjla.cable.rogers.com) has quit (Ping timeout: 121 seconds)
2017-01-04 15:29:55	talchas	(well, one or two)
2017-01-04 15:29:56	jimb	talchas: I know about Deref conversions...
2017-01-04 15:29:57	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 15:29:59	talchas	yeah, that
2017-01-04 15:30:01	jimb	they don't happen
2017-01-04 15:30:12	tilpner	fqtw - Yes, that looks better, but I'm really just looking at the readme, same as you. I didn't use either :/
2017-01-04 15:30:14	talchas	and iirc trait object creation too
2017-01-04 15:30:25	jimb	talchas: Oh, interesting
2017-01-04 15:30:31	&mbrubeck	which is another coercion
2017-01-04 15:30:37	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-04 15:30:40	talchas	(aka, "every implicit conversion that can come up here")
2017-01-04 15:30:47	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 15:31:57	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 15:32:18	talchas	(yeah, and the third one fn-item to fn() also doesn't trigger)
2017-01-04 15:32:29	◥	montanonic (nicholas@moz-4ed.os7.216.209.IP) has joined #rust
2017-01-04 15:32:34	◥	davs (davs@moz-due.96s.131.95.IP) has joined #rust
2017-01-04 15:33:10	◥	handyman (handyman@moz-r22a5e.subp.5lka.0645.2601.IP) has joined #rust
2017-01-04 15:33:36	◥	platicus (matrixirc@moz-lnbnpf.igalia.com) has joined #rust
2017-01-04 15:33:40	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 15:34:09	◥	burntsushi (burntsushi@moz-rhb6m6.fios.verizon.net) has joined #rust
2017-01-04 15:34:10	⚡	Mode #rust [+ao burntsushi burntsushi] by ChanServ
2017-01-04 15:34:42	◥	hub (hub@moz-6un.mr4.70.69.IP) has joined #rust
2017-01-04 15:34:44	◣	jdm (jdm@moz-3eu2pc.cpe.teksavvy.com) has quit (Quit: )
2017-01-04 15:34:48	◣	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-04 15:35:25	◥	makoLume (mako@moz-rmueac.flip.co.nz) has joined #rust
2017-01-04 15:35:28	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:36:42	◣	montanonic (nicholas@moz-4ed.os7.216.209.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:36:56	&pcwalton	is there a nice way to cast a &[f32] to a &[u8]?
2017-01-04 15:37:17	&pcwalton	a commonly used crate that does that kind of thing
2017-01-04 15:37:39	◣	handyman (handyman@moz-r22a5e.subp.5lka.0645.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:37:44	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:37:48	◣	SilverKey (SilverKey@moz-pf5aar.biz.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-04 15:38:07	◣	makoLine (mako@moz-o2p8h1.flip.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-04 15:38:15	@steveklabnik	!crate byteorder
2017-01-04 15:38:15	+rustbot	byteorder (1.0.0) - Library for reading/writing numbers in big-endian and little-endian. -> https://crates.io/crates/byteorder <https://docs.rs/crate/byteorder>
2017-01-04 15:38:17	@steveklabnik	pcwalton: ^
2017-01-04 15:38:21	@steveklabnik	i think?
2017-01-04 15:38:26	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:38:29	talchas	I'm not sure if it'll have that exactly
2017-01-04 15:38:34	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 15:38:38	talchas	the code is fn convert(x: &[f32]) -> &[u8] { unsafe { slice::from_raw_parts(x.as_ptr(), x.len() * 4) } }
2017-01-04 15:38:41	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Connection closed)
2017-01-04 15:38:55	rkruppe	this ^ it's simple and dangerous enough that I hope there isn't a crate for that used by many people
2017-01-04 15:38:58	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-04 15:39:08	◥	makoLime (mako@moz-rmueac.flip.co.nz) has joined #rust
2017-01-04 15:39:19	talchas	which is of course unportable in terms of byteorder, and possibly unsafe if there's some crazy arch out there with align(f32) == 8
2017-01-04 15:39:33	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 15:40:08	◣	makoLume (mako@moz-rmueac.flip.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-04 15:40:10	talchas	but on that last I'm pretty sure there's bits of rust code that assume size_of is what you need
2017-01-04 15:40:12	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 15:40:15	◥	lambda-11235 (Lambda@moz-7ji.o8p.173.72.IP) has joined #rust
2017-01-04 15:40:18	talchas	and probably that size_of::<f32>() == 4
2017-01-04 15:40:26	&pcwalton	ok, I’ll make a one-off for my crate’s own use
2017-01-04 15:40:40	&pcwalton	(use case here is passing buffers to GPU)
2017-01-04 15:40:42	◣	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2017-01-04 15:41:08	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 15:41:24	◥	allight (allight@moz-pe5sad.k8q4.vk5s.0000.2620.IP) has joined #rust
2017-01-04 15:41:26	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-04 15:41:31	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 15:42:03	rkruppe	talchas: alignment of f32 is irrelevant in that case
2017-01-04 15:42:07	talchas	rkruppe: yeah
2017-01-04 15:42:14	◥	manuel_ (manuel@moz-5eskqg.ma.comcast.net) has joined #rust
2017-01-04 15:42:21	talchas	you'd have to have it be sizeofed to 8 and have only 4 bytes of it defined
2017-01-04 15:42:49	talchas	which I can vaguely see some arch somewhere doing, but not anything with a GPU
2017-01-04 15:43:01	rkruppe	f32 is defined to be IEEE-754 binary32 so a platform that did that would be so stupid that I wouldn't want to program it :P
2017-01-04 15:43:06	◣	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has quit (Quit: WeeChat 1.6)
2017-01-04 15:43:08	◥	cjhowe (textual@moz-qpbq0h.va.comcast.net) has joined #rust
2017-01-04 15:43:14	◥	afshinmeh (textual@moz-ge016q.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-04 15:43:31	◣	Durz0 (Durzo@moz-n40fdt.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-04 15:44:02	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 15:44:25	◣	cjhowe (textual@moz-qpbq0h.va.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 15:45:11	◥	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2017-01-04 15:45:38	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2017-01-04 15:46:38	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:46:51	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 15:47:08	◣	vandenoever (oever@moz-8onu2e.adsl-surfen.hetnet.nl) has quit (Ping timeout: 121 seconds)
2017-01-04 15:47:30	◣	epimorph (epimorph@moz-37flav.tbcn.telia.com) has quit (Quit: Leaving)
2017-01-04 15:48:04	◥	Durz0 (Durzo@moz-n40fdt.dynamic.kabel-deutschland.de) has joined #rust
2017-01-04 15:48:15	◣	mcoffin (mcoffin@moz-j2nblf.ga.charter.com) has quit (Quit: leaving)
2017-01-04 15:48:21	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-04 15:48:47	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 15:48:54	◣	M2Ys4U (m2ys4u@moz-2mdvps.81.in-addr.arpa) has quit (Ping timeout: 121 seconds)
2017-01-04 15:49:20	◥	robertbalicki (robertbalic@moz-6mr26d.res.rr.com) has joined #rust
2017-01-04 15:49:22	◣	ineol (textual@moz-a39ieb.fmnc.b88b.0e35.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 15:50:35	◣	sleffy (sleffy@moz-t0jr43.4f2e.erii.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:51:46	◥	cjhowe (textual@moz-qpbq0h.va.comcast.net) has joined #rust
2017-01-04 15:52:17	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-04 15:52:30	◥	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has joined #rust
2017-01-04 15:53:04	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 15:53:11	◣	robertbalicki (robertbalic@moz-6mr26d.res.rr.com) has quit (Connection closed)
2017-01-04 15:53:21	⚡	jntrnr_vacation is now known as jntrnr
2017-01-04 15:54:28	◣	Fanaen (Fanaen@moz-v84md9.6rfj.92aj.0e35.2a01.IP) has quit (Quit: Leaving)
2017-01-04 15:55:16	◣	srwalker101 (srwalker101@moz-i5q.7te.223.2.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 15:55:32	◣	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161213225203])
2017-01-04 15:56:22	◣	Durz0 (Durzo@moz-n40fdt.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-04 15:56:25	◥	moisture (moisturest@moz-ssjjch.co.comcast.net) has joined #rust
2017-01-04 15:56:29	◣	kulshrax (kulshrax@moz-1aa3mr.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-04 15:56:40	◣	lakin (lakin@moz-37rktg.abhsia.telus.net) has quit (Quit: leaving)
2017-01-04 15:57:18	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 15:57:28	⚡	bholley is now known as bholley_away
2017-01-04 15:57:30	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 15:58:21	Rolph	anyone figured out how to fix this problem on OSX with Bindgen? https://github.com/Yamakaky/rust-bindgen/issues/384#issuecomment-269776841
2017-01-04 15:58:30	◣	eholk (eholk@moz-6fs.t2b.132.104.IP) has quit (Client exited)
2017-01-04 15:58:48	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-04 15:59:24	◣	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:00:10	bluss	for the case of &[u8] -> "&[f32]" there's a neat way to express it as &[Unaligned<f32>] that eddyb came up with https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/index.rs#L98-L108
2017-01-04 16:00:12	◣	prz (prz@moz-8o4.tv0.129.66.IP) has quit (Connection closed)
2017-01-04 16:00:34	◥	prz (prz@moz-fif.76a.129.66.IP) has joined #rust
2017-01-04 16:00:37	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 16:00:38	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 16:01:51	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 16:01:52	◥	shouya (shouya@moz-ptr.a30.245.114.IP) has joined #rust
2017-01-04 16:02:35	◥	prz_ (prz@moz-fif.76a.129.66.IP) has joined #rust
2017-01-04 16:02:37	◣	zeryx (zeryx@moz-6k5tsq.ns.bellaliant.net) has quit (Client exited)
2017-01-04 16:02:47	◣	prz (prz@moz-fif.76a.129.66.IP) has quit (Connection closed)
2017-01-04 16:03:26	◣	machuga (machuga@moz-kuh.odq.223.162.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 16:03:27	◣	eibwen (eibwen@moz-tfu661.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-04 16:03:34	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 16:03:47	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:04:35	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-04 16:04:47	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:05:08	◥	sethlopez (sethlopez@moz-69u7c3.res.rr.com) has joined #rust
2017-01-04 16:06:29	◥	pepper_c1 (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-04 16:06:37	◣	prz_ (prz@moz-fif.76a.129.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:06:46	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Quit: Leaving...)
2017-01-04 16:07:05	◥	kulshrax (kulshrax@moz-1aa3mr.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-04 16:07:18	◥	eholk (eholk@moz-6fs.t2b.132.104.IP) has joined #rust
2017-01-04 16:09:06	bascule	o_O binary operation `==` cannot be applied to type `list::Cell<'_, T>`
2017-01-04 16:09:09	◣	pepper_chico (pepper_chic@moz-f1h.t92.209.191.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:09:27	bascule	but I #[derive(PartialEq)] for that type :|
2017-01-04 16:09:51	◣	shouya (shouya@moz-ptr.a30.245.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:10:24	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 16:10:38	◥	Layl (Mibbit@moz-65hqmf.direct-adsl.nl) has joined #rust
2017-01-04 16:11:10	Layl	Hey, what type should I give `impl From<_> for MyObject` to make .into() accept both MyObject and &MyObject?
2017-01-04 16:11:28	Layl	I tried <T: AsRef<MyObject>> but no dice
2017-01-04 16:11:43	Layl	actually, wrong way around
2017-01-04 16:11:45	_habnabit	Layl, impl<'a> From<...> for &'a MyObject
2017-01-04 16:11:54	Layl	impl From<_> for MyOtherObject
2017-01-04 16:12:07	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-04 16:12:11	Layl	converting MyObject to MyOtherObject
2017-01-04 16:12:29	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-04 16:12:34	Layl	`impl<'a> From<&'a MyObject> for MyOtherObject` will only accept &MyObject, not MyObject
2017-01-04 16:12:42	_habnabit	you need two impls, yes
2017-01-04 16:12:51	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-04 16:12:56	Layl	they're going to be identical, is there no trait that can do this?
2017-01-04 16:13:22	◥	mindCrime (prhodes@moz-gsh24b.dyn6.twc.com) has joined #rust
2017-01-04 16:13:25	_habnabit	how could they be identical? From<T> takes an owned T, not a &T
2017-01-04 16:13:59	Layl	the content of the functions is going to be the same
2017-01-04 16:14:36	_habnabit	Layl, as in, it calls a &self method and that's it?
2017-01-04 16:14:45	Layl	yes
2017-01-04 16:14:47	◥	anachrome (lily@104.131.118.79) has joined #rust
2017-01-04 16:15:25	◣	martianwars (uid124042@moz-1flne0.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-04 16:15:45	_habnabit	Layl, well, then the From<T> impl is easy: fn from(x: T) -> U { (&x).into() }
2017-01-04 16:16:29	◥	rkuska (rkuska@moz-ohi.85h.82.95.IP) has joined #rust
2017-01-04 16:16:54	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-04 16:16:58	Layl	sure but it's a bunch of extra typing, and I was wondering if I could avoid that
2017-01-04 16:17:08	_habnabit	i already typed most of it
2017-01-04 16:17:13	_habnabit	but, not that i know of
2017-01-04 16:17:48	◣	snakers (nauxas@moz-bts.eah.198.71.IP) has quit (Quit: )
2017-01-04 16:18:26	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-04 16:18:55	Layl	darn, oh well
2017-01-04 16:20:39	◣	rkuska (rkuska@moz-ohi.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:21:03	◥	khuey (khuey@moz-pd2jti.ca.comcast.net) has joined #rust
2017-01-04 16:21:06	◥	pcwalton (pcwalton@moz-21mp4f.ca.comcast.net) has joined #rust
2017-01-04 16:21:06	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-04 16:21:23	◥	xpe (textual@moz-0ln4n1.ei8p.t9hi.0644.2601.IP) has joined #rust
2017-01-04 16:21:34	◣	cjhowe (textual@moz-qpbq0h.va.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 16:22:00	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Connection closed)
2017-01-04 16:22:21	◥	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-04 16:22:23	◣	afshinmeh (textual@moz-ge016q.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-04 16:22:35	bascule	ugh, I wonder if I can make a minimal repro of this problem
2017-01-04 16:24:39	Xinayder	are there any examples on how to make a client using mio/tokio?
2017-01-04 16:25:01	◣	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2017-01-04 16:25:23	◣	meh (meh@moz-kpd.8ae.41.151.IP) has quit (Quit: reboot)
2017-01-04 16:25:30	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-04 16:25:49	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-04 16:26:23	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Ping timeout: 121 seconds)
2017-01-04 16:26:55	&mbrubeck	Xinayder: https://github.com/tokio-rs/tokio-line has a tiny one
2017-01-04 16:27:12	◥	prz (prz@moz-c5kf0t.sntcca.sbcglobal.net) has joined #rust
2017-01-04 16:27:21	&mbrubeck	Xinayder: and https://github.com/tokio-rs/tokio-redis a larger one
2017-01-04 16:28:05	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:28:14	eddyb	pcwalton: this might have been meant for you btw https://botbot.me/mozilla/rust/2017-01-05/?msg=78855569&page=1
2017-01-04 16:29:35	◣	manuel_ (manuel@moz-5eskqg.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-04 16:29:38	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:31:01	◥	kindiana (Mibbit@moz-p69qu7.bigpond.net.au) has joined #rust
2017-01-04 16:31:14	◣	prz (prz@moz-c5kf0t.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2017-01-04 16:32:16	◣	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has quit (Connection closed)
2017-01-04 16:33:02	◥	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has joined #rust
2017-01-04 16:33:28	◣	Layl (Mibbit@moz-65hqmf.direct-adsl.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-04 16:34:11	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-04 16:34:18	jorendorff	where can I read about covariance/contravariance of lifetime parameters?
2017-01-04 16:34:33	ubsan	jorendorff: the nomicon
2017-01-04 16:34:36	ubsan	!nomicon
2017-01-04 16:34:36	+rustbot	https://doc.rust-lang.org/nightly/nomicon/
2017-01-04 16:34:41	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-04 16:34:42	ubsan	nom nom
2017-01-04 16:35:03	jorendorff	awesome, thanks
2017-01-04 16:35:24	◥	junqed (junqed@moz-rlk.8dl.70.178.IP) has joined #rust
2017-01-04 16:35:32	◥	cytren (Mibbit@moz-fkrdm8.il.comcast.net) has joined #rust
2017-01-04 16:35:41	◥	jrmuizel (jrmuizel@moz-p7o.rkd.139.72.IP) has joined #rust
2017-01-04 16:35:49	◣	davs (davs@moz-due.96s.131.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:36:14	◥	aplund (aplund@moz-co6ne3.tpgi.com.au) has joined #rust
2017-01-04 16:36:46	◥	prz (prz@moz-c5kf0t.sntcca.sbcglobal.net) has joined #rust
2017-01-04 16:36:49	◣	prz (prz@moz-c5kf0t.sntcca.sbcglobal.net) has quit (Connection closed)
2017-01-04 16:37:07	◥	talklittle (talklittle@moz-j13vd3.l0lm.9cq6.0646.2601.IP) has joined #rust
2017-01-04 16:37:11	◥	prz (prz@moz-8o4.tv0.129.66.IP) has joined #rust
2017-01-04 16:37:49	◣	cynicaldevil (uid126068@moz-3m708d.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-04 16:38:45	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-04 16:38:50	◣	jrmuizel (jrmuizel@moz-p7o.rkd.139.72.IP) has quit (Connection closed)
2017-01-04 16:39:10	◥	manuel_ (manuel@moz-ns5u6k.ma.comcast.net) has joined #rust
2017-01-04 16:39:21	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-04 16:39:26	◣	junqed (junqed@moz-rlk.8dl.70.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 10:43:19	◥	d8v3 (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-05 10:43:19	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-05 10:43:19	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-05 10:43:19	⚡	Channel #rust: 1293 nicks (18 ops, 0 halfops, 2 voices, 1273 normals)
2017-01-05 10:43:22	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-05 10:44:13	◥	FrozenCow (FrozenCow@moz-ntgkhv.dynamic.upc.nl) has joined #rust
2017-01-05 10:44:31	⚡	You are now known as boon
2017-01-05 10:44:46	◥	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has joined #rust
2017-01-05 10:46:06	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 10:47:08	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 10:47:42	◣	Jackneill (Jackneill@moz-6in.86d.82.91.IP) has quit (Connection closed)
2017-01-05 10:48:01	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2017-01-05 10:48:03	◥	Jackneill (Jackneill@moz-6in.86d.82.91.IP) has joined #rust
2017-01-05 10:48:16	◥	Kreest (Kreest@moz-aj2s0f.pool.invitel.hu) has joined #rust
2017-01-05 10:48:33	◥	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has joined #rust
2017-01-05 10:48:43	◥	sunng (nsun@moz-ck1.i4q.180.1.IP) has joined #rust
2017-01-05 10:50:20	◣	abhi (Mibbit@moz-qbe.sr5.107.128.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-05 10:51:01	durka42	somehow I knew it would be mbrubeck answering that question
2017-01-05 10:51:44	◣	Kreest_ (Kreest@moz-aj2s0f.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-05 10:51:49	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-05 10:52:55	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-05 10:53:09	◣	Mermi (uid96745@moz-ltoie4.hathersage.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-05 10:53:20	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-05 10:54:05	◣	ubsandroid_ (ubsan@moz-tmbdhp.gq2a.uohq.fb90.2607.IP) has quit (Quit: <3)
2017-01-05 10:54:12	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-05 10:54:38	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-05 10:54:40	seanmonstar	icey: I've pondered it once a while ago, but it would certainly be interesting
2017-01-05 10:54:41	◥	cynicaldevil (uid126068@moz-3m708d.brockwell.irccloud.com) has joined #rust
2017-01-05 10:54:53	◣	bereddy (bereddy@moz-2e6qc0.fios.verizon.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2017-01-05 10:55:37	◥	dm3 (dm3@moz-urssv3.static.zebra.lt) has joined #rust
2017-01-05 10:56:30	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 10:56:35	◥	nZac (nZac@moz-0knq4t.midco.net) has joined #rust
2017-01-05 10:57:19	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 10:58:35	◥	rakm (rakm@moz-4hb0hg.ca.comcast.net) has joined #rust
2017-01-05 10:58:45	◥	dsantiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-05 10:59:30	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:01:09	◣	isHavvy (Havvy@moz-6o0er4.ptld.qwest.net) has quit (Ping timeout: 121 seconds)
2017-01-05 11:01:35	◣	umurgdk (umurgdk@moz-dcq.sa2.141.58.IP) has quit (Quit: leaving)
2017-01-05 11:01:42	◣	CoderPuppy (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:02:07	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2017-01-05 11:02:09	◣	Guest37 (textual@moz-edsm98.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-05 11:02:32	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-05 11:02:56	◥	Havvy (Havvy@moz-924fff.ptld.qwest.net) has joined #rust
2017-01-05 11:03:21	◥	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has joined #rust
2017-01-05 11:03:45	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-05 11:03:59	◣	ray (bernhard@moz-v9cjfg.l470.284f.8388.2a02.IP) has quit (Connection closed)
2017-01-05 11:04:58	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 11:05:20	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 11:05:31	◥	REMqb (REMqb@moz-t6sbc5.abo.wanadoo.fr) has joined #rust
2017-01-05 11:05:35	◥	s_kunk (s_kunk@moz-1hb0ft.rev.sfr.net) has joined #rust
2017-01-05 11:06:05	◣	ashish_ (chatzilla@moz-7njfol.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:06:06	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 11:06:20	◣	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2017-01-05 11:06:21	adrianbrink	Does the rust compiler use the Visitor pattern?
2017-01-05 11:06:50	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:07:00	@steveklabnik	yes
2017-01-05 11:07:05	@steveklabnik	in my understanding
2017-01-05 11:07:11	◣	poolish (bread@moz-fnm.4h1.16.70.IP) has quit (Client exited)
2017-01-05 11:07:18	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 11:08:10	rkruppe	yes
2017-01-05 11:08:20	Trangar	!ask
2017-01-05 11:08:20	+rustbot	Got a question about Rust? Go ahead and ask it! If you need to paste code, please use https://play.rust-lang.org/
2017-01-05 11:08:31	Trangar	Hmm that's not as snarky as I wanted 
2017-01-05 11:09:02	@steveklabnik	i think it's good it's not snarky
2017-01-05 11:09:05	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 11:09:22	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-05 11:09:50	◥	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has joined #rust
2017-01-05 11:10:23	misdreavus	there's also
2017-01-05 11:10:24	misdreavus	!dontask
2017-01-05 11:10:24	+rustbot	Don't ask to ask, if anyone is here or alive, or uses something. Just ask, and we'll get moving along. Thanks.
2017-01-05 11:10:32	misdreavus	if you want slightly more snark
2017-01-05 11:10:51	◣	Durz0 (Durzo@moz-n40fdt.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-05 11:11:25	◥	ashish_ (chatzilla@moz-7njfol.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-05 11:12:17	◥	blank_name2 (blank_name@moz-1ea.671.36.50.IP) has joined #rust
2017-01-05 11:12:35	⚡	agibson is now known as agibson|afk
2017-01-05 11:12:39	◥	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has joined #rust
2017-01-05 11:12:41	◣	djump (djump@moz-dkcp2c.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 11:12:57	◣	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has quit (Client exited)
2017-01-05 11:13:09	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:13:53	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-05 11:13:56	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 11:14:17	adrianbrink	Is there a way to do inheritance in Rust?
2017-01-05 11:14:19	⚡	fqtw_ is now known as fqtw
2017-01-05 11:14:39	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-05 11:14:40	@steveklabnik	not really
2017-01-05 11:14:40	◣	talchas (user@moz-i75sak.ca.comcast.net) has quit (Connection closed)
2017-01-05 11:14:52	adrianbrink	so, how could I do code specialization?
2017-01-05 11:14:55	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Connection closed)
2017-01-05 11:14:55	◥	talchas (user@moz-i75sak.ca.comcast.net) has joined #rust
2017-01-05 11:14:58	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 11:15:12	◣	bollu (bollu@moz-9i1.k6o.139.14.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:15:13	◣	blank_name1 (blank_name@moz-2q667j.mi.frontiernet.net) has quit (Ping timeout: 121 seconds)
2017-01-05 11:15:33	◥	ai (ai@moz-0bh.58o.60.92.IP) has joined #rust
2017-01-05 11:15:39	◥	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-05 11:16:34	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-05 11:17:23	◣	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 11:19:30	rkruppe	adrianbrink: what exactly do you mean by that?
2017-01-05 11:20:01	◥	ineol (textual@moz-imqh99.fmnc.b88b.0e35.2a01.IP) has joined #rust
2017-01-05 11:20:09	◥	djump (djump@moz-dkcp2c.wa.comcast.net) has joined #rust
2017-01-05 11:20:34	@steveklabnik	yeah, it depends on what you're doing
2017-01-05 11:20:49	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-05 11:21:12	◥	espadrine (tyl@moz-l019mn.fbx.proxad.net) has joined #rust
2017-01-05 11:21:42	◣	ato (sid11@moz-vhmn17.0j4i.jtu0.0101.2620.IP) has quit (Quit: )
2017-01-05 11:22:50	_habnabit	you'd use a trait
2017-01-05 11:22:53	◣	Guest30 (textual@moz-7sa3i0.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 11:23:44	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 11:23:48	◥	chc4 (chc4@moz-rsira7.ma.comcast.net) has joined #rust
2017-01-05 11:25:33	◥	zeryx (zeryx@moz-h7uvtb.ns.bellaliant.net) has joined #rust
2017-01-05 11:26:35	adrianbrink	So, if I want to define and complex object and specialise it for some  specific use case I would use a trait? :-)
2017-01-05 11:26:49	_habnabit	yep
2017-01-05 11:27:03	◣	jackpot51 (jackpot51@moz-h38c14.co.comcast.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 11:27:04	◥	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has joined #rust
2017-01-05 11:27:28	adrianbrink	I always thought of traits like interfaces in Java, but they are "equivalent" to both interfaces and inheritance?
2017-01-05 11:28:08	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:28:39	rkruppe	adrianbrink: traits don't allow implementation inheritance like "this trait impl uses the method defintions from that trait impl", but they enable other kinds of code reuse
2017-01-05 11:29:02	◥	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has joined #rust
2017-01-05 11:29:06	◣	boxofrox (charetjc@moz-podugf.hfc.comcastbusiness.net) has quit (Quit: WeeChat 1.6)
2017-01-05 11:29:25	◣	alphor (alphor@moz-jacr2f.cic7.a6fs.0180.2604.IP) has left #rust ("Using Circe, the loveliest of all IRC clients")
2017-01-05 11:29:27	◥	Guest37 (textual@moz-edsm98.res.rr.com) has joined #rust
2017-01-05 11:29:32	◣	rakm (rakm@moz-4hb0hg.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 11:29:56	◥	jsgf (jsgf@moz-183.9o0.201.199.IP) has joined #rust
2017-01-05 11:30:03	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-05 11:30:06	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 11:31:08	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 11:32:16	excaliburHisSheath	So what's the deal with Path::display()? It looks like the ::std::path::Display object's fmt::Display impl just uses Path::to_string_lossy(), so is there any reason Path couldn't implement fmt::Display directly and do the same?
2017-01-05 11:32:28	adrianbrink	rkruppe: ty :-)
2017-01-05 11:33:10	sfackler	excaliburHisSheath: it's there to make it more obvious that it's a lossy operation
2017-01-05 11:33:23	sfackler	unclear if it's worth it though
2017-01-05 11:33:26	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2017-01-05 11:34:06	excaliburHisSheath	sfackler: Ah, makes sense I'd guess. Personally I feel like it's not worth it but I didn't know if it was a hold-over from an older API or something.
2017-01-05 11:34:33	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-05 11:34:33	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-05 11:34:47	fqtw	where should the .env file be? for dotenv!
2017-01-05 11:35:06	◥	SilverKey (SilverKey@moz-pf5aar.biz.rr.com) has joined #rust
2017-01-05 11:36:22	◥	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has joined #rust
2017-01-05 11:36:33	fredsir	fqtw: in the root alongside Cargo.toml
2017-01-05 11:36:43	fredsir	(if you're using cargo)
2017-01-05 11:36:55	fqtw	fredsir: and in production?
2017-01-05 11:37:17	fredsir	fqtw: well, in production i would not use .env but actual environment variables
2017-01-05 11:37:37	fqtw	fredsir: how should both be unified?
2017-01-05 11:37:44	fredsir	thats how dotenv works, fqtw 
2017-01-05 11:37:56	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-05 11:38:08	fredsir	fqtw: you can have things in .env, but if you have them in environment variables, it will take precedence
2017-01-05 11:38:26	fqtw	so in production i should just not have a .env file?
2017-01-05 11:38:36	◥	Guest30 (textual@moz-7sa3i0.a82i.2ods.0260.2a01.IP) has joined #rust
2017-01-05 11:38:40	fredsir	fqtw: said in other words, dotenv looks for both variables in .env and globals in the environment, and globals in the environment has precedence
2017-01-05 11:38:48	fqtw	fredsir: do i need to cargo install diesel_cli?
2017-01-05 11:39:01	fredsir	fqtw: for dotenv? no
2017-01-05 11:39:12	fqtw	no for using diesel in the app
2017-01-05 11:39:38	◣	badon (badon@moz-c5r.91b.195.199.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:39:40	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 11:39:42	fredsir	fqtw: well, if you want to use diesel cli in production yes. For actually, so run a migration on the production db, you could use diesel cli, yes
2017-01-05 11:39:51	fredsir	for example*
2017-01-05 11:40:00	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-05 11:40:16	fqtw	fredsir: to bootstrap the app, should i create an empty db?
2017-01-05 11:40:16	◥	badon (badon@moz-c5r.91b.195.199.IP) has joined #rust
2017-01-05 11:40:36	fredsir	yeah just an empty db and run `diesel migration run`
2017-01-05 11:41:02	fqtw	fredsir: isnt it done automatically on build?
2017-01-05 11:41:06	◣	FrozenCow (FrozenCow@moz-ntgkhv.dynamic.upc.nl) has quit (Ping timeout: 121 seconds)
2017-01-05 11:41:09	fqtw	or on cargo run
2017-01-05 11:41:13	fredsir	fqtw: nope
2017-01-05 11:41:23	fqtw	the db name doesnt matter right?
2017-01-05 11:41:29	◥	afshinmeh (textual@moz-fjp2af.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-05 11:41:37	fredsir	fqtw: thats part of the DATABASE_URL variable
2017-01-05 11:41:47	fredsir	just has to match
2017-01-05 11:41:49	fqtw	yea but the app doesnt hardcode it, right?
2017-01-05 11:41:57	fqtw	so it can be any db name
2017-01-05 11:42:31	fqtw	fredsir: can i use diesel_cli to create the empty db too?
2017-01-05 11:42:39	fqtw	or only pgAdmin?
2017-01-05 11:42:39	fredsir	hmm, im not sure actually. I might think it does, but as lang as you build the app "on location" itsn o problem
2017-01-05 11:43:03	◥	Elwyn (elwyn@moz-rv4.iql.209.186.IP) has joined #rust
2017-01-05 11:43:04	◥	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 11:43:12	fredsir	fqtw: i believe you can. Use pgadmin or `createdb` that comes with postgresql
2017-01-05 11:43:17	fredsir	i believe you cant*
2017-01-05 11:43:44	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:43:47	fqtw	createdb foo?
2017-01-05 11:44:13	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-05 11:44:23	fredsir	yeah - take a look at `man createdb` to check outs what it does
2017-01-05 11:44:36	fqtw	im on windows
2017-01-05 11:44:53	fqtw	do you recommend the EnterpriseDB or BigSQL version of pg?
2017-01-05 11:44:59	fredsir	https://www.postgresql.org/docs/9.1/static/app-createdb.html
2017-01-05 11:45:15	fredsir	ohm, neither, i have no experience with any
2017-01-05 11:45:38	◣	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2017-01-05 11:45:45	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-05 11:46:21	◥	Powersource (Powersource@moz-u199ao.cust.bredband2.com) has joined #rust
2017-01-05 11:46:23	Psilidae	On windows you can probably use either, though I generally use EnterpriseDB, solely because it's what I've always used.
2017-01-05 11:46:45	fqtw	ok
2017-01-05 11:46:55	fqtw	Psilidae: 9.6.1?
2017-01-05 11:47:22	◣	sepp2k (sepp2k@moz-77cfue.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-05 11:47:35	◥	jackpot51 (jackpot51@moz-h38c14.co.comcast.net) has joined #rust
2017-01-05 11:47:43	◥	sepp2k (Sepp2k@moz-77cfue.dyn.telefonica.de) has joined #rust
2017-01-05 11:48:10	◥	tel (tel@moz-rdn.5rl.148.204.IP) has joined #rust
2017-01-05 11:48:10	◣	Altenius (Altenius@moz-3mi.gai.193.199.IP) has quit (Connection closed)
2017-01-05 11:48:26	◥	Altenius (Altenius@moz-3mi.gai.193.199.IP) has joined #rust
2017-01-05 11:48:28	◥	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust
2017-01-05 11:48:51	Psilidae	If you're not dependent upon any other systems, I'd just go with 9.6.1. Might as well go with the newest
2017-01-05 11:49:28	fqtw	ok thx
2017-01-05 11:49:42	fqtw	i just want it to work with the latest diesel and latest rust nightly
2017-01-05 11:49:53	◥	wldcordeiro (wldcordeiro@moz-e5e9o7.maon.n3es.0681.2601.IP) has joined #rust
2017-01-05 11:52:14	◣	djump (djump@moz-dkcp2c.wa.comcast.net) has quit (Connection closed)
2017-01-05 11:52:26	◥	djump (djump@moz-dkcp2c.wa.comcast.net) has joined #rust
2017-01-05 11:52:35	◥	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has joined #rust
2017-01-05 11:52:56	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-05 11:53:09	breeden1	fqtw: soon rust stable?
2017-01-05 11:53:34	fqtw	breeden1: im only using rust nightly for now..
2017-01-05 11:53:47	breeden1	*gasp*
2017-01-05 11:54:05	fqtw	breeden1: ?
2017-01-05 11:54:07	◥	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has joined #rust
2017-01-05 11:54:14	breeden1	fqtw: just teasing
2017-01-05 11:54:15	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 11:54:37	◥	machuga (machuga@moz-kuh.odq.223.162.IP) has joined #rust
2017-01-05 11:56:03	◣	khuey (khuey@moz-pd2jti.ca.comcast.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 11:56:23	◥	kulshrax (kulshrax@moz-en3jf3.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-05 11:57:16	◥	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has joined #rust
2017-01-05 11:57:23	◥	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has joined #rust
2017-01-05 11:57:29	⚡	bholley is now known as bholley_away
2017-01-05 11:57:30	◣	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-05 11:57:38	fqtw	fredsir: should .env be excluded in .gitignore?
2017-01-05 11:58:12	◥	tav (tav@moz-3b0gib.range31-52.btcentralplus.com) has joined #rust
2017-01-05 11:58:18	fredsir	fqtw: i would personally do it yeah. Its environment specific, where your machine is one environment, your colleagues is a third
2017-01-05 11:58:35	fredsir	a second of course * :P
2017-01-05 11:58:39	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:59:33	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 11:59:53	◣	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has quit (Client exited)
2017-01-05 11:59:55	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 11:59:56	fqtw	ok
2017-01-05 12:00:03	fqtw	are any rust apps using portier?
2017-01-05 12:00:10	◥	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has joined #rust
2017-01-05 12:00:29	◥	angus_i (angusai@moz-v8q.do5.71.82.IP) has joined #rust
2017-01-05 12:00:32	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-05 12:00:33	◣	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:00:36	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-05 12:00:37	◥	FrozenCow (FrozenCow@moz-ntgkhv.dynamic.upc.nl) has joined #rust
2017-01-05 12:00:40	◥	Fanaen (Fanaen@moz-hb5d8b.6rfj.92aj.0e35.2a01.IP) has joined #rust
2017-01-05 12:00:52	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Connection closed)
2017-01-05 12:00:53	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-05 12:00:55	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-05 12:01:07	◣	Jesin (Jesin@moz-a58euv.fios.verizon.net) has quit (Quit: Leaving)
2017-01-05 12:01:25	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:01:28	◣	Soichiro (Soichiro@moz-pfirh6.in.comcast.net) has quit (Quit: Leaving)
2017-01-05 12:01:47	◣	jdm (jdm@moz-547pmb.3t38.sij7.f0c8.2607.IP) has quit (Quit: )
2017-01-05 12:01:58	◣	Elwyn (elwyn@moz-rv4.iql.209.186.IP) has quit (Quit: Leaving)
2017-01-05 12:02:03	◣	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Ping timeout: 121 seconds)
2017-01-05 12:02:19	◣	angusi (angusai@moz-bbsk8m.g3dg.soik.0104.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:03:29	◣	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has quit (Connection closed)
2017-01-05 12:03:37	◣	wldcordeiro (wldcordeiro@moz-e5e9o7.maon.n3es.0681.2601.IP) has quit (Quit: WeeChat 1.5)
2017-01-05 12:03:40	◥	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 12:03:41	◥	wldcordeiro (wldcordeiro@moz-e5e9o7.maon.n3es.0681.2601.IP) has joined #rust
2017-01-05 12:03:43	◥	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has joined #rust
2017-01-05 12:06:19	◣	Seich (seich@moz-c69p98.9m7e.jh9g.9a00.2604.IP) has quit (Quit: Gone fishing.)
2017-01-05 12:06:20	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-05 12:07:08	◥	Seich (seich@moz-c69p98.9m7e.jh9g.9a00.2604.IP) has joined #rust
2017-01-05 12:07:40	◥	hansaplast (hansaplast@moz-te77l9.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-05 12:10:11	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 12:11:29	◣	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-05 12:12:06	⚡	bholley_away is now known as bholley
2017-01-05 12:12:13	◣	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 12:12:16	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 12:12:29	◥	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has joined #rust
2017-01-05 12:12:29	◣	BlueAidan (david@moz-64dvbj.in.comcast.net) has quit (Quit: leaving)
2017-01-05 12:13:00	◥	Sascha (Sascha@moz-gs1cjq.dynamic.kabel-deutschland.de) has joined #rust
2017-01-05 12:13:00	◣	woowe (Mibbit@moz-vs6l7d.osh.athenet.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-05 12:13:14	◥	ahal|afk (ahal@moz-b8e0a0.cpe.pppoe.ca) has joined #rust
2017-01-05 12:13:18	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 12:14:12	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-05 12:14:12	◣	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has quit (Client exited)
2017-01-05 12:14:15	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:14:35	◣	mxmz (herb@moz-oph.qbr.88.219.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:14:55	Rolph	Performancewise how well does the standard Hashmap perform if you sub out the hash function for something fast?
2017-01-05 12:15:14	◣	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has quit (Client exited)
2017-01-05 12:15:51	◥	petso (petson@moz-qaqesm.dyn.telefonica.de) has joined #rust
2017-01-05 12:15:53	◣	Sascha (Sascha@moz-gs1cjq.dynamic.kabel-deutschland.de) has quit (Connection closed)
2017-01-05 12:16:12	◣	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 12:16:25	◥	montanonic (nicholas@moz-u3evs7.or.comcast.net) has joined #rust
2017-01-05 12:16:29	◥	k0pernicus (k0pernicus@moz-anv6r0.d4qr.r60c.0e35.2a01.IP) has joined #rust
2017-01-05 12:16:34	@steveklabnik	Rolph: that depends on a lot of things
2017-01-05 12:16:45	◥	Binero (Binero@moz-2gc2ul.isp.belgacom.be) has joined #rust
2017-01-05 12:16:48	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-05 12:17:27	◣	mada (mariano@moz-m9o.u4d.191.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:18:02	◣	crowder (ec2-user@moz-fj7q38.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-05 12:18:08	◣	bitgin (tburdick@moz-h4sk11.7npb.p36n.0241.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:18:15	◥	pylbrecht (pylbrecht@moz-rhd91h.leu1.nofh.8109.2a02.IP) has joined #rust
2017-01-05 12:18:32	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-05 12:19:00	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-05 12:20:42	◣	Binero (Binero@moz-2gc2ul.isp.belgacom.be) has quit (Client exited)
2017-01-05 12:21:04	sleffy	Is there a nice way to convert a Vec<T> to an Rc<[T]>?
2017-01-05 12:22:51	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:24:47	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 12:25:00	Sergio	Is there a way to tell Rust not to scope a module under a directory/file?
2017-01-05 12:25:06	◣	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has quit (Connection closed)
2017-01-05 12:25:16	Sergio	I want to create a "fake" module that varies using conditional compilation.
2017-01-05 12:25:33	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2017-01-05 12:25:36	Sergio	But the `mod`s inside that module refer to files in the parent module, not the "fake" module.
2017-01-05 12:25:52	◥	ubsandroid_ (ubsan@moz-2an7t4.pi10.ubiv.fb90.2607.IP) has joined #rust
2017-01-05 12:25:54	◥	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has joined #rust
2017-01-05 12:26:14	◣	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:26:20	Sergio	IE, I have: #[cfg(b)] mod a { mod b; use b::d } #[cfg(c)] mod a { mod c; use c::d } use a::d
2017-01-05 12:26:44	Sergio	But `b` and `c` are inside the parent, not `a`.
2017-01-05 12:27:10	◥	sgflt (sgflt@moz-ub20o3.dip0.t-ipconnect.de) has joined #rust
2017-01-05 12:27:16	Sergio	I thought maybe I could use a `path = ../a` for the inner mod b and c, but no-go.
2017-01-05 12:28:11	◥	veeti (veeti@moz-riletc.rojekti.fi) has joined #rust
2017-01-05 12:28:29	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-05 12:28:34	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 12:28:35	◥	jrmuizel (jrmuizel@moz-qio.7l0.114.24.IP) has joined #rust
2017-01-05 12:28:42	◥	jdm_ (jdm@moz-brih4e.0i4r.6uu5.8d80.2605.IP) has joined #rust
2017-01-05 12:29:07	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (A TLS packet with unexpected length was received.)
2017-01-05 12:29:11	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:31:00	Sergio	Maybe that just isn't possible.
2017-01-05 12:32:23	◥	Binero (Binero@moz-2gc2ul.isp.belgacom.be) has joined #rust
2017-01-05 12:32:59	sfackler	Sergio: seems like you just need to do "use a::b::d" or "use self::b::d"?
2017-01-05 12:33:15	sfackler	pub use I guess if you want the "use a::d" to work
2017-01-05 12:33:20	Sergio	That's not where the issue is.
2017-01-05 12:33:28	Sergio	The issue is with the `mod b` inside of `mod a`.
2017-01-05 12:33:31	◥	futile (felix@moz-ct43fm.dip0.t-ipconnect.de) has joined #rust
2017-01-05 12:33:50	Sergio	Since Rust will look for a/b/mod.rs of a/b.rs, but the file is just b.rs
2017-01-05 12:33:54	Sergio	Unless I'm misunderstanding.
2017-01-05 12:33:56	sfackler	oh right
2017-01-05 12:34:08	ted	well that was a fun little lark: https://github.com/luser/rust-makecab
2017-01-05 12:34:19	sfackler	#[path = "../b.rs"] mod b; might do it?
2017-01-05 12:35:03	Sergio	That's what I tried, but Rust doesn't normalize the path before it checks if it's valid, so the path looks like: a/../b.rs, but `a` doesn't exist.
2017-01-05 12:35:07	ted	i dunno why microsoft's makecab is so slow, maybe because it supports a zillion features, but this version is like 30% faster at compressing a single large file on my machine
2017-01-05 12:35:28	_habnabit	indeed, features make software slow
2017-01-05 12:35:44	Sergio	Would be nice if it did so that such a thing would work.
2017-01-05 12:35:46	Centril	how does one get access to fn clone_from_slice(&mut self, src: &[T]) on the primitive type slice ?
2017-01-05 12:35:52	◥	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2017-01-05 12:35:57	_habnabit	Centril, 'access'?
2017-01-05 12:36:04	Centril	_habnabit: as a function pointer / closure
2017-01-05 12:36:06	breeden1	ted: cab files are for creating installers or cache files?
2017-01-05 12:36:20	ted	breeden1: microsoft uses them all over the place, they do use them in installers
2017-01-05 12:36:21	rkruppe	Centril: <[T]>::clone_from_slice?
2017-01-05 12:36:21	breeden1	ehh, by cache files i mean compressed history
2017-01-05 12:36:26	talchas	Sergio: #[path="."] mod a { mod d; }
2017-01-05 12:36:36	ted	breeden1: but it's also what you use for compressed files on a symbol server
2017-01-05 12:36:44	Sergio	That works? I think I tried that, and it didn't.
2017-01-05 12:36:46	breeden1	symbol server?
2017-01-05 12:36:47	▷	Sergio tries again.
2017-01-05 12:37:00	ted	...and we do that in every firefox build and it's slow to compress our 600MB xul.pdb
2017-01-05 12:37:07	ted	breeden1: microsoft's debuggers have a neat feature where you can fetch debug symbols over the internet
2017-01-05 12:37:19	breeden1	what
2017-01-05 12:37:21	ted	https://developer.mozilla.org/en-US/docs/Using_the_Mozilla_symbol_server
2017-01-05 12:37:27	ted	it's pretty sweet
2017-01-05 12:37:27	◣	jrmuizel (jrmuizel@moz-qio.7l0.114.24.IP) has quit (Connection closed)
2017-01-05 12:37:47	Centril	rkruppe: thanks, that worked wonders
2017-01-05 12:37:47	breeden1	ya, pretty sure that's just witch craft
2017-01-05 12:37:53	ted	you can attach a debugger to a firefox release build, follow those steps, and debug it like you built it locally
2017-01-05 12:37:58	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 12:38:25	Sergio	talchas: Huh, thought I'd tried that already.
2017-01-05 12:38:30	Sergio	Thank you!
2017-01-05 12:39:07	◥	Jesin (Jesin@moz-a58euv.fios.verizon.net) has joined #rust
2017-01-05 12:39:07	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 12:39:26	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-05 12:40:51	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 12:41:43	◥	khj1 (Thunderbird@moz-d0umvn.dynamic.jazztel.es) has joined #rust
2017-01-05 12:43:01	◣	khj (Thunderbird@moz-98jocd.dynamic.jazztel.es) has quit (Ping timeout: 121 seconds)
2017-01-05 12:43:01	⚡	khj1 is now known as khj
2017-01-05 12:43:56	◣	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2017-01-05 12:44:45	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:44:52	◥	pengowen (Mibbit@moz-1msp9g.client.mchsi.com) has joined #rust
2017-01-05 12:45:26	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2017-01-05 12:46:31	◥	bjz (bjz@moz-idi.as2.222.104.IP) has joined #rust
2017-01-05 12:47:12	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Connection closed)
2017-01-05 12:47:33	◥	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has joined #rust
2017-01-05 12:47:40	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-05 12:48:07	◣	k0pernicus (k0pernicus@moz-anv6r0.d4qr.r60c.0e35.2a01.IP) has quit (Quit: Leaving)
2017-01-05 12:48:43	◣	YaLTeR (YaLTeR@moz-muk.do7.220.77.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 12:48:47	◣	jimb (user@moz-c3a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:48:50	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 12:48:54	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-05 12:49:08	◥	bjz_ (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-05 12:50:39	◣	bjz (bjz@moz-idi.as2.222.104.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:51:27	◣	ubsandroid_ (ubsan@moz-2an7t4.pi10.ubiv.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:51:43	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:51:57	◥	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has joined #rust
2017-01-05 12:52:24	◥	ubsandroid (ubsan@moz-2an7t4.pi10.ubiv.fb90.2607.IP) has joined #rust
2017-01-05 12:53:39	◣	junqed (junqed@moz-n8f.kgr.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 12:54:06	◥	junqed (junqed@moz-n8f.kgr.70.178.IP) has joined #rust
2017-01-05 12:54:26	◣	meh (meh@moz-kpd.8ae.41.151.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 12:55:16	◥	bereddy (bereddy@moz-2e6qc0.fios.verizon.net) has joined #rust
2017-01-05 12:55:18	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 12:55:33	zmanian	Is there a way to conditionally define the type of member of a struct in a macro?   
2017-01-05 12:55:47	_habnabit	only by using $( )
2017-01-05 12:55:57	_habnabit	wait
2017-01-05 12:56:00	zmanian	ooh what is $()
2017-01-05 12:56:08	◥	kermie (Mibbit@moz-p16.005.136.209.IP) has joined #rust
2017-01-05 12:56:10	_habnabit	conditionally define the type? what are the conditions?
2017-01-05 12:56:12	◥	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2017-01-05 12:56:13	sleffy	...conditionally define the type of a member of a struct?
2017-01-05 12:56:18	sleffy	Is the macro producing the struct?
2017-01-05 12:56:21	zmanian	yes
2017-01-05 12:56:27	sleffy	You could just pass in the type
2017-01-05 12:56:33	sleffy	as a `$memtype:ty` fragment
2017-01-05 12:56:37	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Connection closed)
2017-01-05 12:56:47	zmanian	yeah ideally that depends on something I'm passing in
2017-01-05 12:56:48	◣	kermie (Mibbit@moz-p16.005.136.209.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-05 12:57:12	Binero	What should be done in Rust when Err types have multiple lines? 
2017-01-05 12:57:19	zmanian	It's actually the double the width of what I pass in
2017-01-05 12:57:21	Binero	It looks a bit funny on a panic! as it's printed inline 
2017-01-05 12:57:35	_habnabit	zmanian, the only way to do that would be by making more macro arms; you can't do branching in a macro except when considering its input
2017-01-05 12:57:38	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-05 12:57:48	zmanian	Thanks!
2017-01-05 12:57:49	_habnabit	Binero, i see people put two leading/trailing newlines in the string
2017-01-05 12:58:06	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 12:58:08	◣	junqed (junqed@moz-n8f.kgr.70.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:58:16	Binero	I see
2017-01-05 12:59:08	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 12:59:08	_habnabit	zmanian, https://danielkeep.github.io/tlborm/book/pat-internal-rules.html
2017-01-05 12:59:20	◣	gingermusketeer (gingermuske@moz-57eiau.compute.amazonaws.com) has quit (Connection closed)
2017-01-05 12:59:26	◥	gingermusketeer (gingermuske@moz-icqrsk.compute.amazonaws.com) has joined #rust
2017-01-05 12:59:33	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-05 12:59:42	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 12:59:42	◣	JuanMiguel (JuanMiguel@moz-esg6ur.dynamicip.rima-tde.net) has quit (Quit: Saliendo)
2017-01-05 12:59:52	◥	alx741 (alx741@moz-ohv.crf.152.190.IP) has joined #rust
2017-01-05 12:59:54	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-05 13:00:05	◣	the_2nd (the_2nd@moz-v87043.sijg.c1oi.8070.2a02.IP) has quit (Quit: Leaving)
2017-01-05 13:00:40	◣	kulshrax (kulshrax@moz-en3jf3.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 13:00:43	◣	Guest30 (textual@moz-7sa3i0.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 13:01:00	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-05 13:01:00	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-05 13:01:32	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-05 13:01:32	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-05 13:02:06	◣	alx741_ (alx741@moz-k6o.639.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:02:07	◥	dionysus70 (Thunderbird@moz-f3r.u5k.134.178.IP) has joined #rust
2017-01-05 13:02:22	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:02:22	⚡	dionysus70 is now known as dionysus69
2017-01-05 13:02:37	◣	tel (tel@moz-rdn.5rl.148.204.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-05 13:02:50	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 13:02:50	◣	refold (refold@moz-lkj.2mj.172.188.IP) has quit (Quit: leaving)
2017-01-05 13:03:31	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-05 13:04:33	◣	Binero (Binero@moz-2gc2ul.isp.belgacom.be) has quit (Client exited)
2017-01-05 13:04:40	Centril	ubsandroid ubsan: implemented the changes you suggested + a bit more
2017-01-05 13:04:44	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-05 13:04:54	Centril	here they are:
2017-01-05 13:04:56	Centril	https://github.com/Centril/rfcs/blob/749909c9e3858385d7d131ff4a4ac0ccd8a56ff4/0000-from-slice-to-rc-slice.md
2017-01-05 13:05:07	Centril	sfackler: if you can proofread, that'd be nice ^
2017-01-05 13:05:08	◣	afshinmeh (textual@moz-fjp2af.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 13:06:32	◥	afshinmeh (textual@moz-5tcce4.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-05 13:06:45	◣	bschaefer (bschaefer@moz-6rr.8im.18.24.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:07:11	Centril	steveklabnik: ^
2017-01-05 13:07:30	@steveklabnik	cool
2017-01-05 13:07:54	◣	m4b (user@moz-8dmoql.ecei.5lka.0645.2601.IP) has quit (Connection closed)
2017-01-05 13:08:15	◣	mandeep (mandeep@moz-g8d.s9e.95.209.IP) has quit (Quit: Leaving)
2017-01-05 13:08:19	◥	kulshrax (kulshrax@moz-uq1iib.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-05 13:09:32	sfackler	Centril: i'd vote for supporting Arc while we're at it but +1
2017-01-05 13:09:48	⚡	rail is now known as rail-away
2017-01-05 13:10:03	Centril	sfackler: I agree =)
2017-01-05 13:10:16	Centril	but I left it open to have some discussion
2017-01-05 13:11:09	◣	M2Ys4U (m2ys4u@moz-2mdvps.81.in-addr.arpa) has quit (Ping timeout: 121 seconds)
2017-01-05 13:11:13	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-05 13:12:29	◥	ariasuni (ariatsuni@moz-ku7jfh.fbx.proxad.net) has joined #rust
2017-01-05 13:12:57	◣	kybishop (kybishop@moz-5g2.kjf.88.146.IP) has quit (Connection closed)
2017-01-05 13:13:23	◥	kybishop (kybishop@moz-srk.2aq.88.146.IP) has joined #rust
2017-01-05 13:13:56	Centril	steveklabnik: sfackler: should the PR squash the commits into 1 ?
2017-01-05 13:14:00	◣	kybishop (kybishop@moz-srk.2aq.88.146.IP) has quit (Connection closed)
2017-01-05 13:14:08	breeden1	T: Clone, is T: Copy necessary?
2017-01-05 13:14:13	sfackler	not a huge detail but I usually do
2017-01-05 13:14:16	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-05 13:14:45	Centril	breeden1: faster implementation for Copy:able types
2017-01-05 13:14:47	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 13:14:56	breeden1	how so?
2017-01-05 13:15:00	Centril	breeden1: essentially a memcpy
2017-01-05 13:15:11	breeden1	s.clone() on a copy type is a memcpy
2017-01-05 13:15:14	Centril	at least for &[u8]
2017-01-05 13:15:22	◥	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 13:15:40	breeden1	well, let me continue reading, maybe it will be clarified in the text
2017-01-05 13:15:44	◥	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has joined #rust
2017-01-05 13:16:05	◣	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-05 13:16:06	FreeFull	Copy implies Clone
2017-01-05 13:16:21	◣	anjumkaiser (anjumkaiser@moz-11r.5cv.50.39.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:16:27	Centril	breeden1:  well, is dst.clone_from_slice(src)  still 1x memcpy for the whole thing?
2017-01-05 13:16:48	bluss	Centril: the compiler can make it so sometimes, depending on element type
2017-01-05 13:16:56	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:16:56	rkruppe	couldn't it be specialized?
2017-01-05 13:17:27	bluss	Yeah. Don't we even have the policy decision that allows it too?
2017-01-05 13:17:53	bluss	https://github.com/rust-lang/rfcs/pull/1521
2017-01-05 13:17:54	Centril	rkruppe: I did specialize it, but clone_from_slice is not not specialized since not a trait
2017-01-05 13:18:03	rkruppe	std can specialize it
2017-01-05 13:18:19	◥	Eisfreak7 (Eisfreak7@moz-n71u3v.pools.vodafone-ip.de) has joined #rust
2017-01-05 13:18:47	Centril	bluss: right, but that is one clone - I am doing a clone of a slice, not one element
2017-01-05 13:19:10	Centril	and the clone of the entire slice should be just one memcpy
2017-01-05 13:19:19	bluss	depends on the element type
2017-01-05 13:19:29	breeden1	https://github.com/rust-lang/rust/blob/master/src/libcore/slice.rs#L504
2017-01-05 13:19:38	Centril	bluss: for &[u8] in this case
2017-01-05 13:19:54	breeden1	yeah, idk, i'd be surprised if LLVM didn't trigger induction here
2017-01-05 13:21:30	Centril	what does copy_from_slice do in case  size_of::<T>() > 1 ? i.e: not u8
2017-01-05 13:21:58	Centril	(what does ptr::copy_nonoverlapping(...) do in the same case)
2017-01-05 13:22:17	hexagoxel	why do all languages have to do case/match in a slightly different fashion? scalas "foo match" vs rust "match foo" is rather annoying to rewire in my brain :/
2017-01-05 13:23:07	◣	jdm_ (jdm@moz-brih4e.0i4r.6uu5.8d80.2605.IP) has quit (Quit: )
2017-01-05 13:23:08	Centril	it stands to reason that it should still be a memcpy since you can just multiply the length by  size_of::<T: Copy>()
2017-01-05 13:23:15	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Connection closed)
2017-01-05 13:23:15	Centril	breeden1: rkruppe breeden1 ^
2017-01-05 13:23:42	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-05 13:23:46	breeden1	it'd be nice if std can specialize it indeed
2017-01-05 13:24:02	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Connection closed)
2017-01-05 13:24:09	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-05 13:24:30	Centril	hexagoxel: case foo of <--- haskell, also with LambdaCase:  \case
2017-01-05 13:25:54	breeden1	Centril: i see, you explained it further in the RFC.  It looks pretty  good so far
2017-01-05 13:26:22	Centril	breeden1: since it is so little extra code, should I, in your opinion, keep it as-in in case it produces better LLVM output - at least for now ?
2017-01-05 13:26:27	◥	niconii (nicole@moz-6cgac3.midco.net) has joined #rust
2017-01-05 13:26:27	⚡	Mode #rust [+ao niconii niconii] by ChanServ
2017-01-05 13:27:19	◥	TechnoCrunch (TechnoCrunc@moz-ant.ip3.100.101.IP) has joined #rust
2017-01-05 13:27:38	◥	nkr (nkr@moz-p2a.qp2.141.177.IP) has joined #rust
2017-01-05 13:28:38	breeden1	Centril: yeah, i'd say just leave it.  There seems to be a good reason that copy_from_slice and clone_from_slice are two different methods, even though the clone_from_slice docs mention that it should be optimized to a copy by the llvm for when T=u8
2017-01-05 13:28:50	Centril	=)
2017-01-05 13:28:54	hexagoxel	Centril: i know, but strangely my haskell habits don't affect this as much; probably because they are completely different keywords.
2017-01-05 13:28:54	◣	bjz_ (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 13:29:09	breeden1	and I'm sure there will be discussion about it on github by people who know more about this kind of stuff than me
2017-01-05 13:29:13	◥	jdm (jdm@moz-a80tgu.0i4r.6uu5.8d80.2605.IP) has joined #rust
2017-01-05 13:29:13	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-05 13:29:39	Centril	sfackler: hmm... is there some neat feature on github to make a PR with squash ?
2017-01-05 13:30:00	hexagoxel	Centril: the maintainer can squash a PR iirc
2017-01-05 13:30:35	◥	dm3_ (dm3@moz-urssv3.static.zebra.lt) has joined #rust
2017-01-05 13:30:38	◣	TheCycoONE (quassel@moz-d4s.1g6.223.162.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 13:31:05	hexagoxel	but if you want to squash before opening, you probably need to do it manually
2017-01-05 13:31:21	Centril	hexagoxel: right, i guess I'll open a new branch and squash there
2017-01-05 13:31:32	◥	wallacoloo____ (colin@moz-actvqc.dhcp4.washington.edu) has joined #rust
2017-01-05 13:31:33	Centril	(I should have opened a new branch at the get go, but forgot)
2017-01-05 13:31:42	◣	nkr (nkr@moz-p2a.qp2.141.177.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:32:40	◣	dm3 (dm3@moz-urssv3.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2017-01-05 13:33:25	◣	petso (petson@moz-qaqesm.dyn.telefonica.de) has quit (Client exited)
2017-01-05 13:34:55	◥	anjumkaiser (anjumkaiser@moz-11r.5cv.50.39.IP) has joined #rust
2017-01-05 13:35:01	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-05 13:35:18	◥	mxmz (herb@moz-tpr.qbr.88.219.IP) has joined #rust
2017-01-05 13:36:26	◥	william (william@moz-g7bo5r.ca.comcast.net) has joined #rust
2017-01-05 13:36:38	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Client exited)
2017-01-05 13:36:41	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-05 13:37:13	◣	Eisfreak7 (Eisfreak7@moz-n71u3v.pools.vodafone-ip.de) has quit (Quit: WeeChat 1.6)
2017-01-05 13:37:37	◣	dm3_ (dm3@moz-urssv3.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2017-01-05 13:37:52	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-05 13:39:19	◣	ahal|afk (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-05 13:39:41	◣	ubsandroid (ubsan@moz-2an7t4.pi10.ubiv.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:41:01	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-05 13:41:48	◥	Dryvnt (Dryvnt@moz-ude.3n1.56.185.IP) has joined #rust
2017-01-05 13:42:01	◣	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:42:07	◥	sepp2k1 (sepp2k@moz-77cfue.dyn.telefonica.de) has joined #rust
2017-01-05 13:42:22	◣	Dryvnt (Dryvnt@moz-ude.3n1.56.185.IP) has quit (Quit: Leaving)
2017-01-05 13:42:35	◥	Dryvnt (Dryvnt@moz-ude.3n1.56.185.IP) has joined #rust
2017-01-05 13:42:59	◣	playbot (playbot@moz-t76o6j.compute.amazonaws.com) has quit (Connection closed)
2017-01-05 13:43:14	◥	alx741_ (alx741@moz-8e1.qnp.152.190.IP) has joined #rust
2017-01-05 13:43:19	◥	dm3 (dm3@moz-urssv3.static.zebra.lt) has joined #rust
2017-01-05 13:43:23	◥	playbot (playbot@moz-t76o6j.compute.amazonaws.com) has joined #rust
2017-01-05 13:43:23	⚡	Mode #rust [+v playbot] by ChanServ
2017-01-05 13:43:23	◥	playbot-mini (playbot-min@moz-t76o6j.compute.amazonaws.com) has joined #rust
2017-01-05 13:43:23	⚡	Mode #rust [+v playbot-mini] by ChanServ
2017-01-05 13:44:13	◥	meh (meh@moz-kpd.8ae.41.151.IP) has joined #rust
2017-01-05 13:44:49	◥	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 13:45:05	⚡	bholley is now known as bholley_away
2017-01-05 13:45:32	◣	canaltinova (uid191250@moz-l3qbqh.tooting.irccloud.com) has quit (Quit: )
2017-01-05 13:45:39	◣	eneas (eneas@moz-3oju82.dynamicip.rima-tde.net) has quit (Client exited)
2017-01-05 13:45:51	◥	bitgin (tburdick@moz-on9m01.pools.spcsdns.net) has joined #rust
2017-01-05 13:45:52	◣	alx741 (alx741@moz-ohv.crf.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:45:52	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 13:45:54	◥	eneas (eneas@moz-3oju82.dynamicip.rima-tde.net) has joined #rust
2017-01-05 13:46:10	◣	sepp2k1 (sepp2k@moz-77cfue.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-05 13:46:37	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-05 13:48:06	Centril	Finally, done: https://github.com/rust-lang/rfcs/pull/1845
2017-01-05 13:48:08	shahn	how long after updating a pull request is it polite to wait before asking for feedback?
2017-01-05 13:48:20	@steveklabnik	shahn: which PR?
2017-01-05 13:48:31	shahn	https://github.com/rust-lang/rust/pull/38636
2017-01-05 13:48:48	Centril	breeden1: ubsan steveklabnik rkruppe bluss sfackler: ^
2017-01-05 13:48:55	shahn	It's not been long. Just wondering in general :)
2017-01-05 13:49:02	shahn	Centril: congrats on your first RFC!
2017-01-05 13:49:08	Centril	now, time for some icecream... laters!
2017-01-05 13:49:15	Centril	shahn: many thanks!
2017-01-05 13:49:17	@steveklabnik	grats!
2017-01-05 13:49:31	Centril	steveklabnik: <3
2017-01-05 13:49:48	◥	ubsandroid (ubsan@moz-2an7t4.pi10.ubiv.fb90.2607.IP) has joined #rust
2017-01-05 13:50:19	@steveklabnik	shahn: normally i'd give it about a week, but i just left a comment :)
2017-01-05 13:51:14	◣	ggrochow (ggrochow@moz-9as.smm.64.50.IP) has quit (Quit: Lost terminal)
2017-01-05 13:51:26	shahn	steveklabnik: ok :) The thing that made me wonder is that to me, it's pretty opaque how the whole thing is handled, like who needs to say yay or nay etc. I guess that gets easier with more PRs. And my previous PRs were merged within a few hours most of the time :)
2017-01-05 13:52:03	◥	tyoc213 (tyoc@moz-geq.1mu.58.209.IP) has joined #rust
2017-01-05 13:52:09	@steveklabnik	shahn: yeah, i hear you. in general, the person assigned the PR is the one responsible for making sure that feedback is replied to promptly
2017-01-05 13:52:17	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-05 13:53:16	◣	sleffy (sleffy@moz-sq7i0d.4f2e.erii.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:53:16	shahn	thanks anyways :)
2017-01-05 13:54:00	◥	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has joined #rust
2017-01-05 13:54:23	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 13:54:48	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 13:55:00	◥	tel (tel@moz-0jh5f2.ma.comcast.net) has joined #rust
2017-01-05 13:55:54	◥	boxofrox (charetjc@moz-podugf.hfc.comcastbusiness.net) has joined #rust
2017-01-05 13:55:54	◥	p0x (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 13:55:57	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-05 13:56:09	◣	p0x (ggrochow@moz-9as.smm.64.50.IP) has quit (Quit: leaving)
2017-01-05 13:57:15	◣	djump (djump@moz-dkcp2c.wa.comcast.net) has quit (Connection closed)
2017-01-05 13:57:27	◥	djump (djump@moz-dkcp2c.wa.comcast.net) has joined #rust
2017-01-05 13:58:01	◥	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has joined #rust
2017-01-05 13:58:02	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-05 13:58:14	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-05 13:58:45	◣	ashish_ (chatzilla@moz-7njfol.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:58:50	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-05 13:58:50	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 13:58:55	◣	futile (felix@moz-ct43fm.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-05 13:59:03	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-05 13:59:15	◣	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-05 13:59:19	Dryvnt	Does anyone know a way to use Serde to serialize into bytes, just raw flat byte data -> Vec<u8>? Bincode has some headings for array sizes (and my enum fills 4 bytes when size_of = 1)
2017-01-05 13:59:25	Dryvnt	Do I have to write my own serializer?
2017-01-05 13:59:51	◥	himikof (Mibbit@moz-chg.8u9.92.93.IP) has joined #rust
2017-01-05 13:59:58	◥	dinfuehr1 (dominik@moz-e4s702.highway.telekom.at) has joined #rust
2017-01-05 14:00:02	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-05 14:00:14	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-05 14:00:17	◥	p0x (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 14:01:00	Dryvnt	I guess what I'm looking for is really a way to copy the memory contents of a struct into a vector, no necessary need to use Serde for that
2017-01-05 14:01:02	Freyskeyd	hi
2017-01-05 14:01:32	Freyskeyd	i would like to do a tcp ping/pong, but i can't make the "pong" work.. https://is.gd/fZkGdt  can someone help me with that plz?
2017-01-05 14:02:11	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:03:00	◥	futile (felix@moz-ct43fm.dip0.t-ipconnect.de) has joined #rust
2017-01-05 14:04:18	◥	rkruppe_ (rkruppe@moz-c6skn4.unity-media.net) has joined #rust
2017-01-05 14:04:34	◣	ghosss (textual@moz-rr8npu.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-05 14:04:46	◣	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has quit (NickServ (RECOVER command used by rkruppe_))
2017-01-05 14:04:46	⚡	rkruppe_ is now known as rkruppe
2017-01-05 14:04:59	◥	rschifflin (randy@moz-a0huqg.lv.cox.net) has joined #rust
2017-01-05 14:05:46	◥	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has joined #rust
2017-01-05 14:06:06	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-05 14:06:26	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-05 14:06:51	◣	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:07:11	adrianbrink	What is the best way to write a rate limiting API?
2017-01-05 14:08:12	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-05 14:08:18	sfackler	Dryvnt: check out the abomination crate
2017-01-05 14:08:31	talchas	Freyskeyd: you're doing read_to_end(), so you either need to instead do some other sort of read or shutdown the write end after writing ping
2017-01-05 14:08:51	Freyskeyd	talchas: yeah i see it :) thank's 
2017-01-05 14:09:47	Dryvnt	sfackler: Google shows nothing, I assume you're pulling my leg :) 
2017-01-05 14:10:01	◣	hansaplast (hansaplast@moz-te77l9.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2017-01-05 14:10:18	sfackler	Dryvnt: https://github.com/frankmcsherry/abomonation
2017-01-05 14:10:26	sfackler	oh it's abomonation
2017-01-05 14:10:28	◥	hansaplast (hansaplast@moz-te77l9.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-05 14:10:58	Dryvnt	Oh, thanks. This is exactly what I needed, I think. And it's mortifying.
2017-01-05 14:11:02	◣	p0x (ggrochow@moz-9as.smm.64.50.IP) has quit (Quit: Lost terminal)
2017-01-05 14:11:04	bluss	Centril: the part about RcBox and repr(C) is probably not an issue. With struct RcBox<T: ?Sized> { usize, usize, T } it does not have a choice of representation, the T must be last to have the DST possiblity work out
2017-01-05 14:11:06	Dryvnt	I wouldn't do it this way if I had the choice. But I don't.
2017-01-05 14:11:06	◥	Jobava (uid133806@moz-vm3786.stonehaven.irccloud.com) has joined #rust
2017-01-05 14:11:20	◥	p0x (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 14:11:27	Dryvnt	The remote server expects a tightly packed data structure
2017-01-05 14:11:38	◣	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has quit (Client exited)
2017-01-05 14:12:15	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:12:17	◥	bollu (bollu@moz-9i1.k6o.139.14.IP) has joined #rust
2017-01-05 14:12:33	◣	Altenius (Altenius@moz-3mi.gai.193.199.IP) has quit (Connection closed)
2017-01-05 14:12:58	◥	Altenius (Altenius@moz-3mi.gai.193.199.IP) has joined #rust
2017-01-05 14:13:29	◥	ahal|afk (ahal@moz-b8e0a0.cpe.pppoe.ca) has joined #rust
2017-01-05 14:13:35	rkruppe	bluss: but the two usizes could be swapped
2017-01-05 14:14:24	◣	kdlv (kdlv@moz-p88oti.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2017-01-05 14:14:31	◣	hansaplast (hansaplast@moz-te77l9.ve71.89v9.120b.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:14:31	Dryvnt	"Very important: Abomonation reproduces the memory as laid out by the serializer, which can reveal architectural variations. Data encoded on a 32bit big-endian machine will not decode properly on a 64bit little-endian machine." - Welp. Not even abomonation can handle my problem. Oh well. I wouldn't want the bad taste I get from using it anyway. I'll just make a manual implementation
2017-01-05 14:14:46	Dryvnt	But thanks sfackler, it was very helpful to at least research it a bit.
2017-01-05 14:15:03	sfackler	np
2017-01-05 14:15:04	◥	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has joined #rust
2017-01-05 14:15:25	bluss	rkruppe: that optimization would break rustc itself since it uses homogenous tuple <-> slice equivalence
2017-01-05 14:15:36	bluss	rkruppe: so hopefully not
2017-01-05 14:16:03	rkruppe	rustc can change
2017-01-05 14:16:04	bluss	as it was implemented, the sort was stable, so the equivalent fields could not be swapped
2017-01-05 14:16:18	◣	sebasmagri (user@moz-l4s.upu.146.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:16:20	◣	bollu (bollu@moz-9i1.k6o.139.14.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:16:45	◥	rakm (rakm@moz-3aoh1g.sntcca.sbcglobal.net) has joined #rust
2017-01-05 14:16:52	simulacrum	The last field isn't reordered in camlorn's implementation of reordering no matter what, IIRC
2017-01-05 14:17:31	rkruppe	layout of repr(Rust) is unspecified, period
2017-01-05 14:18:27	rkruppe	the current optimization is as much of an implementation detail as the lack of onw before
2017-01-05 14:18:41	bluss	and the implementation of RcBox is an implementation detail too
2017-01-05 14:18:47	◣	kulshrax (kulshrax@moz-uq1iib.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:18:55	rkruppe	yeah
2017-01-05 14:18:55	bluss	using repr(C) is nonsensical for it
2017-01-05 14:19:21	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-05 14:19:38	◥	bschaefer (bschaefer@moz-6rr.8im.18.24.IP) has joined #rust
2017-01-05 14:20:23	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 14:20:33	◣	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has quit (Client exited)
2017-01-05 14:21:28	◣	Sanqui (SanquiG@moz-33aens.net) has quit (Ping timeout: 121 seconds)
2017-01-05 14:21:31	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-05 14:21:32	◥	mpdrescher (Thunderbird@moz-9us6lu.dip0.t-ipconnect.de) has joined #rust
2017-01-05 14:21:32	◣	mpdrescher (Thunderbird@moz-9us6lu.dip0.t-ipconnect.de) has quit (Client exited)
2017-01-05 14:22:18	◣	wallacoloo____ (colin@moz-actvqc.dhcp4.washington.edu) has quit (Client exited)
2017-01-05 14:22:53	Centril	bluss: for RcBox?
2017-01-05 14:23:11	Centril	bluss: you have to have a linear layout for From<&str> for Rc<str> to work
2017-01-05 14:23:21	Centril	or at least you have to know the layout somehow
2017-01-05 14:23:58	◣	Douman (Douman@moz-10nfof.dynamic.mts-nn.ru) has quit (Quit: )
2017-01-05 14:23:59	Centril	if there was a way to query the layout of repr(Rust) then you could use that
2017-01-05 14:25:00	⚡	bholley_away is now known as bholley
2017-01-05 14:25:16	◥	m4b (user@moz-ih8.7si.9.216.IP) has joined #rust
2017-01-05 14:25:51	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 14:26:38	◣	toby_s (toby_s@moz-bp5qol.sk83.bjud.7e00.2a01.IP) has quit (Quit: ZNC - http://znc.in)
2017-01-05 14:26:39	m4b	impl<T> AsRef<[u8]> for Cursor<T> where T: AsRef<[u8]> should be possible right (and if so why not, it's very important imho)?
2017-01-05 14:27:26	◥	toby_s (toby_s@moz-bp5qol.sk83.bjud.7e00.2a01.IP) has joined #rust
2017-01-05 14:27:54	Centril	m4b: sounds like a case of orphan rules problems - i.e: doesnt work with coherence, since neither AsRef, u8, Cursor are implemented in your crate
2017-01-05 14:28:08	◥	akubera (Adium@moz-igepjd.asc.ohio-state.edu) has joined #rust
2017-01-05 14:28:15	m4b	Centril: I know, i'm saying it should be implemented by Cursor and it was a deep oversight
2017-01-05 14:28:15	◣	bitgin (tburdick@moz-on9m01.pools.spcsdns.net) has quit (Connection closed)
2017-01-05 14:28:22	m4b	considering most uses of Cursor are working with bytes
2017-01-05 14:28:51	◣	montanonic (nicholas@moz-u3evs7.or.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 14:28:52	Centril	m4b: never used it, but if you think it's an oversight, make an RFC
2017-01-05 14:29:16	◣	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-05 14:29:35	m4b	so e.g., the only use case I have right now for specialization is conflicting impls for: impl<T> FooTrait for T where T: AsRef<[u8]> and impl<T> FooTrait for Cursor<T> where T: AsRef<[u8]>; this is entirely removed if Cursor simply implemented that very important trait
2017-01-05 14:30:02	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-05 14:30:03	◣	jdm (jdm@moz-a80tgu.0i4r.6uu5.8d80.2605.IP) has quit (Connection closed)
2017-01-05 14:30:09	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-05 14:30:29	m4b	but people put all kinds of things in Cursors, like &[u8], Vec<[u8]>, &Vec<[u8]>, etc
2017-01-05 14:30:51	◥	dpc (dpc@moz-mf3448.qbof.ad6b.0646.2601.IP) has joined #rust
2017-01-05 14:31:12	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 14:31:28	◣	Freyskeyd (Freyskeyd@moz-9m9m23.dsl.ovh.fr) has quit (A TLS packet with unexpected length was received.)
2017-01-05 14:31:34	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 14:31:44	◣	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Connection closed)
2017-01-05 14:31:54	◣	FrozenCow (FrozenCow@moz-ntgkhv.dynamic.upc.nl) has quit (Connection closed)
2017-01-05 14:32:02	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-05 14:32:02	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-05 14:32:09	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-05 14:32:25	Centril	bluss: oh, didnt see your above remarks - im not versed enough in internals to know about that - can you make an RFC comment clarifying it ?
2017-01-05 14:32:33	◥	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust
2017-01-05 14:35:36	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-05 14:35:51	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2017-01-05 14:36:05	◥	nkr (nkr@moz-p2a.qp2.141.177.IP) has joined #rust
2017-01-05 14:36:26	◥	dantoml (dantoml@moz-cautdm.customers.d1-online.com) has joined #rust
2017-01-05 14:36:57	◥	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has joined #rust
2017-01-05 14:37:11	◣	beedaddy (martin@moz-dmecon.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2017-01-05 14:38:14	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2017-01-05 14:38:41	◣	afshinmeh (textual@moz-5tcce4.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 14:39:02	◣	ineol (textual@moz-imqh99.fmnc.b88b.0e35.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 14:39:24	◣	Akien (akien@moz-ailo79.dyn.telefonica.de) has quit (A TLS packet with unexpected length was received.)
2017-01-05 14:40:00	◣	p0x (ggrochow@moz-9as.smm.64.50.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:40:08	◣	nkr (nkr@moz-p2a.qp2.141.177.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:40:23	◥	shellac (textual@moz-mv2uds.cable.virginm.net) has joined #rust
2017-01-05 14:40:38	◥	Sanqui (SanquiG@moz-33aens.net) has joined #rust
2017-01-05 14:40:49	◥	sleffy (sleffy@moz-oeban2.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-05 14:41:32	◣	SamYaple (SamYaple@moz-upq.tqk.209.162.IP) has quit (Quit: leaving)
2017-01-05 14:42:21	◣	Kreest (Kreest@moz-aj2s0f.pool.invitel.hu) has quit (Connection closed)
2017-01-05 14:42:39	◥	SamYaple (SamYaple@moz-upq.tqk.209.162.IP) has joined #rust
2017-01-05 14:42:51	◥	junqed (junqed@moz-n8f.kgr.70.178.IP) has joined #rust
2017-01-05 14:43:33	◥	montanonic (nicholas@moz-u3evs7.or.comcast.net) has joined #rust
2017-01-05 14:44:53	◥	jdm (jdm@moz-5oi.ooe.161.108.IP) has joined #rust
2017-01-05 14:44:53	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-05 14:44:57	◣	futile (felix@moz-ct43fm.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-05 14:46:01	◥	p0x (ggrochow@moz-9as.smm.64.50.IP) has joined #rust
2017-01-05 14:46:26	◣	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2017-01-05 14:46:59	◥	afshinmeh (textual@moz-a7ol0j.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-05 14:47:31	◣	raichoo (raichoo@moz-beq3gm.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-05 14:50:13	◣	dm3 (dm3@moz-urssv3.static.zebra.lt) has quit (Connection closed)
2017-01-05 14:50:13	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2017-01-05 14:50:23	◥	stelarcf (stelarcf@moz-jd7lsk.com) has joined #rust
2017-01-05 14:50:46	◥	dm3 (dm3@moz-urssv3.static.zebra.lt) has joined #rust
2017-01-05 14:51:23	◣	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:52:09	◥	kdlv (kdlv@moz-vvrqkv.o4nv.k57c.2002.2001.IP) has joined #rust
2017-01-05 14:53:22	◣	jdm (jdm@moz-5oi.ooe.161.108.IP) has quit (Quit: )
2017-01-05 14:53:34	anachrome	is there a reason SplitN and friends don't implement DoubleEndedIterator, despite the fact that Split does?  it seems fairly trivial to write, based on my (admittedly cursory) looking at the source
2017-01-05 14:53:50	◣	afshinmeh (textual@moz-a7ol0j.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 14:54:00	sfackler	anachrome: wouldn't it have to scan the entire string every time next_back is called?
2017-01-05 14:54:43	anachrome	sfackler: I don't think so?
2017-01-05 14:54:48	◣	dm3 (dm3@moz-urssv3.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2017-01-05 14:54:53	anachrome	or rather, not in anyway that Split doesn't already have to do
2017-01-05 14:55:20	bluss	it's n splits from the front, so not sure what it can do from the back end
2017-01-05 14:55:31	sfackler	yeah, it has to know how much of the end of the string to skip
2017-01-05 14:55:37	◥	afshinmeh (textual@moz-v7pv40.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-05 14:55:46	anachrome	ah, right
2017-01-05 14:56:21	m4b	like this error is what makes me sad: the trait `core::convert::AsRef<[u8]>` is not implemented for `std::io::Cursor<std::vec::Vec<u8>>`
2017-01-05 14:56:45	anachrome	my bad, thanks!
2017-01-05 14:56:54	◥	rjayatilleka (rjayatillek@moz-v98.vpk.197.138.IP) has joined #rust
2017-01-05 14:56:56	◣	slomo (slomo@moz-cr5.9m0.117.188.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:58:17	◣	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 14:59:04	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-05 14:59:49	◣	himikof (Mibbit@moz-chg.8u9.92.93.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-05 15:00:33	◣	junqed (junqed@moz-n8f.kgr.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 15:00:45	◥	calvin (sid732@moz-lhgbcs.0j4i.jtu0.0101.2620.IP) has joined #rust
2017-01-05 15:01:38	◥	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has joined #rust
2017-01-05 15:02:43	◣	akubera (Adium@moz-igepjd.asc.ohio-state.edu) has quit (Quit: Leaving.)
2017-01-05 15:03:03	◣	Powersource (Powersource@moz-u199ao.cust.bredband2.com) has quit (Quit: Leaving)
2017-01-05 15:03:21	◣	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 15:03:33	◣	m12y (uid18341@moz-g02rpl.tooting.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-05 15:03:34	◣	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-05 15:03:47	archshift	Is there any way to get rust to stop optimizing memcpy into that infernal __aeabi_memcpyXX builtin?
2017-01-05 15:03:50	◣	edoput (edoput@moz-3vt.2vd.40.151.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:04:05	◥	eibwen (eibwen@moz-tfu661.dip0.t-ipconnect.de) has joined #rust
2017-01-05 15:04:23	archshift	as in, when trying to use xargo for an arm libcore
2017-01-05 15:05:27	◣	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-05 15:05:29	◣	eazar001 (ebrahim@moz-6luan8.hutj.9gq1.0304.2602.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 15:05:47	◣	pylbrecht (pylbrecht@moz-rhd91h.leu1.nofh.8109.2a02.IP) has quit (Quit: Segmentation fault (core dumped))
2017-01-05 15:06:01	m4b	:]
2017-01-05 15:06:28	◣	rotty (rotty@moz-07gt5n.chaostreff.at) has quit (Quit: WeeChat 1.5)
2017-01-05 15:06:32	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:06:44	◥	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has joined #rust
2017-01-05 15:07:01	◣	mfranz (mfranz@moz-dee9t0.res.rr.com) has quit (Client exited)
2017-01-05 15:08:53	archshift	I really don't want to have to manually wire up __aebi_memcpy4 to plain memcpy in the linker script
2017-01-05 15:09:09	archshift	etc for any other ones that show up
2017-01-05 15:09:11	◥	confundus (confundus@moz-dgk.ng2.234.180.IP) has joined #rust
2017-01-05 15:11:17	◥	Kingsqueeee (kingsley@moz-sf902d.bchsia.telus.net) has joined #rust
2017-01-05 15:11:20	◣	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:11:30	◣	fede1024 (quassel@moz-oc9.1o8.32.195.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:11:47	bluss	Centril: I'm not sure it helps the RFC or is just noise in the discussion
2017-01-05 15:12:10	Centril	bluss: if something I wrote is wrong it should be corrected, no?
2017-01-05 15:13:02	◣	tel (tel@moz-0jh5f2.ma.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-05 15:13:07	◥	bollu (bollu@moz-9i1.k6o.139.14.IP) has joined #rust
2017-01-05 15:13:32	◥	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2017-01-05 15:13:33	◣	geal (geal@moz-5p8kss.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2017-01-05 15:14:06	◥	mfranz (mfranz@moz-dee9t0.res.rr.com) has joined #rust
2017-01-05 15:14:53	◣	ubsandroid (ubsan@moz-2an7t4.pi10.ubiv.fb90.2607.IP) has quit (Quit: <3)
2017-01-05 15:15:00	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-05 15:15:20	◣	SilverKey (SilverKey@moz-pf5aar.biz.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-05 15:15:44	◣	dpc (dpc@moz-mf3448.qbof.ad6b.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:15:50	◥	sebasmagri (user@moz-l4s.upu.146.189.IP) has joined #rust
2017-01-05 15:15:54	◣	kbknapp (kevin@moz-nolcos.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:16:24	◣	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:16:28	◣	posix4e (sid124649@moz-8kp8i0.brockwell.irccloud.com) has left #rust ("")
2017-01-05 15:17:11	◣	bollu (bollu@moz-9i1.k6o.139.14.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:19:18	◣	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2017-01-05 15:19:22	◣	creationix (creationix@moz-28au0f.cpe.cableone.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 15:20:23	◣	confundus (confundus@moz-dgk.ng2.234.180.IP) has quit (Quit: leaving)
2017-01-05 15:20:45	◥	kulshrax (kulshrax@moz-e6bked.j0qm.7vpd.010d.2620.IP) has joined #rust
2017-01-05 15:20:50	◥	darthdeus_ (darthdeus@moz-2rmvf7.net.upcbroadband.cz) has joined #rust
2017-01-05 15:20:57	◣	sepp2k (Sepp2k@moz-77cfue.dyn.telefonica.de) has quit (Connection closed)
2017-01-05 15:21:10	talchas	archshift: there may be something you can do in a target json?
2017-01-05 15:21:12	talchas	I don't know
2017-01-05 15:22:25	archshift	talchas: I spent a couple of hours going through Google, supposedly there was a no-compiler-rt option (that now doesn't do anything) that *might* have fixed this? ...
2017-01-05 15:22:29	◣	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has quit (Ping timeout: 121 seconds)
2017-01-05 15:23:52	◥	Cyderize_ (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2017-01-05 15:24:05	◣	m4b (user@moz-ih8.7si.9.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:24:14	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-05 15:24:15	◣	hegza (hegza@moz-4q6iko.paivola.fi) has quit (Ping timeout: 121 seconds)
2017-01-05 15:24:17	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 15:25:04	◣	ebvalaim (bartek@moz-ehk6a9.dynamic.chello.pl) has quit (Quit: Leaving.)
2017-01-05 15:25:14	◥	ubsandroid_ (ubsan@moz-29oige.pi10.ubiv.fb90.2607.IP) has joined #rust
2017-01-05 15:25:19	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 15:25:56	◣	ftop (ftop@moz-4b6gv7.internode.on.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:25:59	◥	hegza (hegza@moz-4q6iko.paivola.fi) has joined #rust
2017-01-05 15:26:02	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-05 15:26:09	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-05 15:26:23	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (A TLS packet with unexpected length was received.)
2017-01-05 15:26:33	◥	tel (tel@moz-0jh5f2.ma.comcast.net) has joined #rust
2017-01-05 15:28:02	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-05 15:28:14	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-05 15:28:19	◣	jbradberry (jrb@moz-kpp3mi.biz.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-05 15:28:20	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:30:22	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2017-01-05 15:30:35	◣	mfranz (mfranz@moz-dee9t0.res.rr.com) has quit (Client exited)
2017-01-05 15:30:45	◣	Ferreus (ferreus@moz-v95bom.se33.0o9j.2028.2a02.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 15:31:04	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-05 15:31:55	◥	nZac (nZac@moz-0knq4t.midco.net) has joined #rust
2017-01-05 15:31:55	◥	fede1024 (quassel@moz-oc9.1o8.32.195.IP) has joined #rust
2017-01-05 15:31:57	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 15:32:49	◣	SneakySnake (crumblingst@moz-7i8s3j.pool.telekom.hu) has quit (A TLS packet with unexpected length was received.)
2017-01-05 15:32:58	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 15:33:09	◥	alx741 (alx741@moz-22t.a3g.152.190.IP) has joined #rust
2017-01-05 15:33:16	◥	schirtze (schirtze@moz-14f.587.83.74.IP) has joined #rust
2017-01-05 15:33:56	◥	mfranz (mfranz@moz-dee9t0.res.rr.com) has joined #rust
2017-01-05 15:34:07	◣	bereddy (bereddy@moz-2e6qc0.fios.verizon.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2017-01-05 15:34:10	◣	Altenius (Altenius@moz-3mi.gai.193.199.IP) has quit (Connection closed)
2017-01-05 15:34:15	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:34:31	◥	Altenius (Altenius@moz-3mi.gai.193.199.IP) has joined #rust
2017-01-05 15:34:52	schirtze	I'm a little stumped on how to write strings to a file
2017-01-05 15:35:23	◣	alx741_ (alx741@moz-8e1.qnp.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:35:48	schirtze	Particularly strings that are generated during run-time.
2017-01-05 15:35:57	◣	nZac (nZac@moz-0knq4t.midco.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:36:28	durka42	let mut f = File::create("foo.txt")?; writeln!(f, "1 + 1 = {}", 1+1)?;
2017-01-05 15:36:29	breeden1	schirtze: have you seen https://doc.rust-lang.org/std/fs/struct.File.html
2017-01-05 15:36:38	◥	ytain (ytain@moz-4nqu17.9ckh.6308.f2c0.2607.IP) has joined #rust
2017-01-05 15:37:51	◣	pengowen (Mibbit@moz-1msp9g.client.mchsi.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-05 15:37:51	◣	sqwishy (sqwishy@moz-ifh.q9a.172.69.IP) has quit (Connection closed)
2017-01-05 15:38:07	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 15:38:35	◥	sqwishy (sqwishy@moz-ifh.q9a.172.69.IP) has joined #rust
2017-01-05 15:38:50	⚡	bholley is now known as bholley_away
2017-01-05 15:38:51	◣	tromey (tromey@moz-hn05ml.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.91.1))
2017-01-05 15:39:08	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 15:40:05	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:40:20	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-05 15:40:26	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2017-01-05 15:40:55	◣	ubsandroid_ (ubsan@moz-29oige.pi10.ubiv.fb90.2607.IP) has quit (Quit: <3)
2017-01-05 15:41:02	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-05 15:41:20	schirtze	durka42, yeah i'm doing something similar to that
2017-01-05 15:41:31	◣	manuel_ (manuel@moz-44m.14s.6.209.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:41:38	schirtze	but the issue seems to be getting the strings to actually appear in the file
2017-01-05 15:41:50	_habnabit	someday i'll stop typing `impl<T> for MyStruct<T>`
2017-01-05 15:41:55	_habnabit	but today is not that day
2017-01-05 15:42:13	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-05 15:42:16	schirtze	I'm doing the following
2017-01-05 15:42:19	◣	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has quit (Connection closed)
2017-01-05 15:42:30	Dryvnt	Pff. I was struggling with doing some serialization correct, but then I realized that it wouldn't make sense anyway because I was going to refactor the direct-from-c struct into a more idiomatic struct for what im actually going to do with it. wow. helps getting away from the code for a bit
2017-01-05 15:42:30	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-05 15:42:31	schirtze	MyBTreeSet.iter().cloned().map(|x| writeln!(new_file, "{}", x.to_string()));
2017-01-05 15:42:42	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 15:42:51	durka42	looks good
2017-01-05 15:43:10	schirtze	but it doesn't actually write out to the file
2017-01-05 15:43:17	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:43:17	durka42	oh, wait
2017-01-05 15:43:21	durka42	you ignored the warning then :)
2017-01-05 15:43:34	durka42	you have to actually run through the elements of an iterator if you want it to do anything
2017-01-05 15:43:40	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-05 15:43:54	◥	refD (textual@moz-gira44.iinet.net.au) has joined #rust
2017-01-05 15:43:59	schirtze	wait... how do I do that
2017-01-05 15:44:17	schirtze	also im not getting a warning on this
2017-01-05 15:44:19	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-05 15:44:23	durka42	playbot: (0..5).map(|x| println!("{}", x)); // does not print anything
2017-01-05 15:44:28	⚡	Notice(playbot): warning: unused result which must be used: iterator adaptors are lazy and do nothing unless consumed, #[warn(unused_must_use)] on by default
2017-01-05 15:44:28	⚡	Notice(playbot): (output truncated; full output at http://bit.ly/2hWiVh1)
2017-01-05 15:44:31	⚡	bholley_away is now known as bholley
2017-01-05 15:44:37	durka42	^ that's the warning I was talking about
2017-01-05 15:44:38	◣	refD (textual@moz-gira44.iinet.net.au) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-05 15:44:45	◥	refD (textual@moz-gira44.iinet.net.au) has joined #rust
2017-01-05 15:44:50	schirtze	oh i am getting that
2017-01-05 15:44:56	schirtze	it just was already built
2017-01-05 15:45:01	schirtze	so i didnt see a warning
2017-01-05 15:45:09	◥	ubsandroid_ (ubsan@moz-81uufq.pi10.ubiv.fb90.2607.IP) has joined #rust
2017-01-05 15:45:21	◥	Philpax_ (Philpax@moz-5lrr6m.optusnet.com.au) has joined #rust
2017-01-05 15:45:28	durka42	use a for loop, or put .count() on the end, or use a crate like itertools that provides .foreach() instead of .map()
2017-01-05 15:46:07	◣	Mako (malleus@moz-i5g1d0.dyn.optonline.net) has quit (Quit: Fast travel activated)
2017-01-05 15:46:22	◥	Kindiana (uid205557@moz-h3kk4q.highgate.irccloud.com) has joined #rust
2017-01-05 15:46:22	schirtze	durka42, it works!
2017-01-05 15:46:26	schirtze	I added .count()
2017-01-05 15:46:30	schirtze	so I learned something
2017-01-05 15:46:38	breeden1	\o/ for learning
2017-01-05 15:47:22	schirtze	I haven't fully grokked iterators or their lazy semantics yet.
2017-01-05 15:47:23	◣	wno (foo@moz-n5pms2.niksula.hut.fi) has quit (A record packet with illegal version was received.)
2017-01-05 15:47:33	schirtze	But I feel this was a big step
2017-01-05 15:47:35	◣	anjumkaiser (anjumkaiser@moz-11r.5cv.50.39.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:47:49	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:48:32	◣	acon (acon@moz-q8ks7c.cust.bahnhof.se) has quit (Client exited)
2017-01-05 15:49:23	◣	afshinmeh (textual@moz-v7pv40.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 15:49:32	◣	dinfuehr1 (dominik@moz-e4s702.highway.telekom.at) has quit (Client exited)
2017-01-05 15:49:53	◥	wno (foo@moz-n5pms2.niksula.hut.fi) has joined #rust
2017-01-05 15:49:55	◥	djump_ (djump@moz-dkcp2c.wa.comcast.net) has joined #rust
2017-01-05 15:50:07	◣	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has quit (Quit: No Ping reply in 180 seconds.)
2017-01-05 15:50:19	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Connection closed)
2017-01-05 15:51:18	◥	doek (quassel@moz-f3q8l6.k20a.o9ph.cb15.2a01.IP) has joined #rust
2017-01-05 15:51:50	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-05 15:52:12	◣	djump (djump@moz-dkcp2c.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 15:53:11	◥	walter (walter@moz-glm69e.ma.comcast.net) has joined #rust
2017-01-05 15:53:23	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-05 15:54:31	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-05 15:54:40	◣	Fanaen (Fanaen@moz-hb5d8b.6rfj.92aj.0e35.2a01.IP) has quit (Connection closed)
2017-01-05 15:54:55	◥	parrip (ryan@moz-a2onff.xtra.co.nz) has joined #rust
2017-01-05 15:54:55	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Connection closed)
2017-01-05 15:55:46	◣	vadix (vadix@moz-h9klev.nkcu.i5co.05c1.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:55:49	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-05 15:56:33	◥	manuel_ (manuel@moz-44m.14s.6.209.IP) has joined #rust
2017-01-05 15:56:54	◣	ahal|afk (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-05 15:57:23	◣	khj (Thunderbird@moz-d0umvn.dynamic.jazztel.es) has quit (Client exited)
2017-01-05 15:57:25	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 15:57:49	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2017-01-05 15:58:30	◣	parrip (ryan@moz-a2onff.xtra.co.nz) has quit (Quit: This computer has gone to sleep)
2017-01-05 15:58:48	◥	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has joined #rust
2017-01-05 15:59:28	◣	dantoml (dantoml@moz-cautdm.customers.d1-online.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-05 15:59:28	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Connection closed)
2017-01-05 15:59:31	◣	hexagoxel (hexagoxel@moz-it62hu.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2017-01-05 15:59:54	◣	chc4 (chc4@moz-rsira7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-05 16:00:10	◣	epimorph (epimorph@moz-37flav.tbcn.telia.com) has quit (Quit: Leaving)
2017-01-05 16:00:12	◣	eibwen (eibwen@moz-tfu661.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-05 16:00:37	◣	manuel_ (manuel@moz-44m.14s.6.209.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:00:38	◣	rjayatilleka (rjayatillek@moz-v98.vpk.197.138.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-05 16:00:42	◥	rjayatilleka (rjayatillek@moz-v98.vpk.197.138.IP) has joined #rust
2017-01-05 16:00:56	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 16:01:02	◣	ariasuni (ariatsuni@moz-ku7jfh.fbx.proxad.net) has quit (Quit: Konversation terminated!)
2017-01-05 16:01:02	◣	p0x (ggrochow@moz-9as.smm.64.50.IP) has quit (Quit: leaving)
2017-01-05 16:02:24	◣	machuga (machuga@moz-kuh.odq.223.162.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-05 16:02:57	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:03:04	◥	mada (mariano@moz-5gj.4co.170.181.IP) has joined #rust
2017-01-05 16:03:06	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Quit: Leaving)
2017-01-05 16:04:50	◣	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-05 16:05:40	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-05 16:05:40	◣	kulshrax (kulshrax@moz-e6bked.j0qm.7vpd.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 16:05:43	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-05 16:08:01	◥	kbknapp (kevin@moz-kog.013.140.38.IP) has joined #rust
2017-01-05 16:08:22	_habnabit	so if a closure can be called multiple times, like Iterator::map's closure, only one closure object is constructed, right? i.e. `.map(move |...| ...)` creates one closure, moves the thing into it, and passes that to the iterator
2017-01-05 16:08:28	◥	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has joined #rust
2017-01-05 16:08:41	◣	plutoniix (q@moz-5jo.4dj.25.125.IP) has quit (Quit: Leaving)
2017-01-05 16:09:00	◥	manuel_ (manuel@moz-5eskqg.ma.comcast.net) has joined #rust
2017-01-05 16:09:16	◥	wallacoloo____ (colin@moz-tvseqg.tukw.qwest.net) has joined #rust
2017-01-05 16:09:21	◥	Quxxy2 (Quxxy@moz-efh10q.internode.on.net) has joined #rust
2017-01-05 16:09:43	◣	Raticide (worm@moz-b9g.era.86.203.IP) has left #rust ("You're just a voice inside my head")
2017-01-05 16:09:48	Tari	_habnabit: correct
2017-01-05 16:09:52	◣	zao (zao@moz-lupdiq.priv.bahnhof.se) has left #rust
2017-01-05 16:10:08	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-05 16:10:58	_habnabit	hm
2017-01-05 16:11:02	Tari	evidence: map takes a FnMut and not a FnOnce
2017-01-05 16:11:06	_habnabit	trying to figure out how to reduce this to a test case
2017-01-05 16:11:28	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:11:28	◣	wallacoloo____ (colin@moz-tvseqg.tukw.qwest.net) has quit (Client exited)
2017-01-05 16:13:26	◥	wallacoloo____ (colin@moz-tvseqg.tukw.qwest.net) has joined #rust
2017-01-05 16:14:11	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-05 16:14:11	◥	bollu (bollu@moz-9i1.k6o.139.14.IP) has joined #rust
2017-01-05 16:14:38	◣	peschkaj (sid156955@moz-br36jm.brockwell.irccloud.com) has quit (NickServ (RECOVER command used by peschkaj_))
2017-01-05 16:14:38	◥	peschkaj (peschkaj@moz-vr7pjk.or.comcast.net) has joined #rust
2017-01-05 16:14:56	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-05 16:17:10	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-05 16:19:15	◣	schirtze (schirtze@moz-14f.587.83.74.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:19:28	◥	ErikBjare (uid37398@moz-4v6bge.highgate.irccloud.com) has joined #rust
2017-01-05 16:19:28	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Connection closed)
2017-01-05 16:20:05	_habnabit	got it
2017-01-05 16:20:09	_habnabit	https://is.gd/omVF2w
2017-01-05 16:20:13	◣	bollu (bollu@moz-9i1.k6o.139.14.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:20:20	◥	schirtze (schirtze@moz-14f.587.83.74.IP) has joined #rust
2017-01-05 16:20:28	_habnabit	it's a little weird but that's pretty close to the original
2017-01-05 16:20:50	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Connection closed)
2017-01-05 16:21:13	◥	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-05 16:21:42	◥	lpghatguy (LPGhatguy@moz-heo.6h1.32.71.IP) has joined #rust
2017-01-05 16:21:58	◣	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has quit (Client exited)
2017-01-05 16:23:02	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Quit: Leaving)
2017-01-05 16:23:20	◣	tyoc213 (tyoc@moz-geq.1mu.58.209.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:23:34	◣	durka42 (durka42@moz-h07.vjt.130.158.IP) has quit (Client exited)
2017-01-05 16:24:53	◣	peschkaj (peschkaj@moz-vr7pjk.or.comcast.net) has quit (Quit: leaving)
2017-01-05 16:25:15	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Ping timeout: 121 seconds)
2017-01-05 16:25:32	◥	ghishadow___________ (ghishadow@moz-pns.pkp.199.117.IP) has joined #rust
2017-01-05 16:25:37	◣	ghishadow___________ (ghishadow@moz-pns.pkp.199.117.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-05 16:26:03	_habnabit	wait no not close enough because in this i can make the map take a move closure and it's solved
2017-01-05 16:27:40	◥	rootnode1 (rootnode@moz-jnhkca.ap.nuro.jp) has joined #rust
2017-01-05 16:27:40	◥	rafaeldelucena (Rafael@moz-lh8.0oc.209.186.IP) has joined #rust
2017-01-05 16:28:00	_habnabit	ah got it
2017-01-05 16:28:31	_habnabit	https://is.gd/hwOEY4 
2017-01-05 16:28:40	_habnabit	makes sense why it was failing now
2017-01-05 16:28:49	_habnabit	i thought autorefs in closures were smarter though
2017-01-05 16:29:05	◥	dpc (dpc@moz-mf3448.qbof.ad6b.0646.2601.IP) has joined #rust
2017-01-05 16:29:11	◥	dantoml (dantoml@moz-cautdm.customers.d1-online.com) has joined #rust
2017-01-05 16:29:48	◥	mindtree (Mitch@moz-8b6ttq.iinet.net.au) has joined #rust
2017-01-05 16:30:43	◥	streblo (streblo@moz-najj05.or3h.o3t5.0186.2601.IP) has joined #rust
2017-01-05 16:31:13	◥	nagisa (nagisa@moz-8t068g.static.zebra.lt) has joined #rust
2017-01-05 16:33:02	◥	alx741_ (alx741@moz-b5u.sn4.152.190.IP) has joined #rust
2017-01-05 16:33:11	⚡	bholley is now known as bholley_away
2017-01-05 16:33:14	◣	dantoml (dantoml@moz-cautdm.customers.d1-online.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-05 16:33:58	◥	dantoml (dantoml@moz-cautdm.customers.d1-online.com) has joined #rust
2017-01-05 16:34:27	◥	cryptojuice (cryptojuice@moz-23mtui.86er.bbgm.2000.2604.IP) has joined #rust
2017-01-05 16:34:44	◣	zeryx (zeryx@moz-h7uvtb.ns.bellaliant.net) has quit (Client exited)
2017-01-05 16:35:17	◣	alx741 (alx741@moz-22t.a3g.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-05 16:35:31	◥	bread|laptop (bread@moz-fnm.4h1.16.70.IP) has joined #rust
2017-01-05 16:35:33	◣	badon (badon@moz-c5r.91b.195.199.IP) has quit (Connection closed)
2017-01-05 16:35:40	◣	ai (ai@moz-0bh.58o.60.92.IP) has quit (Quit: Leaving.)
2017-01-05 16:35:57	◣	dantoml (dantoml@moz-cautdm.customers.d1-online.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-05 16:36:10	◥	badon (badon@moz-c5r.91b.195.199.IP) has joined #rust
2017-01-05 16:36:48	◣	shellac (textual@moz-mv2uds.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-05 16:37:08	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-05 16:37:13	◥	brocktimus (brocktimus@moz-p8866m.skymesh.net.au) has joined #rust
2017-01-05 16:37:18	◥	Freyskeyd (Freyskeyd@moz-9m9m23.dsl.ovh.fr) has joined #rust
2017-01-05 16:37:24	Freyskeyd	hi
2017-01-05 16:37:29	&mbrubeck	you can also do the clone in the inner closure https://is.gd/BScPX6
2017-01-05 16:38:07	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Connection closed)
2017-01-05 16:38:15	Freyskeyd	i readed this article (https://withoutboats.github.io/blog/rust/2017/01/04/the-rust-module-system-is-too-confusing.html) but i don't understand how to use `self` their is no exemple
2017-01-05 16:38:28	_habnabit	mbrubeck, it wasn't enough in the real code
2017-01-05 16:38:33	Freyskeyd	does anyone know how it work?
2017-01-05 16:38:38	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-05 16:38:49	@steveklabnik	Freyskeyd: if you say "use foo::bar", that means "start from the root, then go to the foo module, then import bar"
2017-01-05 16:39:07	@steveklabnik	if you say "use self::foo::bar", that means "start from _this module_, then look for a foo submoudle, then import bar"
2017-01-05 16:39:10	_habnabit	.. actually
2017-01-05 16:39:12	_habnabit	i think i know why
2017-01-05 16:39:21	@steveklabnik	it's like using "/foo.html" vs "foo.html", if you're famiilar with the web
2017-01-06 09:54:04	⚡	irc: disconnected from server
2017-01-06 09:54:19	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-06 09:54:19	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-06 09:54:19	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-06 09:54:19	⚡	Channel #rust: 1294 nicks (17 ops, 0 halfops, 3 voices, 1274 normals)
2017-01-06 09:54:22	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-06 09:54:23	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-06 09:55:08	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-06 09:55:53	hexagoxel	why is the "pub use foo" for a non-pub extern crate foo in a non-(transitively-)pub module considered a private-in-public error?
2017-01-06 09:56:02	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-06 09:56:05	◥	tyoc__ (tyoc@moz-nvt.8oo.75.184.IP) has joined #rust
2017-01-06 09:56:28	◣	junqed (junqed@moz-egr.l1h.70.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 09:56:42	◥	drivel (me@moz-iqulob.maltekraus.de) has joined #rust
2017-01-06 09:57:38	hexagoxel	really, i have no idea what "pub" means for extern crates. i don't believe this is covered in the usual docs (?)
2017-01-06 09:58:10	◥	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has joined #rust
2017-01-06 09:58:59	◣	tyoc (tyoc@moz-64b0ua.iusacell.net) has quit (Ping timeout: 121 seconds)
2017-01-06 09:59:34	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-06 10:00:02	@steveklabnik	it means the same as "pub use", that is, it re-exports that crate's namespace
2017-01-06 10:00:08	@steveklabnik	publicly
2017-01-06 10:00:29	hexagoxel	on the crate-level interface, i assume
2017-01-06 10:00:30	◥	niconii (nicole@moz-e97d1e.midco.net) has joined #rust
2017-01-06 10:00:30	⚡	Mode #rust [+ao niconii niconii] by ChanServ
2017-01-06 10:00:44	⚡	JaparicAfk is now known as japaric
2017-01-06 10:01:01	&mbrubeck	hexagoxel: from whatever module contains the `extern crate` item -- usually the crate root, but not necessarily.
2017-01-06 10:01:20	&mbrubeck	hexagoxel: The private-in-public lints have changed somewhat over time and are still the subject of active discussion: https://internals.rust-lang.org/t/lang-team-minutes-private-in-public-rules/4504
2017-01-06 10:02:33	◣	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has quit (Ping timeout: 121 seconds)
2017-01-06 10:02:33	Phrohdoh	Anyone know how tsql/odbc connection strings should be formatted in Rust?
2017-01-06 10:07:30	⚡	irc: disconnected from server
2017-01-06 10:07:46	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-06 10:07:46	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-06 10:07:46	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-06 10:07:46	⚡	Channel #rust: 1296 nicks (18 ops, 0 halfops, 3 voices, 1275 normals)
2017-01-06 10:07:50	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-06 10:08:01	◣	hash (hash@moz-3evbcs.narocnik.mobitel.si) has quit (Quit: IRC for Sailfish 0.9)
2017-01-06 10:08:31	◥	Morten (Morten@moz-52k39p.bb.online.no) has joined #rust
2017-01-06 10:09:07	Phrohdoh	Anyone re odbc connection string?
2017-01-06 10:09:13	◥	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has joined #rust
2017-01-06 10:10:38	staticassert	I need an LRU that has a potentially unique timeout for every individual value - I see maidsafe has one that appears to apply a single timeout to every value. Anyone know if there's another way or should I roll my own?
2017-01-06 10:10:47	◥	tel (tel@moz-rdn.5rl.148.204.IP) has joined #rust
2017-01-06 10:12:46	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-06 10:13:16	staticassert	I guess I'll just roll my own
2017-01-06 10:14:00	◣	pyon (pyon@moz-i4f.jnt.7.179.IP) has quit (Connection closed)
2017-01-06 10:14:29	◣	creationix (creationix@moz-28au0f.cpe.cableone.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 10:14:35	◥	jsgf (jsgf@moz-6bf.jsl.201.199.IP) has joined #rust
2017-01-06 10:15:19	◥	pyon (pyon@moz-i4f.jnt.7.179.IP) has joined #rust
2017-01-06 10:15:19	◥	afshinmeh (textual@moz-2ajfmq.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-06 10:15:47	◣	sebasmagri (user@moz-ohu.o17.146.189.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 10:15:51	◥	seiks (seiks@moz-i8hc0i.517r.f285.11c0.2a00.IP) has joined #rust
2017-01-06 10:17:18	ted	i wonder if you could use corrode in a build script to build C libraries instead of requiring a C compiler
2017-01-06 10:17:32	ted	i guess if it supported all the C constructs in the code there's no reason you couldn't
2017-01-06 10:18:03	cholcombe	wow.  i did some research to try and figure out how to make apt bindings for rust.  it looks like a giant pain in the ass
2017-01-06 10:18:09	◣	dodj (dodj@moz-4bd88a.range86-134.btcentralplus.com) has quit (Quit: leaving)
2017-01-06 10:18:14	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-06 10:18:14	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-06 10:18:19	rkruppe	ted: "all C constructs" would have to include "obscure 80's gcc extension"
2017-01-06 10:18:33	@steveklabnik	ted: people have been dreaming about that, heh
2017-01-06 10:18:47	@steveklabnik	rkruppe: ted corrode already supports several gcc extnesions, iirc
2017-01-06 10:18:55	◥	steph (anonymous@moz-m3l.28j.3.94.IP) has joined #rust
2017-01-06 10:18:57	ted	rkruppe: yeah, life is sorta terrible, but presumably he'll have to cross that bridge to make corrode generally useful anyway
2017-01-06 10:19:11	ted	steveklabnik: i keep saying rust development is great until you pull in a crate with a C dependency
2017-01-06 10:19:14	ted	then life is terrible again
2017-01-06 10:19:22	⚡	steph is now known as urschrei
2017-01-06 10:19:25	◥	bugweiser (Mibbit@moz-8do7jh.oklwil.sbcglobal.net) has joined #rust
2017-01-06 10:19:38	◣	bugweiser (Mibbit@moz-8do7jh.oklwil.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-06 10:20:11	◥	petso (petson@moz-h16vfb.dyn.telefonica.de) has joined #rust
2017-01-06 10:20:27	◥	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has joined #rust
2017-01-06 10:21:00	◣	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 10:21:15	◥	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has joined #rust
2017-01-06 10:22:05	◥	cynicaldevil (uid126068@moz-3m708d.brockwell.irccloud.com) has joined #rust
2017-01-06 10:22:28	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-06 10:22:58	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-06 10:23:10	◣	petso (petson@moz-h16vfb.dyn.telefonica.de) has left #rust
2017-01-06 10:23:18	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-06 10:23:42	@steveklabnik	ted: yeah. we still have it better than a lot of other languages though
2017-01-06 10:23:52	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-06 10:23:55	@steveklabnik	and as people get better at building build scripts and sys crates, it'll help
2017-01-06 10:23:58	@steveklabnik	and re-writing more in rust ;)
2017-01-06 10:24:05	◥	bvssvni (sven@moz-pri02e.bb.online.no) has joined #rust
2017-01-06 10:24:44	◥	ubsandroid_ (ubsan@moz-kdmr2l.fpeu.gb19.fb90.2607.IP) has joined #rust
2017-01-06 10:25:11	ted	yeah
2017-01-06 10:25:20	◥	ftop (ftop@moz-pfbi5b.internode.on.net) has joined #rust
2017-01-06 10:25:21	ted	oh sure, i'd rather deal with this than write anything in C++
2017-01-06 10:25:21	◣	ptx (ptx@moz-qht.dom.186.5.IP) has quit (Quit: ZNC - http://znc.in)
2017-01-06 10:26:50	◣	ubsandroid (ubsan@moz-cc6.3fu.114.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 10:27:35	◣	santiago (santiago@moz-rlvtng.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2017-01-06 10:27:57	◣	ftop_ (ftop@moz-tp2ac2.internode.on.net) has quit (Ping timeout: 121 seconds)
2017-01-06 10:28:03	◥	awalcutt (awalcutt@moz-lpnnlu.wa.comcast.net) has joined #rust
2017-01-06 10:28:34	◣	AlexW (awalcutt@moz-lpnnlu.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-06 10:28:46	◥	ptx (ptx@moz-qht.dom.186.5.IP) has joined #rust
2017-01-06 10:29:14	◥	montanonic (nicholas@moz-jn79h3.dccu.6nti.3004.2603.IP) has joined #rust
2017-01-06 10:31:07	◣	YaLTeR (YaLTeR@moz-muk.do7.220.77.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 10:31:18	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 10:31:43	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-06 10:33:33	◥	gvandere_ (gvanderest@moz-kn6p76.compute-1.amazonaws.com) has joined #rust
2017-01-06 10:33:53	◥	handyman (handyman@moz-9qqg2i.subp.5lka.0645.2601.IP) has joined #rust
2017-01-06 10:34:14	◥	starblue (juergen@moz-g0jl61.dip0.t-ipconnect.de) has joined #rust
2017-01-06 10:34:25	◥	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-06 10:35:03	◣	iamrohit7 (uid193791@moz-ks4tse.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-06 10:35:32	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 10:35:45	◣	montanonic (nicholas@moz-jn79h3.dccu.6nti.3004.2603.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 10:35:59	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Ping timeout: 121 seconds)
2017-01-06 10:35:59	frewsxcv	https://github.com/jwilm/alacritty seems pretty cool
2017-01-06 10:35:59	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-06 10:36:09	seanmonstar	er, did newest nightly change how it handles matches on empty enums?
2017-01-06 10:36:27	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-06 10:36:28	Phrohdoh	frewsxcv: it does
2017-01-06 10:36:47	frewsxcv	seanmonstar: Are you noticing a change?
2017-01-06 10:36:55	seanmonstar	i suddenly have 'unreachable pattern' errors
2017-01-06 10:37:24	◥	bluss (bluss@moz-9sooj3.dynamic.simnet.is) has joined #rust
2017-01-06 10:37:36	◥	wldcordeiro (wldcordeiro@moz-bui68o.maon.n3es.0681.2601.IP) has joined #rust
2017-01-06 10:37:58	talchas	playbot seems ok https://is.gd/dFCpHI but I don't know if that's the absolute newest?
2017-01-06 10:38:09	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-06 10:38:22	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 10:38:50	seanmonstar	talchas: that version claims the 5th, my `rustc -V` says 6th
2017-01-06 10:39:02	talchas	ah, then yeah
2017-01-06 10:39:06	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-06 10:39:20	talchas	I wasn't sure which side of midnight they were dated by
2017-01-06 10:39:28	⚡	ahal|lunch is now known as ahal
2017-01-06 10:39:31	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-06 10:39:40	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-06 10:39:57	Sergio_	The dates are totally weird.
2017-01-06 10:40:01	Sergio_	For nightly releases.
2017-01-06 10:40:14	Sergio_	Since they're available on n+1 but are dated n.
2017-01-06 10:40:15	◥	pounce (pounce@moz-3jv.ip9.197.140.IP) has joined #rust
2017-01-06 10:40:30	Sergio_	Except I guess not in this case? Maybe it was changed.
2017-01-06 10:40:35	frewsxcv	What's up with the error formatting on nightly playpen?
2017-01-06 10:40:47	seanmonstar	ya i noticed that too
2017-01-06 10:40:49	frewsxcv	Are those  escape terminal computer things
2017-01-06 10:41:02	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-06 10:41:04	frewsxcv	Whatever filing a bug
2017-01-06 10:42:04	seanmonstar	ah, this just landed https://github.com/rust-lang/rust/pull/38069
2017-01-06 10:42:10	bluss	Sergio_: the version date is the latest commit, and the nightly kicks off 03:00 UTC and uses that day's date. I guess with luck, they can match if the merge is in that 3 hour window?
2017-01-06 10:42:25	Sergio_	Ah.
2017-01-06 10:42:36	Sergio_	That's. Weird.
2017-01-06 10:42:53	◥	riskable (Could@moz-oehaho.tg18.2sb9.0344.2601.IP) has joined #rust
2017-01-06 10:43:00	Sergio_	And kinda  wrong.
2017-01-06 10:43:03	bluss	rustc -Vv has says it is "commit-date". Just checked, bors uses UTC timezone for its commit date
2017-01-06 10:43:09	frewsxcv	https://github.com/rust-lang/rust-playpen/issues/271
2017-01-06 10:43:13	Sergio_	Two nightlies can have the same date and be breakingly different.
2017-01-06 10:43:37	bluss	then they are different nightlies
2017-01-06 10:43:40	◥	jdm_ (jdm@moz-161.l3r.137.24.IP) has joined #rust
2017-01-06 10:44:05	Sergio_	Sure, that doesn't conflict with what I said.
2017-01-06 10:44:17	◣	jdm (jdm@moz-161.l3r.137.24.IP) has quit (Connection closed)
2017-01-06 10:45:31	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 10:45:47	bluss	yeah, why doesn't it use build date?
2017-01-06 10:46:01	bluss	at least in addition
2017-01-06 10:46:23	◣	pounce (pounce@moz-3jv.ip9.197.140.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 10:46:40	⚡	bholley_away is now known as bholley
2017-01-06 10:46:43	seanmonstar	well, i can understand some of the errors, but it also errors having #[derive(Debug)] on an enum that has a variant with an uninhabited type
2017-01-06 10:46:44	⚡	agibson is now known as agibson|afk
2017-01-06 10:47:23	seanmonstar	i assume we could just update the derive code for debug to not match on that variant
2017-01-06 10:47:23	◥	bread|laptop (bread@moz-1v6pd1.us.xo.net) has joined #rust
2017-01-06 10:47:31	Sergio_	seanmonstar: maybe open an issue?
2017-01-06 10:47:35	◣	ubsandroid_ (ubsan@moz-kdmr2l.fpeu.gb19.fb90.2607.IP) has quit (Quit: <3)
2017-01-06 10:47:42	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-06 10:47:52	seanmonstar	ya, just talking through it so somoene can yell at me if something is obvious
2017-01-06 10:49:01	Th3Ma5hatt3r	Does the tokio project have an IRC channel?
2017-01-06 10:49:15	◣	ville (ville@moz-mv7jac.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2017-01-06 10:49:17	◣	skeeter (skeeter@moz-d5s7vm.tukw.qwest.net) has quit (Connection closed)
2017-01-06 10:49:20	@steveklabnik	Th3Ma5hatt3r: no, they use gittr
2017-01-06 10:49:59	◥	dybt (dybt@moz-67qr9n.mlar.ahct.0c7d.2a02.IP) has joined #rust
2017-01-06 10:50:37	◥	montanonic (nicholas@moz-u3evs7.or.comcast.net) has joined #rust
2017-01-06 10:50:45	Th3Ma5hatt3r	Okay thank you.
2017-01-06 10:50:49	◥	pounce (pounce@moz-3jv.ip9.197.140.IP) has joined #rust
2017-01-06 10:51:25	◣	bread|laptop (bread@moz-1v6pd1.us.xo.net) has quit (Ping timeout: 121 seconds)
2017-01-06 10:52:01	◥	Dryvnt (Dryvnt@moz-ucd.cbq.56.185.IP) has joined #rust
2017-01-06 10:52:16	◣	Kynes (Kynes@moz-j2us35.mit.edu) has quit (Quit: Leaving)
2017-01-06 10:52:18	seanmonstar	Th3Ma5hatt3r: though gitter has an irc bridge, i talk in their channel using it
2017-01-06 10:52:44	seanmonstar	its much more seamless than other bridges
2017-01-06 10:53:07	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-06 10:53:27	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 10:55:11	⚡	jdm_ is now known as jdm
2017-01-06 10:55:16	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-06 10:56:27	◣	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has quit (Ping timeout: 121 seconds)
2017-01-06 10:57:37	⚡	Mode #rust [-b fyolnish!*@*] by jdm
2017-01-06 10:57:37	◣	standups (nodebot@moz-md3oka.compute-1.amazonaws.com) has quit (A TLS packet with unexpected length was received.)
2017-01-06 10:57:58	bvssvni	I’m getting an error “error: failed to update registry https://github.com/rust-lang/crates.io-index” when trying to publish a crate
2017-01-06 10:58:07	staticassert	If I use Diesel but I want to write tests, is there a way to use an in memory db to sort of mock out the db?
2017-01-06 10:58:08	◣	raichoo (raichoo@moz-beq3gm.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-06 10:59:00	Sergio_	staticassert: not that I know of.
2017-01-06 10:59:28	staticassert	Maybe I can provide a trait wrapper for it and implement that with a mocked version
2017-01-06 10:59:58	staticassert	I guess the problem is I would need to create an in memory version of postgres...
2017-01-06 11:00:08	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:00:15	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-06 11:01:06	◥	alx741 (alx741@moz-frc.hcj.112.181.IP) has joined #rust
2017-01-06 11:01:11	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:01:23	◥	standups (nodebot@moz-cga9c6.compute-1.amazonaws.com) has joined #rust
2017-01-06 11:01:27	ted	FWIW for Firefox nightlies we just set the build ID to the time we build it (and the changeset it's built *from* is available in the build)
2017-01-06 11:01:43	ted	we set a single Build ID for all platform's nightly builds for a single date nowadays
2017-01-06 11:02:25	◥	kulshrax (kulshrax@moz-tppr0q.j0qm.7vpd.010d.2620.IP) has joined #rust
2017-01-06 11:03:13	◥	mastizada (Thunderbird@moz-288.r0a.3.188.IP) has joined #rust
2017-01-06 11:03:36	◣	ato (sid11@moz-vhmn17.0j4i.jtu0.0101.2620.IP) has quit (Quit: )
2017-01-06 11:03:39	◣	alx741_ (alx741@moz-a7s.qnp.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:03:43	◥	durka42 (durka42@moz-itei31.pa.comcast.net) has joined #rust
2017-01-06 11:04:23	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-06 11:04:51	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:05:31	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-06 11:05:44	bvssvni	anyone knows how to fix this? https://gist.github.com/bvssvni/10a1cf737fcea6feca2a14c79bf05767
2017-01-06 11:05:51	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:05:54	◣	afshinmeh (textual@moz-2ajfmq.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 11:06:11	bvssvni	cargo 0.17.0-nightly (740f9c0 2016-12-29)
2017-01-06 11:06:25	◣	cjhowe (textual@moz-aomlp1.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 11:07:20	seanmonstar	bvssvni: cargo +stable publish? (assuming rustup)
2017-01-06 11:07:23	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-06 11:07:44	◣	pounce (pounce@moz-3jv.ip9.197.140.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:08:17	⚡	ngc0202` is now known as ngc0202
2017-01-06 11:08:51	bvssvni	seanmonstar: I got help from #cargo
2017-01-06 11:09:10	bvssvni	`rm -rf ~/.cargo/registry` fixed the problem
2017-01-06 11:10:12	◣	chriskrycho (chriskrycho@moz-enurpn.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-06 11:11:07	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:11:58	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-06 11:12:15	◥	afshinmeh (textual@moz-l7tom4.hgkk.s1m0.8084.2a02.IP) has joined #rust
2017-01-06 11:12:22	◥	nercury (nercury@moz-ngr949.static.zebra.lt) has joined #rust
2017-01-06 11:14:25	◣	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:15:11	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-06 11:16:03	◣	dm3 (dm3@moz-urssv3.static.zebra.lt) has quit (Connection closed)
2017-01-06 11:16:21	cholcombe	are there any crates for distributed in memory operations?
2017-01-06 11:16:25	◥	dm3 (dm3@moz-urssv3.static.zebra.lt) has joined #rust
2017-01-06 11:16:37	cholcombe	i could whip something up with tarpc probably 
2017-01-06 11:16:42	heftig	hm, should there be an `impl<'a, T, U> Borrow<T> for &'a U where U: Borrow<T>` ? does that make sense?
2017-01-06 11:16:47	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-06 11:17:35	◥	ptalbot (ptalbot@moz-cvpth3.0c6p.cv4v.0e35.2a01.IP) has joined #rust
2017-01-06 11:17:59	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-06 11:18:01	◣	stephanbuys (Adium@moz-2gg.a72.247.41.IP) has quit (Connection closed)
2017-01-06 11:18:04	◥	stephanbuys (Adium@moz-2gg.a72.247.41.IP) has joined #rust
2017-01-06 11:18:29	◣	crunchiebones (jy@moz-3rf.7pg.205.31.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 11:20:27	◣	dm3 (dm3@moz-urssv3.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2017-01-06 11:20:48	solenodic	is there a better replacement for RFC 243 catch expressions than an IIFE like || -> Result<(), _> {}()
2017-01-06 11:21:13	◣	urschrei (anonymous@moz-m3l.28j.3.94.IP) has quit (Client exited)
2017-01-06 11:21:27	bascule	cholcombe: like what? Something like Ehcache?
2017-01-06 11:21:39	cholcombe	bascule, i was thinking something like hazelcast
2017-01-06 11:21:41	cholcombe	but yeah
2017-01-06 11:21:44	bascule	aah
2017-01-06 11:22:01	cholcombe	i could really use a distributed lock
2017-01-06 11:22:16	◥	_Vi (vi@moz-8kcf4a.3gli.01oh.0470.2001.IP) has joined #rust
2017-01-06 11:22:28	bascule	use Zookeeper? ;)
2017-01-06 11:22:55	cholcombe	heh
2017-01-06 11:23:06	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-06 11:23:07	cholcombe	i suppose i could but that's pretty heavy
2017-01-06 11:23:17	cholcombe	i was also thinking of just using flock on gluster
2017-01-06 11:23:20	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 11:23:24	⚡	mconley is now known as mconley|away
2017-01-06 11:23:28	◥	mwoodruff (mwoodruff@moz-b97lm9.pa.comcast.net) has joined #rust
2017-01-06 11:23:40	⚡	mconley|away is now known as mconley|interview
2017-01-06 11:24:04	◥	sleffy (sleffy@moz-qf0hg8.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-06 11:25:17	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2017-01-06 11:26:50	talchas	heftig: you could get more general than that, but in either case I suspect you run into coherence issues
2017-01-06 11:27:32	◥	rschifflin (randy@moz-ddf6l4.lv.cox.net) has joined #rust
2017-01-06 11:28:08	talchas	with AsRef/Borrow/Deref/etc you often really want like iterated-deref
2017-01-06 11:28:35	◥	thills_ (thills@moz-ae5arc.fios.verizon.net) has joined #rust
2017-01-06 11:28:37	◣	thills (thills@moz-ae5arc.fios.verizon.net) has quit (Connection closed)
2017-01-06 11:30:08	◣	arBmind (Andreas@moz-kps74i.dyn.telefonica.de) has quit (Quit: Leaving.)
2017-01-06 11:31:20	◣	Phrohdoh (Phrohdoh@moz-nv0.v7o.34.66.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-06 11:32:01	◣	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-06 11:33:18	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-06 11:33:33	◣	durka42 (durka42@moz-itei31.pa.comcast.net) has quit (Client exited)
2017-01-06 11:34:28	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-06 11:35:27	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-06 11:37:34	◣	kulshrax (kulshrax@moz-tppr0q.j0qm.7vpd.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 11:38:07	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-06 11:38:18	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-06 11:38:20	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 11:39:14	◥	dsantiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-06 11:39:50	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2017-01-06 11:39:55	staticassert	https://is.gd/hc0Xf8 Getting a type inference error. On my machine it's:    |            ^^^^^^^^^^^^^^^^^ cannot infer type for `K`    |    = note: type annotations or generic parameter binding required
2017-01-06 11:40:03	staticassert	On the playground it just says it can't infer type _
2017-01-06 11:40:03	◥	TheDan64 (TheDan64@moz-8fsg0b.ma.charter.com) has joined #rust
2017-01-06 11:40:37	breeden_	staticassert: in nightly it says `K`
2017-01-06 11:40:40	◥	zwol (zack@moz-ocgkcl.fios.verizon.net) has joined #rust
2017-01-06 11:40:49	ted	huh, my rust rewrite of makecab is faster in our CI as well
2017-01-06 11:40:54	breeden_	along with some terminal color codes that the editor doesn't seem to handle properly
2017-01-06 11:40:58	ted	i guess microsoft's implementation is just doing something dumb
2017-01-06 11:41:11	ted	https://treeherder.mozilla.org/perf.html#/compare?originalProject=autoland&originalRevision=6f7b660eb31b&newProject=try&newRevision=7cc495f79da0&framework=2&filter=windows&showOnlyImportant=0
2017-01-06 11:41:20	TheDan64	How can you turn a hashset into a vec? set.into() doesn't seem to work
2017-01-06 11:41:25	ted	3-5 mins per build, not bad
2017-01-06 11:41:34	◥	tyoc (tyoc@moz-ugr.72a.188.187.IP) has joined #rust
2017-01-06 11:41:39	rkruppe	TheDan64: into_iter().collect()
2017-01-06 11:41:43	solenodic	TheDan64: iterate over it then collect it as a vec of tuples?
2017-01-06 11:41:46	talchas	staticassert: Self::is_timed_out
2017-01-06 11:41:55	TheDan64	oh
2017-01-06 11:42:00	TheDan64	thanks
2017-01-06 11:42:09	&mbrubeck	TheDan64: `Vec::from_iter(set)` works too if you import the FromIterator trait.
2017-01-06 11:42:12	misdreavus	staticassert: even though is_timed_out doesn't need Self nor the types within it, it still wants types to stuff into LRU before you can call methods on it https://is.gd/OZEPFj
2017-01-06 11:42:20	talchas	LRU::is_timed_out depends on the K/T values of the LRU, but provides no information on what they are
2017-01-06 11:42:28	talchas	(and of course doesn't /actually/ care)
2017-01-06 11:42:47	TheDan64	neat!
2017-01-06 11:42:53	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:42:59	breeden_	Self::is_timeout_out, or LRU::<K,T>::is_timed_out
2017-01-06 11:43:06	Dryvnt	Hum. Turns recreating nondocumented client-side cryptography when you only have the serverside code is HARD. Who would have guessed
2017-01-06 11:43:11	◣	saimen (saimen@moz-6nh7io.hsi5.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-06 11:43:15	TheDan64	which is weird since set isn't an iterator?
2017-01-06 11:43:18	staticassert	Ah
2017-01-06 11:43:21	staticassert	That makes sense
2017-01-06 11:43:23	staticassert	Thanks all
2017-01-06 11:43:32	◣	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has quit (Ping timeout: 121 seconds)
2017-01-06 11:44:08	ted	TheDan64: presumably from_iter takes <T: IntoIter>
2017-01-06 11:44:12	TheDan64	ah
2017-01-06 11:44:13	◣	bronson (bronson@moz-suja1u.dynamic.fusionbroadband.com) has quit (Connection closed)
2017-01-06 11:44:31	◣	tyoc__ (tyoc@moz-nvt.8oo.75.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:44:33	◥	nairware (CELLIS@moz-p2c267.rlghnc.sbcglobal.net) has joined #rust
2017-01-06 11:44:35	ted	https://doc.rust-lang.org/std/vec/struct.Vec.html#method.from_iter
2017-01-06 11:44:48	◣	tel (tel@moz-rdn.5rl.148.204.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-06 11:44:49	misdreavus	if i keep working on my twitter library with fully-sync network calls, how cumbersome would that be for people trying to integrate it into some event loop/async stack?
2017-01-06 11:44:49	◥	kulshrax (kulshrax@moz-lgr.jsl.201.199.IP) has joined #rust
2017-01-06 11:45:11	whitequark	misdreavus: they'd have to run it in a separate thread more or less
2017-01-06 11:45:14	whitequark	and communicate using channels
2017-01-06 11:45:22	@steveklabnik	!crate future-cpupool
2017-01-06 11:45:22	+rustbot	Crate 'future-cpupool' does not exist.
2017-01-06 11:45:27	@steveklabnik	!crate tokio-cpupool
2017-01-06 11:45:27	+rustbot	Crate 'tokio-cpupool' does not exist.
2017-01-06 11:45:30	@steveklabnik	.......
2017-01-06 11:45:35	carllerche	futures-cpupool
2017-01-06 11:45:38	staticassert	futures
2017-01-06 11:45:39	@steveklabnik	misdreavus: anyway there's SOME crate like that, and like whitequark says, they'd have to use it
2017-01-06 11:45:40	carllerche	!crate futures-cpupool
2017-01-06 11:45:40	Xion	misdreavus: Probably very. The other way around is typically much easier.
2017-01-06 11:45:40	+rustbot	futures-cpupool (0.1.2) - An implementation of thread pools which hand out futures to the results of the computation on the threads themselves.  -> https://crates.io/crates/futures-cpupool <https://docs.rs/crate/futures-cpupool>
2017-01-06 11:45:42	@steveklabnik	ah
2017-01-06 11:45:46	◥	leonardo2 (chatzilla@moz-pkgiv7.retail.telecomitalia.it) has joined #rust
2017-01-06 11:45:59	◥	junqed (junqed@moz-egr.l1h.70.178.IP) has joined #rust
2017-01-06 11:46:18	◥	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has joined #rust
2017-01-06 11:46:22	◥	arBmind (Andreas@moz-3cfik1.dyn.telefonica.de) has joined #rust
2017-01-06 11:46:28	misdreavus	i'm still holding out for a good way to impl an async library that doesn't make assumptions about the stack it's working in
2017-01-06 11:46:28	◣	seiks (seiks@moz-i8hc0i.517r.f285.11c0.2a00.IP) has quit (Quit: Farewell!)
2017-01-06 11:46:34	◣	nairware (CELLIS@moz-p2c267.rlghnc.sbcglobal.net) has quit (Quit: Leaving.)
2017-01-06 11:46:56	misdreavus	i might just be unaware of it, tho
2017-01-06 11:47:00	◣	Jesin (Jesin@moz-a58euv.fios.verizon.net) has quit (Quit: Leaving)
2017-01-06 11:47:21	carllerche	misdreavus: what do you mean?
2017-01-06 11:47:40	misdreavus	i'm not sure how to make it so that i just hand back some future that can be shunted into whatever stack, unless everything's going to settle on tokio or what have you
2017-01-06 11:47:44	◥	hansaplast (hansaplast@moz-ifuba5.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-06 11:47:53	carllerche	misdreavus: tokio is very decoupled
2017-01-06 11:47:58	misdreavus	i haven't paid all that much attention into anything more concrete than the futures lib itself
2017-01-06 11:48:02	◥	ubsandroid_ (ubsan@moz-v52bu0.fpeu.gb19.fb90.2607.IP) has joined #rust
2017-01-06 11:48:23	carllerche	misdreavus: most of tokio doesn't even assume tokio-core
2017-01-06 11:49:05	◥	tel (tel@moz-rdn.5rl.148.204.IP) has joined #rust
2017-01-06 11:49:26	misdreavus	hmm
2017-01-06 11:50:02	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-06 11:50:03	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:50:06	misdreavus	i'll have to look into it, then
2017-01-06 11:50:13	◥	duosrx (DuoSRX@moz-ghn5ka.vc.shawcable.net) has joined #rust
2017-01-06 11:50:17	◣	skeet70 (skeet70@moz-fhj1ud.blng.qwest.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 11:52:24	Ralith	hm
2017-01-06 11:53:27	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:53:40	◣	duosrx (DuoSRX@moz-ghn5ka.vc.shawcable.net) has quit (Quit: WeeChat 1.6)
2017-01-06 11:53:49	◣	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has left #rust
2017-01-06 11:53:53	◣	ghisvail__ (ghisvail@moz-r5f5iu.iqfg.unmu.0630.2001.IP) has quit (Client exited)
2017-01-06 11:54:17	ted	misdreavus: it seems well-designed, although i haven't dug too deep into the stack
2017-01-06 11:54:38	ted	all the Futures stuff doesn't even require a reactor, you can just sync-wait on things if you want
2017-01-06 11:55:12	misdreavus	yeah, i like how the futures stuff has come together, it's the event-loop implementations that i'm concerned with
2017-01-06 11:55:21	staticassert	Is there a way to 'get' and remove an item from a btreemap in one call?
2017-01-06 11:55:22	misdreavus	but maybe i'm thinking about ti wrong
2017-01-06 11:55:37	◥	mcarton (martin@moz-6c82jn.adsl-surfen.hetnet.nl) has joined #rust
2017-01-06 11:55:56	◣	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 11:56:02	◥	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has joined #rust
2017-01-06 11:56:24	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-06 11:56:37	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Connection closed)
2017-01-06 11:56:39	◣	acrichto (acrichto@moz-jmo.ol1.82.146.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 11:58:03	◥	nkr (nkr@moz-65q.mqv.99.179.IP) has joined #rust
2017-01-06 11:58:06	misdreavus	any idea what segment of the stack i should concern my research with? or should i take a look at hyper's tokio branch and get familiar with that for when it lands?
2017-01-06 11:58:45	carllerche	misdreavus: "event loops" are decoupled from the system
2017-01-06 11:58:57	carllerche	tokio-core provides one, and it probably is what you want to use
2017-01-06 11:59:03	carllerche	if you want non-blocking IO
2017-01-06 11:59:11	carllerche	that being said, if you have a reason not to use it, you don't have to
2017-01-06 11:59:22	carllerche	and it will still work w/ any other library that uses tokio-core
2017-01-06 11:59:26	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-06 11:59:35	misdreavus	my concern is not making assumptions about the consumer's setup and/or making it as easy as possible to use my library
2017-01-06 12:00:11	carllerche	misdreavus: you could use tokio under the hood and completely encapsulate it
2017-01-06 12:00:24	◥	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has joined #rust
2017-01-06 12:00:26	carllerche	you could even have your library provide a synchronous API and still use tokio under the hood
2017-01-06 12:00:33	◥	lenwood (manjaro-kde@moz-0u4ssi.r4a5.s6a3.8108.2a02.IP) has joined #rust
2017-01-06 12:00:43	carllerche	I think your concerns are based on your experience w/ other platforms :)
2017-01-06 12:00:51	carllerche	you should probably give it a shot and ask questions in gitter
2017-01-06 12:00:55	misdreavus	pretty much, yeah :P
2017-01-06 12:00:58	◥	Maplicant (Maplicant@moz-48e6ac.dynamic.ziggo.nl) has joined #rust
2017-01-06 12:01:03	◥	ai (ai@moz-0bh.58o.60.92.IP) has joined #rust
2017-01-06 12:01:11	misdreavus	i'm remembering making sync and async versions of everything in .net
2017-01-06 12:01:18	Ralith	I still wish futures were a single value, rather than having Result awkwardly munged into them
2017-01-06 12:01:40	carllerche	Ralith: I think that to do so ergonomically is blocked on some rust language features
2017-01-06 12:01:47	◥	plausibility-M (plausibili@moz-905bpb.openmarket.com) has joined #rust
2017-01-06 12:01:49	plausibility-M	jauhien: hey idk if you can help but I'm doing the iron-kaleidoscope tutorial with llvm-rs (iron-llvm doesn't compile on my machine) and the jit ends up crashing my program consistently. The first time I jit a module it works and evals as usual. But when I add to the module and jit again it crashes. When I make a new module and jit that, it also crashes. When I make a clone of the module, it also crashes
2017-01-06 12:02:00	misdreavus	so that's what i'm hung up with, do i force one way or the other or try to accomodate both methods, and how would i approach that
2017-01-06 12:02:24	◣	leonardo2 (chatzilla@moz-pkgiv7.retail.telecomitalia.it) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161208153507])
2017-01-06 12:02:27	pingveno	misdreavus: Perhaps hyper would be a good project to consult?
2017-01-06 12:02:50	misdreavus	yeah, i'll need to see what they've done in the tokio branch
2017-01-06 12:02:51	carllerche	misdreavus: one interesting point... the rust openssl library was originally written assuming synchronous / std::io... but it just worked out of the box w/ tokio
2017-01-06 12:03:14	carllerche	that being said, it also correctly handled the std::io::WouldBlock error
2017-01-06 12:03:16	◥	Altenius (Altenius@moz-3mi.gai.193.199.IP) has joined #rust
2017-01-06 12:03:23	misdreavus	that's cool, but how did the api surface look, and how was it integrated?
2017-01-06 12:03:28	seanmonstar	fwiw, when hyper releases the tokio branch on crates.io, reqwest will be upgrade to use it internally, and keep its synchronous api
2017-01-06 12:04:00	◥	bread|laptop (bread@moz-odk.a8v.130.12.IP) has joined #rust
2017-01-06 12:04:03	seanmonstar	and then also grow an async api, but its important to allow the sync api to keep working
2017-01-06 12:04:16	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-06 12:04:17	misdreavus	i remember seeing that
2017-01-06 12:04:26	◣	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has quit (Ping timeout: 121 seconds)
2017-01-06 12:04:27	pingveno	Because so many things already are built on the sync API?
2017-01-06 12:04:57	seanmonstar	because a lot of applications jsut need 1 or 2 requests made, and cant really do anything while they wait for it
2017-01-06 12:05:07	carllerche	misdreavus: the openssl lib didn't change, you can see here it's mostly just adding a future based handshake API: https://github.com/alexcrichton/tokio-openssl/blob/master/src/lib.rs
2017-01-06 12:05:10	▷	misdreavus is a little obsessed with library design >_>
2017-01-06 12:05:11	seanmonstar	im thinking of things like rustup
2017-01-06 12:05:24	◥	skeeter (skeeter@moz-d5s7vm.tukw.qwest.net) has joined #rust
2017-01-06 12:05:44	Ralith	carllerche: I'll buy that
2017-01-06 12:05:50	pingveno	Though rustup could conceivably want to switch to async, no?
2017-01-06 12:06:06	carllerche	the fact is, things are more "asynchronous" than you might expect in the synchronous world...
2017-01-06 12:06:06	seanmonstar	it could, but it doesnt get really anything from it
2017-01-06 12:06:10	◣	ubsandroid_ (ubsan@moz-v52bu0.fpeu.gb19.fb90.2607.IP) has quit (Connection closed)
2017-01-06 12:06:20	carllerche	signal interrupts, tailing files, etc...
2017-01-06 12:06:29	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-06 12:06:38	carllerche	most sync libs just gloss over those details though
2017-01-06 12:06:39	Diggsey	concurrent downloads potentially, although threads would also work
2017-01-06 12:07:03	seanmonstar	Diggsey: when its just a few requests, threads are fine. you want an event loop to handle thousands
2017-01-06 12:07:04	misdreavus	carllerche: heh, i wouldn't be surprised
2017-01-06 12:07:24	Morten	Is it possible to return an immutable reference to the contents of a RefCell?
2017-01-06 12:07:25	Diggsey	yes, the only thing it buys you is not having to synchronize
2017-01-06 12:07:37	◥	ubsandroid_ (ubsan@moz-mt65v7.fpeu.gb19.fb90.2607.IP) has joined #rust
2017-01-06 12:07:48	talchas	Diggsey: no, you still need to synchronize with async
2017-01-06 12:07:50	seanmonstar	Morten: only the Ref guard from .borrow()
2017-01-06 12:07:55	talchas	it's just that the primitives are very different :P
2017-01-06 12:07:56	◣	nkr (nkr@moz-65q.mqv.99.179.IP) has quit (Connection closed)
2017-01-06 12:07:57	Diggsey	not if you run them on the same thread
2017-01-06 12:08:06	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-06 12:08:07	Ralith	still, I'm finding it not uncommon in actual code to have to do weird gymnastics with uninhabited types to eliminate irrelevant cases
2017-01-06 12:08:41	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 12:08:54	misdreavus	i'm writing egg-mode with twitter clients in mind, who will probably want to have several connections open to accomodate the various streams, multipled by the number of accounts being served
2017-01-06 12:09:10	Morten	seanmonstar: thanks
2017-01-06 12:09:19	misdreavus	so that's really the use case i have in mind, a passive stream that could emit data sporadically
2017-01-06 12:09:53	◣	bread|laptop (bread@moz-odk.a8v.130.12.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 12:10:55	◣	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Ping timeout: 121 seconds)
2017-01-06 12:11:16	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-06 12:11:27	◥	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has joined #rust
2017-01-06 12:12:16	misdreavus	i could pop my own thread for it and return a channel, or create a blocking iterator that would wait when iterated upon, but it would be nicer to play into an event loop so it could also be used for servers that intercept notifications for an arbitrary number of accounts
2017-01-06 12:12:26	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 12:12:47	misdreavus	i just don't know enough about how the ecosystem is getting along to know what's best
2017-01-06 12:13:14	◥	bread|laptop (bread@moz-fck.dqc.236.173.IP) has joined #rust
2017-01-06 12:13:40	◥	mchang (mchang@moz-786mcj.res.rr.com) has joined #rust
2017-01-06 12:13:47	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Connection closed)
2017-01-06 12:13:53	◥	hub (hub@moz-59grbl.cpe.pppoe.ca) has joined #rust
2017-01-06 12:14:25	Ralith	seanmonstar: doing async downloads would allow rustup to e.g. display a nice progress bar
2017-01-06 12:15:04	seanmonstar	thats possible with the sync downloads
2017-01-06 12:15:06	◣	mandeep (mandeep@moz-ca9.dfa.8.198.IP) has quit (Quit: Leaving)
2017-01-06 12:15:20	seanmonstar	as long as you use read() and not read_to_end()
2017-01-06 12:16:15	◥	mkmodrzew (Michal@moz-jhq6n3.168.pxs.pl) has joined #rust
2017-01-06 12:16:40	◣	lenwood (manjaro-kde@moz-0u4ssi.r4a5.s6a3.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 12:17:29	Diggsey	tbh, parallelizing the download and installation is more important, and since tokio doesn't support async filesystem access, it would need to use threads anyway
2017-01-06 12:17:53	◥	sano (sano@moz-mrc.jiq.253.92.IP) has joined #rust
2017-01-06 12:17:55	◣	sano (sano@moz-mrc.jiq.253.92.IP) has quit (Connection closed)
2017-01-06 12:17:58	carllerche	Diggsey: somebody just has to implement a FS API that dispatches to a thread pool :)
2017-01-06 12:18:06	Diggsey	heh :P
2017-01-06 12:18:13	Diggsey	not on windows :P
2017-01-06 12:18:59	seanmonstar	my understanding of iocp is fairly shallow, but it looks like an OS managed thread pool basically
2017-01-06 12:19:29	talchas	and I mean the normal solution is to just write to disk as if it won't block
2017-01-06 12:19:57	talchas	"OS buffering will cover all the possible latency lalalalala"
2017-01-06 12:20:05	talchas	(it probably will...)
2017-01-06 12:20:07	seanmonstar	perfect
2017-01-06 12:20:30	◥	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has joined #rust
2017-01-06 12:20:32	⚡	bholley is now known as bholley_away
2017-01-06 12:21:16	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-06 12:21:16	talchas	and for something like rustup, if your internet is fast enough that disk latency is an issue, your download is done fast enough that it really doesn't matter or your disk is so slow that nothing will save you
2017-01-06 12:21:34	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-06 12:21:36	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-06 12:21:43	Ralith_	that breaks down if e.g. you're downloading compressed data
2017-01-06 12:21:47	Ralith_	and uncompressing it
2017-01-06 12:21:50	Ralith_	which you almost always are...
2017-01-06 12:21:53	Diggsey	it's not as simple as download data -> write to file
2017-01-06 12:21:59	◥	ShadowIce_ (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 12:22:07	◣	junqed (junqed@moz-egr.l1h.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 12:22:20	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-06 12:22:35	Ralith_	and writing to disk takes time, even if it's not a ton, so you want to do that concurrently
2017-01-06 12:23:09	◣	Mermi (uid96745@moz-ltoie4.hathersage.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-06 12:23:12	◣	Maplicant (Maplicant@moz-48e6ac.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2017-01-06 12:24:09	talchas	yeah, ideally you do, but in practice you can probably get away with not
2017-01-06 12:24:14	Diggsey	it's more like: download data -> extract data -> write files to disk -> read components file -> begin transaction -> copy files from tmp to target -> end transaction
2017-01-06 12:24:50	talchas	besides I forget if nonblocking even works on disk fds in linux
2017-01-06 12:25:55	zwol	I don't think it does
2017-01-06 12:26:01	◣	ShadowIce_ (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-06 12:26:11	talchas	yeah
2017-01-06 12:26:15	zwol	I mean, you can do the fcntl, it just won't have any effect
2017-01-06 12:26:25	◣	rkruppe (chatzilla@moz-c6skn4.unity-media.net) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161213225203])
2017-01-06 12:26:26	talchas	"no really, you can read without blocking"
2017-01-06 12:26:46	◣	ubsandroid_ (ubsan@moz-mt65v7.fpeu.gb19.fb90.2607.IP) has quit (Quit: <3)
2017-01-06 12:26:53	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-06 12:27:50	Ralith_	talchas: fs ops more or less have to be threadpool-based on all platforms
2017-01-06 12:29:00	zwol	Windows's "read this many bytes and tell me when you're done" paradigm would be _easier_ to plug file I/O into, but I have this suspicion it doesn't actually work...
2017-01-06 12:29:27	_habnabit	"doesn't work"?
2017-01-06 12:29:40	talchas	"just does a blocking read and then says it's done"
2017-01-06 12:29:44	◣	jdm (jdm@moz-161.l3r.137.24.IP) has quit (Quit: )
2017-01-06 12:29:47	talchas	but I wouldn't be surprised if it actually did work
2017-01-06 12:29:51	zwol	yeah
2017-01-06 12:30:07	Ralith_	even then, I strongly doubt metadata ops are properly async
2017-01-06 12:30:08	_habnabit	i'm p sure windows has real async disk io
2017-01-06 12:30:33	Ralith	once you're maintaining a responsive UI and running multiple downloads and stuff threads start getting more and more complicated to use
2017-01-06 12:30:51	◣	creationix (creationix@moz-28au0f.cpe.cableone.net) has quit (Ping timeout: 121 seconds)
2017-01-06 12:30:57	◣	skeeter (skeeter@moz-d5s7vm.tukw.qwest.net) has quit (Quit: WeeChat 1.6)
2017-01-06 12:31:00	◥	skeeter (skeeter@moz-d5s7vm.tukw.qwest.net) has joined #rust
2017-01-06 12:31:07	◥	rubdos (rubdos@moz-n5d9du.access.telenet.be) has joined #rust
2017-01-06 12:31:46	◥	dm3 (dm3@moz-eaq.811.60.78.IP) has joined #rust
2017-01-06 12:31:46	◣	Guest30 (textual@moz-4okr2k.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 12:32:17	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-06 12:32:20	seanmonstar	theres aio in linux, but people seem to hate it
2017-01-06 12:33:37	◥	creationix (creationix@moz-tmh.oju.32.72.IP) has joined #rust
2017-01-06 12:33:38	talchas	they're just wrappers around a libc thread pool
2017-01-06 12:33:47	◣	sleffy (sleffy@moz-qf0hg8.4f2e.erii.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 12:33:51	talchas	oh, no, they _originally_ were that
2017-01-06 12:34:06	◣	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-06 12:34:24	◥	cjhowe (textual@moz-aomlp1.hr.cox.net) has joined #rust
2017-01-06 12:35:57	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-06 12:35:57	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-06 12:38:46	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2017-01-06 12:39:14	seanmonstar	talchas: getaddrinfo_a is that though. its horrid :_(
2017-01-06 12:39:49	◥	sleffy (sleffy@moz-qf0hg8.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-06 12:41:07	◥	nZac (nZac@moz-0knq4t.midco.net) has joined #rust
2017-01-06 12:41:50	◣	hansaplast (hansaplast@moz-ifuba5.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2017-01-06 12:42:33	talchas	actually, looking at glibc I'm not sure if its posix-aio actually uses the kernel io_submit/etc features
2017-01-06 12:43:21	◥	nkr (nkr@moz-p2a.qp2.141.177.IP) has joined #rust
2017-01-06 12:43:43	◣	sreinhardt (quassel@moz-rql.nt3.148.198.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 12:43:52	◥	sreinhardt (quassel@moz-rql.nt3.148.198.IP) has joined #rust
2017-01-06 12:44:24	◥	hansaplast (hansaplast@moz-33ncn9.ve71.89v9.120b.2a02.IP) has joined #rust
2017-01-06 12:44:34	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Connection closed)
2017-01-06 12:44:36	◣	creationix (creationix@moz-tmh.oju.32.72.IP) has quit (Connection closed)
2017-01-06 12:44:51	talchas	yeah, you have to use libaio
2017-01-06 12:44:59	◥	dm3 (dm3@moz-eaq.811.60.78.IP) has joined #rust
2017-01-06 12:46:37	◥	darthdeus_ (darthdeus@moz-2rmvf7.net.upcbroadband.cz) has joined #rust
2017-01-06 12:47:24	◣	nkr (nkr@moz-p2a.qp2.141.177.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 12:47:52	◥	vadix (vadix@moz-57uuv7.nkcu.i5co.05c1.2601.IP) has joined #rust
2017-01-06 12:48:02	zwol	Any NetBSD gurus around?  I have tripped over a really weird problem while trying to add 'waitid' to the libc crate.
2017-01-06 12:48:05	vadix	hey, I think this is a rustc bug: https://play.rust-lang.org/?gist=b15a970ded055660eef578a78d460188&version=stable&backtrace=0
2017-01-06 12:48:28	zwol	https://travis-ci.org/rust-lang/libc/jobs/189564924#L838 <-- _inside libc_, an undefined reference to 'wait6'
2017-01-06 12:49:01	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 12:49:06	vadix	does anyone know if that is a bug or if it is ambiguous?
2017-01-06 12:49:22	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-06 12:49:34	@steveklabnik	i believe it's a bug and there's something open
2017-01-06 12:49:53	vadix	ahh, okay, so long as somebody else already filed an issue its fine then
2017-01-06 12:51:59	◥	dm3 (dm3@moz-eaq.811.60.78.IP) has joined #rust
2017-01-06 12:52:36	staticassert	https://is.gd/F4XQcK This feels like a borrow checker issue to me. I want to get a key, and delete the value from the map if it's expired, or return the value if it isn't.
2017-01-06 12:52:43	◣	afshinmeh (textual@moz-l7tom4.hgkk.s1m0.8084.2a02.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 12:53:06	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 12:53:09	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 12:53:24	talchas	yeah, it's obnoxious
2017-01-06 12:54:01	talchas	oh actually yours is just the "use entry" issue
2017-01-06 12:54:32	talchas	except of course that entry can't take a &K
2017-01-06 12:54:36	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Connection closed)
2017-01-06 12:54:48	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 12:55:19	◥	hegza (hegza@moz-4q6iko.paivola.fi) has joined #rust
2017-01-06 12:56:25	◣	montanonic (nicholas@moz-u3evs7.or.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-06 12:57:12	misdreavus	there's probably a hacky way around it involving creating new scopes and a flag you check once you've dropped the reference
2017-01-06 12:57:14	talchas	anyways, as you have it written it's not really a borrow checker weakness (you still have access to val at that point, which is a reference to data stored in the hashmap), but if you fix that it still won't work because the borrow checker isn't geed enough
2017-01-06 12:57:22	◥	Kreest (Kreest@moz-itv67e.pool.invitel.hu) has joined #rust
2017-01-06 12:57:38	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
2017-01-06 12:57:44	◥	Jesin (Jesin@moz-a58euv.fios.verizon.net) has joined #rust
2017-01-06 12:57:47	◣	starblue (juergen@moz-g0jl61.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-06 12:57:49	TheDan64	Does the stdin read_to_string method (and similar methods) overwrite existing data in a string? Like, it doesn't append to existing string data, correct?
2017-01-06 12:57:51	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 12:58:00	◣	bread|laptop (bread@moz-fck.dqc.236.173.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 12:58:08	@steveklabnik	it appends
2017-01-06 12:58:09	@steveklabnik	iirc
2017-01-06 12:58:14	TheDan64	:O
2017-01-06 12:58:16	◣	vadix (vadix@moz-57uuv7.nkcu.i5co.05c1.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 12:58:23	◣	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has quit (Ping timeout: 121 seconds)
2017-01-06 12:58:23	◥	Sklopi (tobias@moz-dgvh9q.dip0.t-ipconnect.de) has joined #rust
2017-01-06 12:58:24	TheDan64	good think I asked, thanks
2017-01-06 12:58:26	@steveklabnik	https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_to_end
2017-01-06 12:58:33	@steveklabnik	All bytes read from this source will be appended to the specified buffer buf.
2017-01-06 12:58:34	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Connection closed)
2017-01-06 12:58:43	TheDan64	ahh
2017-01-06 12:58:45	talchas	misdreavus: unfortunately the borrow checker will still not let that work, even though it would be safe
2017-01-06 12:58:46	TheDan64	thanks!
2017-01-06 12:59:12	@steveklabnik	no problem :)
2017-01-06 12:59:14	@steveklabnik	String.clear will be your friend :)
2017-01-06 12:59:16	talchas	because since you return it in one branch, the borrow of the map occurs for that entire duration in all branches
2017-01-06 12:59:37	◥	russ_za|2 (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 12:59:37	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 12:59:38	talchas	you can get around it if you do two lookups in all cases
2017-01-06 12:59:46	misdreavus	huh, weird
2017-01-06 12:59:55	talchas	(well, the Present/Expired cases)
2017-01-06 13:00:35	◣	Kreest_ (Kreest@moz-itv67e.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-06 13:01:47	◣	kulshrax (kulshrax@moz-lgr.jsl.201.199.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 13:01:53	◣	cjhowe (textual@moz-aomlp1.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 13:02:03	◣	gregwtmtno (Mibbit@moz-invk9d.savastaandco.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-06 13:02:08	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-06 13:02:09	◥	jdm (jdm@moz-fht3sk.0i4r.6uu5.8d80.2605.IP) has joined #rust
2017-01-06 13:02:09	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-06 13:02:17	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Connection closed)
2017-01-06 13:02:44	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-06 13:02:55	◣	sepp2k1 (Sepp2k@moz-8k7spj.dyn.telefonica.de) has quit (Connection closed)
2017-01-06 13:03:48	◥	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has joined #rust
2017-01-06 13:03:50	◥	cjhowe (textual@moz-aomlp1.hr.cox.net) has joined #rust
2017-01-06 13:03:51	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
2017-01-06 13:03:55	◥	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2017-01-06 13:04:00	◣	russ_za|2 (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
2017-01-06 13:04:18	◣	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has quit (Client exited)
2017-01-06 13:04:20	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-06 13:04:28	◥	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has joined #rust
2017-01-06 13:04:49	◣	burntsushi (burntsushi@moz-rhb6m6.fios.verizon.net) has quit (Connection closed)
2017-01-06 13:04:53	◣	rschifflin (randy@moz-ddf6l4.lv.cox.net) has quit (Ping timeout: 121 seconds)
2017-01-06 13:05:06	◥	Kreest_ (Kreest@moz-itv67e.pool.invitel.hu) has joined #rust
2017-01-06 13:06:25	Ralith	talchas: even libaio is only well-behaved in very specific circumstances
2017-01-06 13:06:26	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Connection closed)
2017-01-06 13:06:36	◥	supercurio (curio@moz-khkdde.cust.bredbandsbolaget.se) has joined #rust
2017-01-06 13:07:03	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:07:44	◣	hub (hub@moz-59grbl.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-06 13:07:48	Ralith	it's a severe case of "nobody's badgered the OS devs enough"
2017-01-06 13:07:50	◣	Kreest (Kreest@moz-itv67e.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-06 13:08:09	◣	tel (tel@moz-rdn.5rl.148.204.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-06 13:09:09	◥	burntsushi (burntsushi@moz-rhb6m6.fios.verizon.net) has joined #rust
2017-01-06 13:09:09	⚡	Mode #rust [+ao burntsushi burntsushi] by ChanServ
2017-01-06 13:09:29	zwol	Ralith, if you need help with yelling at glibc, I can help with that - probably best by email
2017-01-06 13:09:38	◥	tel (tel@moz-rdn.5rl.148.204.IP) has joined #rust
2017-01-06 13:09:43	◥	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2017-01-06 13:09:48	zwol	(says the man who just spent TWO YEARS getting them to add explicit_bzero)
2017-01-06 13:10:08	◥	creationix (creationix@moz-tmh.oju.32.72.IP) has joined #rust
2017-01-06 13:11:41	◣	JuanMiguel (JuanMiguel@moz-esg6ur.dynamicip.rima-tde.net) has quit (Quit: Saliendo)
2017-01-06 13:12:17	maurer	Does anyone know if a tokio event loop and RwLocks are going to be friends? I'm kind of suspecting no... (Specifically, if I take a lock inside an event loop, it suspends on IO, and another part of the event loop tries to take the lock, will it just block the whole thread and stop?)
2017-01-06 13:12:24	◥	junqed (junqed@moz-egr.l1h.70.178.IP) has joined #rust
2017-01-06 13:12:59	talchas	maurer: "suspends on io" I don't think will happen
2017-01-06 13:13:15	maurer	talchas: I guess I don't understand tokio at all then :P
2017-01-06 13:13:19	◣	gunibert (gunibert@moz-1v6nka.dynamic.kabel-deutschland.de) has quit (Client exited)
2017-01-06 13:13:34	◣	sleffy (sleffy@moz-qf0hg8.4f2e.erii.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:13:34	maurer	Specifically, the thing I was worried about was:
2017-01-06 13:13:40	talchas	maurer: I mean, it's like monad-io - all blocking is in and_then and such
2017-01-06 13:13:43	maurer	1.) Takes RwLock, makes async IO call
2017-01-06 13:13:47	talchas	and you won't be able to hold an rwlock across that
2017-01-06 13:13:50	◥	Kreest__ (Kreest@moz-itv67e.pool.invitel.hu) has joined #rust
2017-01-06 13:13:59	maurer	I see
2017-01-06 13:14:30	maurer	(also, I kind of wish we had something like do notation)
2017-01-06 13:14:38	maurer	(building futures over and_then and similar gets really clumsy)
2017-01-06 13:14:55	▷	maurer goes back to reading and re-reading tokio
2017-01-06 13:15:08	talchas	time to write do! { ... } :P
2017-01-06 13:15:22	maurer	I already wrote my complicated fancy macro for my edsl
2017-01-06 13:15:34	maurer	and I've decided macros are not to the point where they're fully useful yet
2017-01-06 13:15:35	◣	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:15:40	Ralith	zwol: unfortunately, this is a kernel issue; I believe Linus is philosophically opposed to first-class async fs IO for stupid reasons (charitably, perhaps his ulterior motivation is "we'd have to fix all the FS drivers")
2017-01-06 13:15:43	maurer	am waiting for macros 2 before I try anything fancy again
2017-01-06 13:15:49	◣	Kreest_ (Kreest@moz-itv67e.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-06 13:16:10	maurer	https://github.com/maurer/holmes/blob/master/src/edsl.rs was enough bs, and it doesn't even produce that pretty of an edsl
2017-01-06 13:16:17	maurer	since I'm pretty limited on my dispatch mechanism
2017-01-06 13:16:20	◥	rschifflin (randy@moz-ddf6l4.lv.cox.net) has joined #rust
2017-01-06 13:16:25	WindowsBunny	Ralith: NT meanwhile uses IOCP as the backbone of how all IO is implemented
2017-01-06 13:16:39	◥	kulshrax (kulshrax@moz-tppr0q.j0qm.7vpd.010d.2620.IP) has joined #rust
2017-01-06 13:16:51	WindowsBunny	Ralith: I mean heck, even DeviceIoControl takes an OVERLAPPED to do async
2017-01-06 13:16:53	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Quit: WeeChat 1.5)
2017-01-06 13:17:02	◣	junqed (junqed@moz-egr.l1h.70.178.IP) has quit (Connection closed)
2017-01-06 13:17:13	◥	junqed (junqed@moz-egr.l1h.70.178.IP) has joined #rust
2017-01-06 13:17:38	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Connection closed)
2017-01-06 13:17:42	◥	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has joined #rust
2017-01-06 13:17:47	maurer	talchas: So, my general issue is  that I'm trying to make a collection of asynchronous tasks which wake up when told, do another iteration of their job (which involves touching a shared object), set some state, and go back to sleep until reawoken
2017-01-06 13:18:03	misdreavus	i wonder if i could cache a process-wide tokio_core::reactor::Handle to hand to all the hyper/tokio requests...
2017-01-06 13:19:07	◥	Kreest_ (Kreest@moz-itv67e.pool.invitel.hu) has joined #rust
2017-01-06 13:19:09	maurer	talchas: I'm both trying to figure out a good mechanism for the reawaken mechanism (my current guess is to use a future reading off a channel, but that means that multiple "wake up" messages will do multiple loops, which I don't actually want), and what kind of protection I want to put on the shared object
2017-01-06 13:19:17	seanmonstar	misdreavus: a handle is a thread local reference to an event loop
2017-01-06 13:19:25	misdreavus	damn
2017-01-06 13:19:32	Ralith	WindowsBunny: really? where's my IOCP for user input/windowing system messages, hm? :P
2017-01-06 13:20:04	◣	Kreest__ (Kreest@moz-itv67e.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-06 13:20:33	maurer	talchas: My worry about needing a lock on the shared object comes because the shared object may itself do futures-based IO during one of its calls on the same event loop
2017-01-06 13:20:41	◣	kulshrax (kulshrax@moz-tppr0q.j0qm.7vpd.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:21:02	staticassert	talchas: I don't think I can use entry for this?
2017-01-06 13:21:06	◥	Fanaen (Fanaen@moz-98uk86.6rfj.92aj.0e35.2a01.IP) has joined #rust
2017-01-06 13:21:21	◣	rschifflin (randy@moz-ddf6l4.lv.cox.net) has quit (Ping timeout: 121 seconds)
2017-01-06 13:21:35	seanmonstar	maurer: include an atomic flag that you check before sending on the channel? The flag is reset when the receiver wakes up
2017-01-06 13:21:46	seanmonstar	so you only send 1 message between wakeups
2017-01-06 13:22:10	staticassert	nmatsakis: wooh! CIC
2017-01-06 13:22:11	◣	jdm (jdm@moz-fht3sk.0i4r.6uu5.8d80.2605.IP) has quit (Quit: )
2017-01-06 13:22:15	maurer	seanmonstar: Yeah, I was thinking of doing something like that, and I suppose if I make the person pinging check the flag state they'll know whether or not to send a message
2017-01-06 13:22:23	Dryvnt	why does rustup install i686 toolchains by default
2017-01-06 13:22:25	misdreavus	hmm, i'll need to dig further; i'm looking for a way to easily switch between using a default connector and using the handle
2017-01-06 13:22:29	talchas	staticassert: yeah, entry would need a variant that takes &K rather than K
2017-01-06 13:22:35	Dryvnt	i fought against openssl for so long - turns out i had 64bit libs and 32bit linkers
2017-01-06 13:22:48	maurer	seanmonstar: still not quite sure what to do about protecting a shared object used in multiple tasks though
2017-01-06 13:23:05	◥	allegoryofthecave (allegoryoft@moz-icl.nvf.82.124.IP) has joined #rust
2017-01-06 13:24:02	maurer	Basically I'm worried that .and_then() pausing and lock-based blocking might not be compatible, though talchas seems to imply they are (which I don't fully understand)
2017-01-06 13:24:09	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 13:24:23	Ralith	seanmonstar: fwiw, there is now finally a sane, correct way to do async name lookup on linux: talk to systemd-resolved over dbus
2017-01-06 13:24:39	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-06 13:25:27	talchas	Ralith: you said sane and dbus and systemd in the same sentence :(
2017-01-06 13:25:33	◥	sleffy (sleffy@moz-vrrfkr.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-06 13:25:36	⚡	bholley_away is now known as bholley
2017-01-06 13:25:37	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-06 13:25:59	Rolph	Does anyone know how to use rust bindgen with multiple header files? They are dependent on each other, so I can't just do one at a time :'(
2017-01-06 13:26:43	Diggsey	Dryvnt: what OS are you on?
2017-01-06 13:26:45	◣	ptalbot (ptalbot@moz-cvpth3.0c6p.cv4v.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:26:51	talchas	maurer: if you wanted the shared object to do an aio thing, it would most likely do so by returning a Future/etc
2017-01-06 13:27:01	◣	cjhowe (textual@moz-aomlp1.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 13:27:20	maurer	talchas: The problem is that it is both doing aio (tokio_postgres) and updating a data structure (a HashMap)
2017-01-06 13:27:25	talchas	which would then get run _outside_ of the rwlock, and would need to retake the lock to access the shared object
2017-01-06 13:27:31	◣	Kreest_ (Kreest@moz-itv67e.pool.invitel.hu) has quit (Connection closed)
2017-01-06 13:27:46	Ralith	talchas: what's wrong with dbus?
2017-01-06 13:28:03	talchas	Ralith: it's mostly implementation suckiness I guess
2017-01-06 13:28:10	Dryvnt	Diggsey: Windows
2017-01-06 13:28:17	talchas	though the excessive xml for the metadata is a pain too
2017-01-06 13:28:32	◣	Sklopi (tobias@moz-dgvh9q.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2017-01-06 13:28:33	Diggsey	Dryvnt: it should automatically detect the bit-ness of your OS
2017-01-06 13:28:38	maurer	Ralith: As recently as a month or so ago, it was possible to jam dbus up by sending a dbus message with a particular part of the payload being a 0-sized buffer
2017-01-06 13:28:44	◣	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has quit (Quit: WeeChat 1.6)
2017-01-06 13:29:00	maurer	Ralith: Since systemd depends on dbus as its communication mechanism, this meant that an untrusted user on a system could effectively lock up the init control mechanism
2017-01-06 13:29:04	Dryvnt	Diggsey: Well, it's installed both i686 msvc and gnu when I auto-installed those toolchains (rustup install nightly-windows-msvc)
2017-01-06 13:29:19	maurer	Ralith: On top of that, it's a less performant message passing service than most others
2017-01-06 13:30:12	◣	Douman (Douman@moz-8toj66.dynamic.mts-nn.ru) has quit (Quit: )
2017-01-06 13:30:43	maurer	talchas: OK, seems like it should work - other question then - am I gauranteed that the event loop is only running one task at a time, or is tokio allowed to use multiple worker threads at its discretion?
2017-01-06 13:30:53	◥	jdm (jdm@moz-dnea23.0i4r.6uu5.8d80.2605.IP) has joined #rust
2017-01-06 13:30:53	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-06 13:30:57	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:30:59	talchas	that's up to what reactor you're using
2017-01-06 13:31:05	maurer	(if it's gauranteed to use a single task at a time, I can just use RefCells instead of RwLocks
2017-01-06 13:31:12	maurer	talchas: Oh, there's more than one reactor?
2017-01-06 13:31:16	maurer	I was only aware of Core
2017-01-06 13:31:21	◣	ot (ot@moz-gmtpic.cpe.webspeed.dk) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161213212120])
2017-01-06 13:31:43	talchas	if you use RefCell your futures won't be Send, and the reactor should require that if it may use multiple threads
2017-01-06 13:31:58	Ralith	maurer: good thing they fixed that, then!
2017-01-06 13:32:04	carllerche	maurer: tokio-core is single threaded
2017-01-06 13:32:10	◥	hub (hub@moz-6un.mr4.70.69.IP) has joined #rust
2017-01-06 13:32:14	carllerche	But there can be many cores running
2017-01-06 13:32:27	maurer	carllerche: Sure, but this means that if I'm running all the jobs on the same Handle
2017-01-06 13:32:32	Diggsey	Dryvnt: did you override RUSTUP_HOME, or delete the .rustup folder at any point?
2017-01-06 13:32:34	maurer	they have mutual exclusion built in
2017-01-06 13:32:37	maurer	unless I misunderstand
2017-01-06 13:32:56	talchas	and yeah, if you look at tokio-core you'll see that .run doesn't require Send
2017-01-06 13:32:56	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2017-01-06 13:32:57	maurer	Ralith: The problem is not "I know dbus to be currently broken", or I'd report the bug
2017-01-06 13:33:12	Dryvnt	Diggsey: RUSTUP_HOME, as in the env var? RUST_HOME is not defined.
2017-01-06 13:33:12	talchas	and Handle does not either (though Remote of course does)
2017-01-06 13:33:21	maurer	Ralith: the problem is that it's not what I'd consider a component stable enough to stack everything else on top of
2017-01-06 13:33:27	Dryvnt	Uh. RUSTUP_HOME, rather.
2017-01-06 13:33:34	◣	davs_ (davs@moz-5fltd5.178-41-153.t-com.sk) has quit (Ping timeout: 121 seconds)
2017-01-06 13:33:51	maurer	talchas: Yeah, I forgot that the Future would have to be Send, which would indeed allow rust to enforce this for me
2017-01-06 13:34:02	maurer	I guess if I'd just written the code rather than asking, rust would have informed me if I got it wrong
2017-01-06 13:34:06	carllerche	Yes rust enforces that
2017-01-06 13:34:12	◥	fwiw (fwiw@moz-l7r.mds.82.36.IP) has joined #rust
2017-01-06 13:34:26	maurer	I'm just so used to it being easy to accidentally race, and figured if I was using a dynamically failing object like a RefCell, I'd already wanderd out of the safety zone
2017-01-06 13:34:31	Ralith	I'm not planning on doing millions of name resolutions per second so perf isn't hugely important to me
2017-01-06 13:34:35	Diggsey	Dryvnt: rustup definitely detects the bitness correctly during installation, but there's a bug where if it loses the `settings.toml` for some reason, the next time it is created the "default_host_triple" gets set to the build triple
2017-01-06 13:35:43	◣	TheCycoONE (quassel@moz-d4s.1g6.223.162.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:35:45	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-06 13:36:00	◣	dm3 (dm3@moz-eaq.811.60.78.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:36:08	◥	micmus (sid158295@moz-mo6gg9.brockwell.irccloud.com) has joined #rust
2017-01-06 13:36:17	◥	cjhowe (textual@moz-aomlp1.hr.cox.net) has joined #rust
2017-01-06 13:37:13	◥	davs (davs@moz-5fltd5.178-41-153.t-com.sk) has joined #rust
2017-01-06 13:37:32	◣	nercury (nercury@moz-ngr949.static.zebra.lt) has quit (Quit: ZzzzzZzzZzzzZzZzzZ)
2017-01-06 13:37:37	Diggsey	Dryvnt: you can change it at any time with `rustup set default-host x86_64-pc-windows-msvc`
2017-01-06 13:37:37	Ralith	being able to make semantically well-behaved name resolution requests without gratuitous threading is, and we have that now
2017-01-06 13:37:46	◣	gingermusketeer (gingermuske@moz-icqrsk.compute.amazonaws.com) has quit (Connection closed)
2017-01-06 13:37:49	◣	fabiand (fabiand@moz-7ssoib.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2017-01-06 13:37:52	◥	gingermusketeer (gingermuske@moz-mo40rp.compute.amazonaws.com) has joined #rust
2017-01-06 13:38:06	◣	gclaugus (gclaugus@moz-fq4snb.qm4q.muqo.00c2.2601.IP) has quit (Quit: Leaving)
2017-01-06 13:38:16	◣	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has quit (Client exited)
2017-01-06 13:38:28	◣	sebk (sebk@moz-05nbdi.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2017-01-06 13:38:28	Dryvnt	Thanks
2017-01-06 13:39:03	◣	Frooxius (Frooxius@moz-7td.d1o.108.194.IP) has quit (Quit: *bubbles away*)
2017-01-06 13:39:46	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-06 13:40:03	◣	kybishop (kybishop@moz-1u0.2aq.88.146.IP) has quit (Connection closed)
2017-01-06 13:40:28	Ralith	maurer: it might not be mature, but at least it's got sane semantics--we're headed in the right direction.
2017-01-06 13:40:30	◥	kybishop (kybishop@moz-08s.kjf.88.146.IP) has joined #rust
2017-01-06 13:40:41	◣	tel (tel@moz-rdn.5rl.148.204.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-06 13:41:18	◣	kybishop (kybishop@moz-08s.kjf.88.146.IP) has quit (Connection closed)
2017-01-06 13:41:50	◥	Frooxius (Frooxius@moz-7td.d1o.108.194.IP) has joined #rust
2017-01-06 13:42:13	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-06 13:42:20	◣	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 13:43:48	staticassert	talchas: I can do &K if I need to, I just don't see how to write the code using the entry API
2017-01-06 13:43:51	⚡	mconley|interview is now known as mconley
2017-01-06 13:43:54	⚡	bholley is now known as bholley_away
2017-01-06 13:44:13	staticassert	What I'm trying to do seems clearly safe, just a pain to express
2017-01-06 13:44:54	talchas	staticassert: if entry took &K rather than K, it would be entry(key) and then .remove_entry() on the Expired path
2017-01-06 13:44:54	◣	tomprogrammer (thomas@moz-6kjq3u.dynamic.kabel-deutschland.de) has quit (Connection closed)
2017-01-06 13:45:34	talchas	(or I guess just .remove(), whichever)
2017-01-06 13:45:56	talchas	as it is, you're stuck doing .get twice
2017-01-06 13:46:30	stjepang	emilk: Hey I'm reading readme.md for drop-merge-sort. Just a minor nit on this sentence: " It needs long spans of nondecreasing elements to compete with the performance of Drop-Merge sort." You should perhaps replace "nondecreasing" with "monotonic".
2017-01-06 13:46:42	◣	hansaplast (hansaplast@moz-33ncn9.ve71.89v9.120b.2a02.IP) has quit (Connection closed)
2017-01-06 13:46:45	staticassert	talchas: can't I use unsafe somehow?
2017-01-06 13:46:47	◥	tel (tel@moz-rdn.5rl.148.204.IP) has joined #rust
2017-01-06 13:46:48	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-06 13:46:49	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-06 13:46:52	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-06 13:46:53	staticassert	Would like to do this with low overhead
2017-01-06 13:47:07	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (A TLS packet with unexpected length was received.)
2017-01-06 13:48:09	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-06 13:48:51	talchas	https://is.gd/RmHvNo is the safe way
2017-01-06 13:48:56	stjepang	emilk: Also, I'm really curious how it compares to the new slice::sort on sawtooth-like data. Have you perhaps benchmarked that case?
2017-01-06 13:48:57	◥	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has joined #rust
2017-01-06 13:49:07	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-06 13:49:14	◥	tomprogrammer (thomas@moz-58rhlm.thomas-bahn.net) has joined #rust
2017-01-06 13:49:53	◣	mkmodrzew (Michal@moz-jhq6n3.168.pxs.pl) has quit (Quit: Leaving)
2017-01-06 13:49:54	staticassert	talchas: hmm, is there an unsafe way? Maybe through some scope trickery?
2017-01-06 13:50:29	talchas	unsafe would be https://is.gd/n9HjgB
2017-01-06 13:51:47	staticassert	talchas: Thanks a lot. That makes sense to me, and looks safe.
2017-01-06 13:52:31	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-06 13:52:47	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-06 13:52:47	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-06 13:52:56	◥	durka42 (durka42@moz-h07.vjt.130.158.IP) has joined #rust
2017-01-06 13:53:25	◥	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2017-01-06 13:53:36	◣	tel (tel@moz-rdn.5rl.148.204.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-06 13:54:52	◥	wallacoloo____ (colin@moz-8lg3ne.dhcp4.washington.edu) has joined #rust
2017-01-06 13:55:05	◣	Th3Ma5hatt3r (Mibbit@moz-9gvvqp.atsec.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-06 13:56:58	◣	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-06 14:01:13	◥	eholk (eholk@moz-mvse7u.q885.vk5s.0000.2620.IP) has joined #rust
2017-01-06 14:02:25	◥	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has joined #rust
2017-01-06 14:02:42	◣	TheDan64 (TheDan64@moz-8fsg0b.ma.charter.com) has quit (Quit: Leaving)
2017-01-06 14:05:08	◥	duosrx_ (duosrx@moz-ghn5ka.vc.shawcable.net) has joined #rust
2017-01-06 14:05:46	◥	Ixrec (Ixrec@moz-k2sokt.dyn.plus.net) has joined #rust
2017-01-06 14:06:28	◣	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has quit (Ping timeout: 121 seconds)
2017-01-06 14:06:37	◣	mwoodruff (mwoodruff@moz-b97lm9.pa.comcast.net) has left #rust
2017-01-06 14:07:18	◣	undeadleech (undeadleech@moz-h6u6jb.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-06 14:07:23	◣	newpavlov (newpavlov@moz-0lh.tq3.23.89.IP) has quit (Quit: WeeChat 0.4.2)
2017-01-06 14:08:00	◣	hmmm (hmmm@moz-j7uguv.highway.telekom.at) has quit (Quit: Leaving)
2017-01-06 14:08:04	◣	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has quit (Ping timeout: 121 seconds)
2017-01-06 14:08:12	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-06 14:09:09	◥	jensend (jensend@moz-fms.95k.202.130.IP) has joined #rust
2017-01-06 14:09:10	◣	duosrx_ (duosrx@moz-ghn5ka.vc.shawcable.net) has quit (Ping timeout: 121 seconds)
2017-01-06 14:09:58	◣	davs (davs@moz-5fltd5.178-41-153.t-com.sk) has quit (Ping timeout: 121 seconds)
2017-01-06 14:12:05	◥	davs (davs@moz-gljmd0.178-41-245.t-com.sk) has joined #rust
2017-01-06 14:12:21	◣	stelarcf (stelarcf@moz-jd7lsk.com) has quit (Client exited)
2017-01-06 14:12:31	◥	stelarcf (stelarcf@moz-jd7lsk.com) has joined #rust
2017-01-06 14:13:04	◣	Andoriyu (Andoriyu@moz-h48khc.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-06 14:13:46	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-06 14:14:26	◣	jimb (user@moz-09a.i8g.126.207.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 14:14:53	◥	kulshrax (kulshrax@moz-i8755e.j0qm.7vpd.010d.2620.IP) has joined #rust
2017-01-06 14:15:41	◣	tomprogrammer (thomas@moz-58rhlm.thomas-bahn.net) has quit (Ping timeout: 121 seconds)
2017-01-06 14:16:47	◥	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has joined #rust
2017-01-06 14:17:03	◣	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has quit (Connection closed)
2017-01-06 14:17:27	◥	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has joined #rust
2017-01-06 14:17:34	◣	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has quit (Connection closed)
2017-01-06 14:17:56	◥	duosrx (duosrx@moz-ghn5ka.vc.shawcable.net) has joined #rust
2017-01-06 14:18:52	◣	creationix (creationix@moz-tmh.oju.32.72.IP) has quit (Connection closed)
2017-01-06 14:18:56	◣	kulshrax (kulshrax@moz-i8755e.j0qm.7vpd.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 14:19:36	◥	leo_ (leo@moz-q1i5or.nc.charter.com) has joined #rust
2017-01-06 14:20:49	◥	jimb (user@moz-09a.i8g.126.207.IP) has joined #rust
2017-01-06 14:21:36	◥	tomprogrammer (thomas@moz-am5.j3g.192.188.IP) has joined #rust
2017-01-06 14:22:22	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Connection closed)
2017-01-06 14:22:43	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-06 14:23:21	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-06 14:24:58	◥	cristicbz (cristicbz@moz-hmk.0p5.97.88.IP) has joined #rust
2017-01-06 14:25:13	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 14:25:26	cristicbz	what's the state of the art in controlling drop order these days? Option::take in drop?
2017-01-06 14:25:32	◣	wallacoloo____ (colin@moz-8lg3ne.dhcp4.washington.edu) has quit (Client exited)
2017-01-06 14:26:01	◥	Mraof (mraof@moz-a8mcs9.fios.verizon.net) has joined #rust
2017-01-06 14:26:45	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2017-01-06 14:26:50	◥	rschifflin (randy@moz-a0huqg.lv.cox.net) has joined #rust
2017-01-06 14:27:34	◥	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has joined #rust
2017-01-06 14:28:37	◥	rovar_ (rovar@moz-ai0250.wa.charter.com) has joined #rust
2017-01-06 14:28:39	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-06 14:29:45	◣	jdm (jdm@moz-dnea23.0i4r.6uu5.8d80.2605.IP) has quit (Quit: )
2017-01-06 14:30:53	◣	_rovar_ (rovar@moz-qa6fd4.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-06 14:31:19	◣	Sergio_ (uid203766@moz-h8mp44.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-06 14:31:43	◣	deadc0de (chsitter@moz-j9i.4dl.58.154.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 14:31:47	◣	tromey (tromey@moz-hn05ml.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.91.1))
2017-01-06 14:32:11	◥	tel (tel@moz-0jh5f2.ma.comcast.net) has joined #rust
2017-01-06 14:32:42	◣	khades (Thunderbird@moz-slp.h6q.74.212.IP) has quit (Client exited)
2017-01-06 14:34:27	◥	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has joined #rust
2017-01-06 14:35:36	◣	creationix (creationix@moz-28au0f.cpe.cableone.net) has quit (Ping timeout: 121 seconds)
2017-01-06 14:36:11	◥	wilfredh (user@moz-lafa9m.cable.virginm.net) has joined #rust
2017-01-06 14:38:28	◥	creationix (creationix@moz-sgp.oju.32.72.IP) has joined #rust
2017-01-06 14:39:55	maurer	This seems like a dumb question after using rust for a while, but is there actually no way to say "just consume this iterator, call .next() repeatedly until you get a None" ?
2017-01-06 14:40:18	_habnabit	maurer, for _ in iter {} ?
2017-01-06 14:40:19	talchas	.count()
2017-01-06 14:40:33	talchas	or there may be another thing like that in itertools
2017-01-06 14:40:35	maurer	...I guess I can use .count() and throw away the result
2017-01-06 14:40:39	talchas	(besides .foreach(||{}))
2017-01-06 14:40:42	maurer	it seems a little silly to be forcing it using .len()
2017-01-06 14:41:09	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-06 14:41:31	Ralith	maybe just drop it?
2017-01-06 14:41:36	maurer	Dropping it does not force it
2017-01-06 14:41:42	maurer	by design
2017-01-06 14:41:44	maurer	(it should not)
2017-01-06 14:41:57	◥	tatref (tatref@moz-h9fk3v.abo.wanadoo.fr) has joined #rust
2017-01-06 14:42:22	talchas	yeah, the intent aiui was not to go full functional, and thus for loop
2017-01-06 14:42:30	Ralith	I guess the question is what you're actually trying to do
2017-01-06 14:43:09	maurer	talchas: Yeah, that's kind of annoying b/c I'll make a complicated iterator chain, and then suddenly I need to add 2 lines for the last step b/c "lol for loops"
2017-01-06 14:43:33	◥	blacksmithgu (quassel@moz-n6h.372.49.134.IP) has joined #rust
2017-01-06 14:43:42	Ralith	oh, I see
2017-01-06 14:43:50	jedireza	See the `(B[m` characters? Am I missing a font or is this a bug? https://irccloud.mozilla.com/file/hqkYATgc/screenshot.png
2017-01-06 14:44:01	maurer	I've just been writing for loops to deal with it, but every time I do I kind of cringe
2017-01-06 14:44:20	◣	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-06 14:44:33	jedireza	that's screen shot from the rust playground
2017-01-06 14:45:10	misdreavus	jedireza: there was some comment about that earlier today, i think it's a bug
2017-01-06 14:45:13	maurer	talchas: esp. since for loops have actually legitimately different semantics than .inspect().count()
2017-01-06 14:45:19	misdreavus	jedireza: those are terminal color codes
2017-01-06 14:45:24	◥	Manchotix (Manchotix@moz-kj1ig0.hsi09.unitymediagroup.de) has joined #rust
2017-01-06 14:45:27	◣	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-06 14:45:34	jedireza	misdreavus: thx
2017-01-06 14:45:39	maurer	talchas: Since the closure inside a .inspect() cannot do an early return, while a for loop can, which makes try! and similar have different behavior
2017-01-06 14:47:01	maurer	(I've actually ended up creating and immediately calling a closure inside a for loop for this effect)
2017-01-06 14:47:01	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-06 14:47:04	◣	cscorley (cscorley@moz-h548l6.VALOLT3.epbfi.com) has quit (Connection closed)
2017-01-06 14:47:04	maurer	(which had me facepalming a bit)
2017-01-06 14:47:11	talchas	hah
2017-01-06 14:49:35	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 14:50:09	solenodic	is there a better replacement for RFC 243 catch expressions than an IIFE like || -> Result<(), _> {}()
2017-01-06 14:50:39	solenodic	would the ugly || {}() syntax have any significant overhead if I tucked it away in a macro?
2017-01-06 14:51:03	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (Ping timeout: 121 seconds)
2017-01-06 14:51:11	◥	raichoo (raichoo@moz-beq3gm.versanet.de) has joined #rust
2017-01-06 14:51:14	◥	Matthias247_ (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has joined #rust
2017-01-06 14:51:18	◥	staticassert (Mibbit@moz-bb6mst.ma.comcast.net) has joined #rust
2017-01-06 14:51:52	◥	TechnoCrunch (TechnoCrunc@moz-ant.ip3.100.101.IP) has joined #rust
2017-01-06 14:51:53	◥	kulshrax (kulshrax@moz-np7940.j0qm.7vpd.010d.2620.IP) has joined #rust
2017-01-06 14:51:54	staticassert	Is the tokio-hyper branch fairly stable/ are there any critical issues that would prevent me from using it, or is it more just in a state of settling?
2017-01-06 14:52:30	Aaronepower	Does listing multiple targets work? For example if I was to say `cargo test --target=powerpc-unknown-linux-gnu,mipsel-unknown-linux-gnu` would it run tests for both targets?
2017-01-06 14:52:34	◣	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Connection closed)
2017-01-06 14:53:16	seanmonstar	staticassert: I don't expect much API change, I'd say it's quite stable
2017-01-06 14:53:50	◥	dinfuehr1 (dominik@moz-61of0v.highway.telekom.at) has joined #rust
2017-01-06 14:53:52	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-06 14:54:12	seanmonstar	staticassert: it's blocked on a tokio release, so I'm using that time to optimize things that I rushed through earlier
2017-01-06 14:54:37	◣	dinfuehr1 (dominik@moz-61of0v.highway.telekom.at) has quit (Client exited)
2017-01-06 14:55:02	◣	raichoo (raichoo@moz-beq3gm.versanet.de) has quit (Quit: Leaving.)
2017-01-06 14:55:18	⚡	thills_ is now known as thills
2017-01-06 14:56:06	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2017-01-06 14:56:50	◥	ineol (textual@moz-eeu.erv.0.136.IP) has joined #rust
2017-01-06 14:57:13	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-06 14:57:25	seanmonstar	solenodic: the compiler essentially creates a new struct, assigns fields to variables you've closed over, and then calls the Fn trait method on it. So an optimizer should be able to reduce that to nothing
2017-01-06 14:57:45	◥	sebasmagri (user@moz-ohu.o17.146.189.IP) has joined #rust
2017-01-06 14:57:47	◣	ineol_ (textual@moz-6id.lrm.190.88.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 14:59:17	◣	k4rtik (k4rtik@moz-lf4.n1l.148.128.IP) has quit (Quit: Leaving)
2017-01-06 14:59:31	jensend	Is anyone else seeing an issue in 1.14 where `cargo build` hangs for a few seconds if a build fails? Couldn't find any issues on github.
2017-01-06 15:00:08	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2017-01-06 15:01:01	◥	eckhard__ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-06 15:01:14	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-06 15:01:35	◣	dsantiago (santiago@moz-c25.53a.141.40.IP) has quit (Quit: Computer has gone to sleep.)
2017-01-06 15:02:15	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-06 15:02:35	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-06 15:03:05	WindowsBunny	whitequark: If you do decide to work on repr(align(N)) could you also squeeze in repr(packed(N)) while you're at it?
2017-01-06 15:03:21	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2017-01-06 15:03:35	◥	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has joined #rust
2017-01-06 15:03:49	◣	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has quit (Connection closed)
2017-01-06 15:04:18	◣	eckhard__ (eckhardt@moz-jo7.1op.84.135.IP) has quit (Quit: Leaving...)
2017-01-06 15:06:23	◣	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2017-01-06 15:06:46	◣	meh (meh@moz-kpd.8ae.41.151.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 15:06:50	sfackler	jensend: probably https://github.com/rust-lang/rust/issues/37477
2017-01-06 15:07:26	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-06 15:08:00	◣	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has quit (Client exited)
2017-01-06 15:08:32	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-06 15:09:22	◣	junqed (junqed@moz-egr.l1h.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-06 15:10:11	whitequark	WindowsBunny: hrm
2017-01-06 15:10:12	◣	Akien (akien@moz-o58v80.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-06 15:10:19	whitequark	mkay
2017-01-06 15:10:27	whitequark	I  don't remember what the desired semantics is
2017-01-06 15:10:54	◣	cjhowe (textual@moz-aomlp1.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 15:10:58	◣	jbradberry (jrb@moz-mrjdh9.rlghnc.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2017-01-06 15:11:05	◥	alx741_ (alx741@moz-nbe.qnp.152.190.IP) has joined #rust
2017-01-06 15:12:48	WindowsBunny	whitequark: I can provide information on exactly how it works
2017-01-06 15:13:39	◣	alx741 (alx741@moz-frc.hcj.112.181.IP) has quit (Ping timeout: 121 seconds)
2017-01-06 15:13:58	◣	ElectroMetro (ElectroMetr@moz-fk0iva.ut.vivintwireless.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-06 15:14:02	◣	geal (geal@moz-5p8kss.rev.poneytelecom.eu) has quit (Ping timeout: 121 seconds)
2017-01-06 15:14:09	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2017-01-06 15:14:15	◥	Cyderize_ (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2017-01-06 15:14:54	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-06 15:15:57	jensend	sfackler: There we go. Wasn't expecting the bug to be so old, only just saw it today.
2017-01-06 15:16:36	ted	has anyone done any rust profiling on windows?
2017-01-06 15:18:57	◣	creationix (creationix@moz-sgp.oju.32.72.IP) has quit (Connection closed)
2017-01-06 15:19:32	◣	cyphase (cyphase@moz-ijahrb.ca.comcast.net) has quit (Quit: cyphase.com)
2017-01-06 15:19:36	◥	mib_l8mh4f (Mibbit@moz-4ga.5fm.66.182.IP) has joined #rust
2017-01-06 15:20:18	◥	NeverDie (NeverDie@moz-crtjcd.fios.verizon.net) has joined #rust
2017-01-06 15:20:24	◣	davs (davs@moz-gljmd0.178-41-245.t-com.sk) has quit (Ping timeout: 121 seconds)
2017-01-06 15:21:14	◥	Maplicant (Maplicant@moz-48e6ac.dynamic.ziggo.nl) has joined #rust
2017-01-06 15:22:04	◣	Manchotix (Manchotix@moz-kj1ig0.hsi09.unitymediagroup.de) has quit (Quit: Leaving)
2017-01-06 15:23:19	◣	mib_l8mh4f (Mibbit@moz-4ga.5fm.66.182.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-06 15:24:30	◥	i336 (i336@moz-n35a9h.bigpond.net.au) has joined #rust
2017-01-06 15:25:17	◣	Maplicant (Maplicant@moz-48e6ac.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2017-01-06 15:28:29	CensoredUsername	anyone know a nice workaround for this which doens't involve spamming unwrap everywhere?
2017-01-06 15:28:35	CensoredUsername	Some((index, scale, scale_expr)) if index.kind.family() == RegFamily::XMM =>
2017-01-06 15:28:47	CensoredUsername	aka binding things by move which you only use by ref in a pattern guard being disallowed
2017-01-06 15:28:53	CensoredUsername	as it still counts as being used in the pattern guard
2017-01-06 15:30:37	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-06 15:30:38	◥	ghisvail__ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-06 15:31:09	cristicbz	cristi
2017-01-06 15:31:12	◣	cristicbz (cristicbz@moz-hmk.0p5.97.88.IP) has quit (Connection closed)
2017-01-06 15:31:34	◣	Thiez (thiez@moz-8pr4hp.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2017-01-06 15:32:06	◥	Kingsqueeee (kingsley@moz-sf902d.bchsia.telus.net) has joined #rust
2017-01-06 15:32:44	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2017-01-06 15:32:57	◥	eckhardt_ (eckhardt@moz-jo7.1op.84.135.IP) has joined #rust
2017-01-06 15:33:34	◥	REMqb (REMqb@moz-e2jeen.abo.wanadoo.fr) has joined #rust
2017-01-06 15:33:37	◥	Thiez (thiez@moz-8pr4hp.dynamic.ziggo.nl) has joined #rust
2017-01-06 15:33:53	Rolph	Cargo experts: Is there a way to have a module with a name that is a keyword? IE, having pub.rs, and declaring it with mod pub;
2017-01-06 15:34:50	Rolph	I guess it's not technically a Cargo question, but that's what I'm using
2017-01-06 15:35:03	&niconii	Rolph: no; you can have a module located at pub.rs but with a different module name though, but that probably won't be helpful
2017-01-09 09:16:07	⚡	irc: disconnected from server
2017-01-09 09:16:19	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-09 09:16:19	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-09 09:16:19	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-09 09:16:20	⚡	Channel #rust: 1307 nicks (15 ops, 0 halfops, 3 voices, 1289 normals)
2017-01-09 09:16:20	◥	urodna (urodna@moz-tla9kt.kt9c.gace.2000.2604.IP) has joined #rust
2017-01-09 09:16:23	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-09 09:16:29	br33d	epimorph the case i'm looking at is when i explicit want to close the socket
2017-01-09 09:16:30	nicomachus	mbrubeck: looking at that now. thanks. doesn't look too difficult...
2017-01-09 09:16:51	◥	blank_name (blank_name@moz-1ea.671.36.50.IP) has joined #rust
2017-01-09 09:16:57	◣	mib_4cyykz (Mibbit@moz-lup.6vj.106.158.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-09 09:16:58	◣	doener (bs@moz-c061a3.saltation.de) has quit (Quit: leaving)
2017-01-09 09:16:59	&mbrubeck	akiselev: I've started writing a tutorial about optimization settings, which includes some things that affect build times... https://github.com/mbrubeck/fast-rust/blob/master/src/021-cargo-profile.md
2017-01-09 09:17:10	◣	jsgf (jsgf@moz-ao5.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-09 09:17:18	◥	petso (petson@moz-2o77gc.dyn.telefonica.de) has joined #rust
2017-01-09 09:18:09	◣	foser (foser@moz-g0ha5f.dynamic.ziggo.nl) has quit (Client exited)
2017-01-09 09:18:47	◥	nom (Nabeel@moz-3st.87j.180.59.IP) has joined #rust
2017-01-09 09:19:13	◣	SiIky (SiIky@moz-dbrsl2.5ghr.hl2k.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 09:19:24	◣	Yurume (yurume@moz-0n38n2.compute.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-09 09:19:38	◥	niconii (nicole@moz-ic1aou.midco.net) has joined #rust
2017-01-09 09:19:38	⚡	Mode #rust [+ao niconii niconii] by ChanServ
2017-01-09 09:19:44	akiselev	mbrubeck: thank you. is codegen-units ignored when opt-level = 0?
2017-01-09 09:19:47	◥	stephanbuys (Adium@moz-sam0om.telkomadsl.co.za) has joined #rust
2017-01-09 09:20:28	◥	Yurume (yurume@moz-0n38n2.compute.amazonaws.com) has joined #rust
2017-01-09 09:20:35	&mbrubeck	akiselev: No, but it often has little or no advantage at `opt-level = 0`
2017-01-09 09:20:52	◥	tel (tel@moz-vd9.ulq.207.104.IP) has joined #rust
2017-01-09 09:21:19	◥	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has joined #rust
2017-01-09 09:21:22	nicomachus	mbrubeck: so I basically just run the commands listed? I read through the docs below but it seems like they just explain the commands listed.
2017-01-09 09:21:52	akiselev	mbrubeck: why not? Is there any design decision i can make to improve build times (like servo's _traits crates)?
2017-01-09 09:23:08	◣	tim_____ (tim_____@moz-8gs5ql.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-09 09:23:42	&mbrubeck	akiselev: `codegen-units` runs the LLVM codegen phase in parallel, but unoptimized builds don't spend as much time in LLVM to begin with...
2017-01-09 09:23:52	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2017-01-09 09:24:19	&mbrubeck	akiselev: ...so any gains from parallelization might not offset the overhead.
2017-01-09 09:25:03	&mbrubeck	akiselev: Yes, splitting a project in multiple crates is a good way to reduce incremental compile times, at least when you are changing crates that aren't near the "roots" of the dependency graph
2017-01-09 09:25:13	◥	Beefki (phobia@moz-t3l42c.il.comcast.net) has joined #rust
2017-01-09 09:26:34	◣	ptalbot (ptalbot@moz-rfi8t8.eu0n.jcdj.0660.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 09:26:34	◥	lutter1 (lutter@moz-7v7ueu.PUBLIC.monkeybrains.net) has joined #rust
2017-01-09 09:26:53	akiselev	mbrubeck: ok thank you. is incremental compilation with MIR worth trying out? im months out from first release so not too worried about stability
2017-01-09 09:27:17	◣	dex (Thunderbird@moz-gk9.unj.91.193.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 09:27:41	&mbrubeck	akiselev: I haven't really experimented with incremental compilation yet.
2017-01-09 09:28:02	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-09 09:28:16	◣	deciduously (ben@moz-airl7o.lc8q.lne8.2000.2604.IP) has quit (Quit: WeeChat 1.6)
2017-01-09 09:28:31	◥	mib_kw6ayx (Mibbit@moz-si6.c2b.244.87.IP) has joined #rust
2017-01-09 09:29:11	◣	mib_kw6ayx (Mibbit@moz-si6.c2b.244.87.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-09 09:29:27	akiselev	mbrubeck: ok thanks
2017-01-09 09:30:26	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-09 09:30:39	raph	n00b cargo publish problem here: i'm trying to upload xi-core-lib, but i'm getting "all path dependencies must have a version specified when publishing"
2017-01-09 09:31:00	◥	melleb (Thunderbird@moz-ps7dug.adsl.online.nl) has joined #rust
2017-01-09 09:31:19	stephaneyfx	raph, do you have any dependency marked as "*" in your Cargo.toml?
2017-01-09 09:31:22	raph	from looking at other crates, i think i _can_ have a path (which i definitely prefer for development)
2017-01-09 09:31:25	◣	j0nthn (jonathan@moz-pfmh44.rev.sfr.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-09 09:31:27	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-09 09:31:38	◣	deadc0de (chsitter@moz-lrh.035.31.94.IP) has quit (Quit: leaving)
2017-01-09 09:31:41	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-09 09:31:58	raph	stephaneyfx: no
2017-01-09 09:32:10	raph	the crate i'm trying to publish is https://github.com/google/xi-editor/blob/master/rust/core-lib/Cargo.toml
2017-01-09 09:32:11	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 09:32:53	◥	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has joined #rust
2017-01-09 09:33:33	nox	raph: Are you sure about 0.0.0?
2017-01-09 09:33:41	nox	raph: You should probably put 0.1.0 thre.
2017-01-09 09:33:43	nox	there*
2017-01-09 09:33:46	◥	foser (foser@moz-vchu7j.dynamic.ziggo.nl) has joined #rust
2017-01-09 09:33:54	raph	nox: no, i've updated it to 0.1.0, just haven't pushed it to github yet
2017-01-09 09:33:59	nox	Ok.
2017-01-09 09:34:05	raph	plan on pushing when the upload succeeds
2017-01-09 09:34:10	nox	raph: Same in the others?
2017-01-09 09:34:13	raph	yes
2017-01-09 09:34:21	◣	shellac (pldms@moz-lngnj4.bris.ac.uk) has quit (Quit: Leaving)
2017-01-09 09:34:24	◥	cjhowe (textual@moz-aomlp1.hr.cox.net) has joined #rust
2017-01-09 09:34:25	cholcombe	i think the answer to this is no but can a mod make use of functions defined in main.rs ?
2017-01-09 09:34:41	CensoredUsername	usre
2017-01-09 09:34:46	CensoredUsername	sure they can
2017-01-09 09:34:53	CensoredUsername	as long as they're pub
2017-01-09 09:34:53	◥	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has joined #rust
2017-01-09 09:34:59	cholcombe	CensoredUsername, cool
2017-01-09 09:35:27	CensoredUsername	you can just import stuff as if they're top level. e.g. if you have a struct named State in main.rs you can just import it with "use State" in a crate
2017-01-09 09:35:30	CensoredUsername	err
2017-01-09 09:35:31	CensoredUsername	in a mod
2017-01-09 09:35:41	◥	ot (ot@moz-gmtpic.cpe.webspeed.dk) has joined #rust
2017-01-09 09:35:45	CensoredUsername	(use paths are absolute after all)
2017-01-09 09:35:57	akiselev	is there a way to write a macro that is type aware? Ive got lots of boilerplate that expects f32 and i want the macro to do "as f32" when its an integer
2017-01-09 09:36:04	◣	pcwalton (pcwalton@moz-21mp4f.ca.comcast.net) has quit (Client exited)
2017-01-09 09:36:09	◥	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has joined #rust
2017-01-09 09:36:18	◥	raichoo (raichoo@moz-eqeiuh.versanet.de) has joined #rust
2017-01-09 09:36:45	nox	raph: Is the rope datastructure useful outside of the context of text editing,
2017-01-09 09:36:52	raph	yes
2017-01-09 09:36:59	nox	raph: or is the maintaining of line numbers and whatnot too much of an overhead in that case?
2017-01-09 09:37:14	raph	i'm finding the commit that's complaining: https://github.com/rust-lang/cargo/pull/2714/files
2017-01-09 09:37:17	cholcombe	nox, i've wondered this myself also
2017-01-09 09:37:19	CensoredUsername	akislev: macros are just token substitution, they run before any kind of type information is processed
2017-01-09 09:37:20	&niconii	cholcombe: CensoredUsername: doesn't have to be pub; things that are private can be accessed by the current module and all of its submodules
2017-01-09 09:37:35	CensoredUsername	niconii: good point, I forgot about that
2017-01-09 09:37:35	cholcombe	niconii, oh.. alright.  i didn't know that
2017-01-09 09:37:38	&niconii	https://is.gd/5U6QLh
2017-01-09 09:38:05	cholcombe	niconii, thanks :)
2017-01-09 09:38:11	CensoredUsername	if you want to share a struct between different modules yet not make it pub to the outside, you can make it private in their super module
2017-01-09 09:38:13	◥	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has joined #rust
2017-01-09 09:38:39	◣	zeenix (zeenix@moz-oil.8nu.218.83.IP) has quit (Quit: Leaving)
2017-01-09 09:38:40	raph	actually, that's not the commit, it's a related issue
2017-01-09 09:38:43	&niconii	(that includes private fields of structs btw, they are public to the rest of that module, not just the impl block)
2017-01-09 09:40:25	◥	dionysus70 (Thunderbird@moz-f3r.u5k.134.178.IP) has joined #rust
2017-01-09 09:40:46	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 09:40:47	⚡	dionysus70 is now known as dionysus69
2017-01-09 09:41:04	raph	reading through the cargo source here to try to figure out what's wrong...
2017-01-09 09:41:30	◥	pounce (pounce@moz-3jv.ip9.197.140.IP) has joined #rust
2017-01-09 09:41:49	⚡	bholley_away is now known as bholley
2017-01-09 09:42:03	◥	Altazimuth (Altazimuth@moz-muooe6.skybroadband.com) has joined #rust
2017-01-09 09:42:49	◣	pounce (pounce@moz-3jv.ip9.197.140.IP) has quit (Quit: WeeChat 1.6)
2017-01-09 09:43:32	Phrohdoh	playbot: let pb = std::path::PathBuf::from("foo/bar/baz"); pb.join("my.file")
2017-01-09 09:43:35	⚡	Notice(playbot): "foo/bar/baz/my.file"
2017-01-09 09:43:37	raph	ah, i think i just need to specify both a path and a dependency
2017-01-09 09:43:40	Phrohdoh	playbot: let pb = std::path::PathBuf::from("foo/bar/baz"); pb.join("../my.file")
2017-01-09 09:43:40	raph	and a version
2017-01-09 09:43:45	⚡	Notice(playbot): "foo/bar/baz/../my.file"
2017-01-09 09:43:48	Phrohdoh	:|
2017-01-09 09:45:00	◥	eibwen (eibwen@moz-6smn86.dip0.t-ipconnect.de) has joined #rust
2017-01-09 09:45:06	◣	melleb (Thunderbird@moz-ps7dug.adsl.online.nl) has quit (Ping timeout: 121 seconds)
2017-01-09 09:45:20	◥	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has joined #rust
2017-01-09 09:46:16	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-09 09:46:27	◣	cjhowe (textual@moz-aomlp1.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-09 09:46:34	◣	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has quit (Ping timeout: 121 seconds)
2017-01-09 09:46:44	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-09 09:47:44	◥	beedaddy (martin@moz-hpb4dv.dip0.t-ipconnect.de) has joined #rust
2017-01-09 09:48:50	◥	ghisvail___ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-09 09:49:21	◣	jimb (user@moz-uml.834.72.211.IP) has quit (Connection closed)
2017-01-09 09:49:21	◣	nomad (Thunderbird@moz-8tcq9m.bigpond.net.au) has quit (Ping timeout: 121 seconds)
2017-01-09 09:50:36	◥	Ramsundhar (Mutter@moz-7g1.3k0.95.59.IP) has joined #rust
2017-01-09 09:50:58	raph	...and published!
2017-01-09 09:51:02	◣	Kynes (Kynes@moz-j2us35.mit.edu) has quit (Quit: Leaving)
2017-01-09 09:51:06	◥	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-09 09:51:24	◣	ghishadow_______________ (ghishadow@moz-ibe.9ib.69.103.IP) has quit (Client exited)
2017-01-09 09:51:40	◣	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Client exited)
2017-01-09 09:51:45	◥	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-09 09:51:52	◥	crodjer_ (crodjer@moz-4ec.681.143.114.IP) has joined #rust
2017-01-09 09:52:26	Phrohdoh	invoking cargo::ops::run_tests is much more complex than I figured it'd be...
2017-01-09 09:52:39	Phrohdoh	I just want to give it a path to a manifest and run the tests.
2017-01-09 09:53:19	◥	iamrohit7 (uid193791@moz-ks4tse.brockwell.irccloud.com) has joined #rust
2017-01-09 09:53:24	◣	Ramsundhar (Mutter@moz-7g1.3k0.95.59.IP) has quit (Quit: Mutter: www.mutterirc.com)
2017-01-09 09:53:48	◥	ngc0202 (ngc0202@moz-9jvocq.ny.comcast.net) has joined #rust
2017-01-09 09:53:56	◥	ttdonovan (ttdonovan@moz-l04.bae.185.208.IP) has joined #rust
2017-01-09 09:54:10	◣	crodjer (crodjer@moz-c8l.4bv.143.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 09:54:23	◣	foser (foser@moz-vchu7j.dynamic.ziggo.nl) has quit (Client exited)
2017-01-09 09:55:26	◣	petso (petson@moz-2o77gc.dyn.telefonica.de) has quit (Client exited)
2017-01-09 09:55:45	◥	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has joined #rust
2017-01-09 09:57:42	◥	chamar (chamar@moz-fbvvki.mc.videotron.ca) has joined #rust
2017-01-09 09:57:47	◥	handyman (handyman@moz-i2qk6r.subp.5lka.0645.2601.IP) has joined #rust
2017-01-09 10:01:23	nox	ubsan: Doing some fancy things with pointers and tagged words and whatnot.
2017-01-09 10:01:23	◣	s_kunk (s_kunk@moz-9s3.d1q.255.146.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:01:23	ubsan	nox: wat
2017-01-09 10:01:23	nox	ubsan: Think of you any time I think I need transmute and do without. :)
2017-01-09 10:01:23	ubsan	oh
2017-01-09 10:01:23	ubsan	<3
2017-01-09 10:02:04	nox	ubsan: Implementing some limited concept of heap for Erlang terms.
2017-01-09 10:02:04	ubsan	nice
2017-01-09 10:02:11	◣	nom (Nabeel@moz-3st.87j.180.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:02:50	◥	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has joined #rust
2017-01-09 10:03:03	fqtw	I want to use the params crate with serde feature, so i do params = {version ="0.5", features =['serde'] } but I get weird errors 
2017-01-09 10:03:23	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-09 10:04:06	◥	Ayey_ (rune@moz-neh8gs.rev.stofanet.dk) has joined #rust
2017-01-09 10:04:12	◥	lambda-11235 (Lambda@moz-p24.ein.21.184.IP) has joined #rust
2017-01-09 10:04:32	nox	ubsan: Yep, having fun and am mixing my two favourite languages so I won't complain hah.
2017-01-09 10:04:43	◣	lucian (lucian@moz-iuo.htl.74.194.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:06:24	◥	NJBS (Intercourse@moz-9bdv6f.fios.verizon.net) has joined #rust
2017-01-09 10:06:42	◥	mcoffin (mcoffin@moz-69i283.ga.charter.com) has joined #rust
2017-01-09 10:06:59	fqtw	https://usercontent.irccloud-cdn.com/file/VzxUE6F2/IMG_20170109_190510.jpg
2017-01-09 10:07:03	fqtw	why am I getting these errors when compiling the params crate with serde feature? 
2017-01-09 10:07:09	◥	Ferreus (ferreus@moz-j4q52k.u5lo.qh0d.2028.2a02.IP) has joined #rust
2017-01-09 10:07:33	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:08:26	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:08:28	◥	nom (Nabeel@moz-3st.87j.180.59.IP) has joined #rust
2017-01-09 10:10:29	Phrohdoh	How do I correctly expand "../foo" to <cwd's parent>/foo?
2017-01-09 10:10:39	Phrohdoh	Path::canonicalize isn't doing this
2017-01-09 10:10:41	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-09 10:11:29	talchas`	fqtw: it is just flat up missing those impls
2017-01-09 10:11:52	fqtw	talchas`: how can that be? 
2017-01-09 10:11:58	◣	bholley (bholley@moz-8d0g9h.ca.comcast.net) has quit (Connection closed)
2017-01-09 10:12:06	◥	bholley_ (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2017-01-09 10:12:26	fqtw	am I mixing the wrong versions? 
2017-01-09 10:13:02	fqtw	what should I do to be able to use deserialize? 
2017-01-09 10:13:16	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2017-01-09 10:13:29	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-09 10:13:32	◣	meh (meh@moz-g19.ve3.42.151.IP) has quit (Quit: reboot)
2017-01-09 10:13:49	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-09 10:13:49	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-09 10:14:06	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-09 10:14:14	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-09 10:14:48	talchas`	fqtw: afaict params bumped the serde version required without ever actually testing it
2017-01-09 10:15:04	⚡	rail is now known as rail-lunch
2017-01-09 10:15:06	talchas`	and it doesn't compile on 0.8, because 0.8 doesn't have default impls for all those methods
2017-01-09 10:15:10	⚡	talchas` is now known as talchas
2017-01-09 10:15:12	fqtw	:O
2017-01-09 10:15:24	fqtw	so there's nothing I can do? 
2017-01-09 10:15:44	fqtw	except fork params and using a lower serde version? 
2017-01-09 10:16:12	◥	lambda-calc (Lambda@moz-p24.ein.21.184.IP) has joined #rust
2017-01-09 10:16:14	◥	Andoriyu (Andoriyu@moz-uo1igi.biz.rr.com) has joined #rust
2017-01-09 10:17:41	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-09 10:19:13	◣	lambda-11235 (Lambda@moz-p24.ein.21.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:19:22	⚡	talchas is now known as talchas`
2017-01-09 10:19:32	⚡	talchas` is now known as talchas
2017-01-09 10:19:33	◥	gmjosack (gary@moz-olg.nd8.16.4.IP) has joined #rust
2017-01-09 10:19:39	Phrohdoh	Eh, it isn't totally valid to return `Ok(try!(...))`, right?
2017-01-09 10:19:47	Phrohdoh	Because I could return an Ok(Err(..))
2017-01-09 10:20:07	◥	akaptur (Mibbit@moz-2l1.nd8.16.4.IP) has joined #rust
2017-01-09 10:20:09	Phrohdoh	Instead I should impl From for the Err types and just return the `try!(...)`, yes?
2017-01-09 10:20:09	◣	nom (Nabeel@moz-3st.87j.180.59.IP) has quit (Quit: see you later)
2017-01-09 10:20:14	◥	nom (Nabeel@moz-3st.87j.180.59.IP) has joined #rust
2017-01-09 10:20:16	◣	mcoffin (mcoffin@moz-69i283.ga.charter.com) has quit (Ping timeout: 121 seconds)
2017-01-09 10:20:20	◥	kzan (kzan@moz-p9t.ujr.97.32.IP) has joined #rust
2017-01-09 10:20:24	talchas	Phrohdoh: well, that's almost equivalent to just returning ...
2017-01-09 10:20:50	talchas	and is actually (...).map_err(From::from) or something less clear like that
2017-01-09 10:20:51	◥	rschifflin (randy@moz-a0huqg.lv.cox.net) has joined #rust
2017-01-09 10:21:10	Phrohdoh	Which one?
2017-01-09 10:21:27	talchas	Ok(try!(...))
2017-01-09 10:21:34	Phrohdoh	Ok, thanks
2017-01-09 10:21:47	talchas	if you don't need to do error type conversion you should just do ...
2017-01-09 10:21:55	talchas	but if you do it might be the clearest way
2017-01-09 10:22:25	Phrohdoh	I'll have to convert from, in this case, std::io::Error to my error type.
2017-01-09 10:22:28	dodj	talchas: can you use impl `From<OtherError>` for `MyError`?
2017-01-09 10:22:31	◥	mmalone (mmalone@moz-h55o2k.ca.comcast.net) has joined #rust
2017-01-09 10:22:47	Phrohdoh	right, that's what I meant by `impl From for the err types`
2017-01-09 10:22:51	◥	mcoffin (mcoffin@moz-69i283.ga.charter.com) has joined #rust
2017-01-09 10:22:52	◣	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-09 10:22:56	dodj	:)
2017-01-09 10:23:20	talchas	dodj: yes, but you still have to _call_ from/into
2017-01-09 10:23:25	talchas	which try! does
2017-01-09 10:23:36	Phrohdoh	I wasn't talking about getting rid of try!
2017-01-09 10:23:50	◥	meh (meh@moz-g19.ve3.42.151.IP) has joined #rust
2017-01-09 10:23:52	Phrohdoh	But the wrapping Result
2017-01-09 10:23:53	◣	chamar (chamar@moz-fbvvki.mc.videotron.ca) has quit (Quit: Leaving)
2017-01-09 10:24:00	◣	Shtong (realshtong@moz-cbcjf9.dsl.ovh.fr) has quit (Connection closed)
2017-01-09 10:24:18	◣	santiago (santiago@moz-rlvtng.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2017-01-09 10:24:26	◥	brson (brson@moz-ud3.j2m.56.172.IP) has joined #rust
2017-01-09 10:24:26	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-09 10:24:49	pingveno	Hmmm, I wonder about Rust being able to do this: https://github.com/BSVino/JaiPrimer/blob/master/JaiPrimer.md#data-oriented-structures
2017-01-09 10:25:08	◣	bbjz (00000100@moz-4ce.117.115.129.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:25:37	◣	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-09 10:25:49	◣	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has quit (Ping timeout: 121 seconds)
2017-01-09 10:26:35	pingveno	struct Foo { a: u32, b: u32 } [Foo { a: 0, b: 0 }; 1024] somehow being transformed into two arrays of u32. Would be neat.
2017-01-09 10:27:14	◥	s_kunk (s_kunk@moz-1hb0ft.rev.sfr.net) has joined #rust
2017-01-09 10:27:32	talchas	it is problematic for any sort of abstraction, because &Foo is no longer a thing
2017-01-09 10:27:38	slomo	is there something like the byteorder crate (i only need reading) but a bit more convenient to use? passing the endianness as a type parameter to every function is a bit exhausting :) if it was just e.g. read_u32be() instead of read_u32::<BigEndian>() that would be nicer
2017-01-09 10:27:39	talchas	and that is basically what rust is built around
2017-01-09 10:27:45	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-09 10:28:16	talchas	you could in theory have the compiler do the necessary specialization, but that certainly seems like it would be tricky
2017-01-09 10:29:34	talchas	(&Foo is now like &<N>Foo, where N is array size it comes from)
2017-01-09 10:30:03	◣	tel (tel@moz-vd9.ulq.207.104.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-09 10:30:36	&niconii	slomo: not that i know of, but i guess you could always have a type alias like `type BE = BigEndian;` to have read_u32::<BE>(), or i guess wrap the functions yourself since that's still pretty tiring
2017-01-09 10:31:49	&niconii	slomo: seems like you can write BigEndian::read_u32(&slice) instead of slice.read_u32::<BigEndian>() too
2017-01-09 10:31:55	◥	SklopiS (tobias@moz-3mak20.dip0.t-ipconnect.de) has joined #rust
2017-01-09 10:32:15	&niconii	er, just (slice) rather, not (&slice)
2017-01-09 10:32:19	◥	poolish (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-09 10:32:29	&niconii	assuming slice is already a &[u8]
2017-01-09 10:32:36	◥	doener (doener@moz-4vno8d.unity-media.net) has joined #rust
2017-01-09 10:32:42	◣	epimorph (epimorph@moz-37flav.tbcn.telia.com) has left #rust ("Leaving")
2017-01-09 10:33:04	slomo	niconii: yeah, those options all seem not very satisfying :)
2017-01-09 10:33:10	&niconii	oh, but i guess that wouldn't work if you were reading from a Read
2017-01-09 10:33:53	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-09 10:34:11	◣	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-09 10:34:26	◥	Durz0 (Durzo@moz-n40fdt.dynamic.kabel-deutschland.de) has joined #rust
2017-01-09 10:35:29	◥	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has joined #rust
2017-01-09 10:35:29	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-09 10:35:35	◣	poolish (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Client exited)
2017-01-09 10:36:20	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-09 10:37:01	◥	jedahan (jedahan@moz-dhluhr.n2kv.ot3t.011e.2620.IP) has joined #rust
2017-01-09 10:37:12	◥	repnop (shell@moz-osmbiu.openskytelcom.net) has joined #rust
2017-01-09 10:37:15	talchas	hmm, you could go and make a trait ReadBE: ReadBytesExt { read_FOO { self.read_FOO::<BigEndian>(...) } } I guess
2017-01-09 10:37:23	◥	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has joined #rust
2017-01-09 10:37:30	◣	ato (sid11@moz-vhmn17.0j4i.jtu0.0101.2620.IP) has quit (Quit: )
2017-01-09 10:39:01	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-09 10:39:02	◣	SklopiS (tobias@moz-3mak20.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-09 10:39:09	◥	_rovar_ (rovar@moz-ai0250.wa.charter.com) has joined #rust
2017-01-09 10:39:15	pingveno	talchas: With the data oriented structures thing, I was thinking have an interface that constructs a proxy struct
2017-01-09 10:39:18	◥	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has joined #rust
2017-01-09 10:39:31	◣	brson (brson@moz-ud3.j2m.56.172.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:39:32	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Ping timeout: 121 seconds)
2017-01-09 10:39:36	pingveno	Then maybe a getter for each member?
2017-01-09 10:39:38	◣	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has quit (Client exited)
2017-01-09 10:40:13	◥	chamar (chamar@moz-fbvvki.mc.videotron.ca) has joined #rust
2017-01-09 10:40:30	pingveno	And maybe a get/set interface that returns Option<T> by creating a new instance, if T: Copy.
2017-01-09 10:41:01	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-09 10:41:01	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-09 10:41:07	◣	hako (hako@moz-4t1dus.6fgo.fm5h.0388.2a01.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:41:13	talchas	you might be able to write a macro (or 1.1/2.0 macro) that makes it easier to write something like this
2017-01-09 10:41:23	◣	rovar_ (rovar@moz-qa6fd4.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-09 10:41:26	pingveno	Yeah, that's what I was thinking.
2017-01-09 10:41:34	◥	hako (hako@moz-4t1dus.6fgo.fm5h.0388.2a01.IP) has joined #rust
2017-01-09 10:41:40	slomo	talchas: that's actually a good idea, another trait that is wrapping ReadBytesExt and just gives me the API i'd like to have :)
2017-01-09 10:41:40	◥	REMqb (REMqb@moz-53unnb.abo.wanadoo.fr) has joined #rust
2017-01-09 10:42:09	talchas	you'll have some annoyance as ever around alignment given rust doesn't have APIs for that so you'd have to rely on shenanigans
2017-01-09 10:42:17	◥	deciduously (ben@moz-airl7o.lc8q.lne8.2000.2604.IP) has joined #rust
2017-01-09 10:42:37	pingveno	talchas: Was that aimed at me?
2017-01-09 10:42:40	talchas	yeah
2017-01-09 10:43:06	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:43:08	◥	rovar_ (rovar@moz-qa6fd4.compute-1.amazonaws.com) has joined #rust
2017-01-09 10:43:12	◥	stew (stew@moz-ektmpt.dyn.optonline.net) has joined #rust
2017-01-09 10:43:24	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-09 10:43:26	◣	jedahan (jedahan@moz-dhluhr.n2kv.ot3t.011e.2620.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-09 10:43:29	◣	rkruppe (rkruppe@moz-pqgm0e.dyn.telefonica.de) has quit (Connection closed)
2017-01-09 10:43:33	◥	rkruppe (rkruppe@moz-pqgm0e.dyn.telefonica.de) has joined #rust
2017-01-09 10:43:33	◣	rkruppe (rkruppe@moz-pqgm0e.dyn.telefonica.de) has quit (Connection closed)
2017-01-09 10:44:00	◥	rkruppe (rkruppe@moz-3nj.rnu.131.95.IP) has joined #rust
2017-01-09 10:44:10	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-09 10:44:22	stew	does anyone know if there is a stdin implementation for emscripten? like something that reads from the console or a div? or are you pretty much required to pull dom/input element content from a node as it stands now?
2017-01-09 10:44:42	pingveno	I was just thinking a generated get() that looks like this (omitting bounds checking): fn get(&self, index: usize) -> Option<Foo> { Foo { a: self.a[index], b: self.b[index] } }
2017-01-09 10:45:03	◥	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-09 10:45:23	◣	_rovar_ (rovar@moz-ai0250.wa.charter.com) has quit (Ping timeout: 121 seconds)
2017-01-09 10:45:33	◥	wat (bobross@moz-tfju8u.mi.comcast.net) has joined #rust
2017-01-09 10:45:36	◥	junqed (junqed@moz-j2b.arf.70.178.IP) has joined #rust
2017-01-09 10:45:51	◥	Dahrkael (Dahrkael@moz-2de.7l2.25.46.IP) has joined #rust
2017-01-09 10:46:04	◥	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2017-01-09 10:46:34	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (A TLS packet with unexpected length was received.)
2017-01-09 10:46:45	◥	jdm (jdm@66.207.193.21) has joined #rust
2017-01-09 10:46:45	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-09 10:46:59	rkruppe	pingveno: I'd like more convenient SoA layout, but the way Jai does it feels really weird
2017-01-09 10:47:00	◣	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Client exited)
2017-01-09 10:47:46	pingveno	rkruppe: Yeah, I agree. It feels a little too magical.
2017-01-09 10:48:06	◥	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has joined #rust
2017-01-09 10:48:06	⚡	wat is now known as _bobross
2017-01-09 10:48:12	pingveno	On the other hand, I suppose it works well if you don't want to go through and switch your whole codebase.
2017-01-09 10:48:14	⚡	_bobross is now known as bobross_
2017-01-09 10:48:32	◣	bobross (bobross@moz-hi9.olo.156.104.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:48:38	rkruppe	I saw a procedural macro the other day which generates an SoA variant of a struct including accessors. maikklein I think that was you?
2017-01-09 10:48:41	bobross_	rkruppe have you looked at ISPC ? it also has SoA layouts integrated into the language
2017-01-09 10:49:00	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Ping timeout: 121 seconds)
2017-01-09 10:49:24	rkruppe	bobross_: I know roughly what ISPC is but I didn't know that
2017-01-09 10:49:39	◥	chris_999 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2017-01-09 10:49:46	◥	ptalbot (ptalbot@moz-cvpth3.0c6p.cv4v.0e35.2a01.IP) has joined #rust
2017-01-09 10:49:53	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Connection closed)
2017-01-09 10:50:17	rkruppe	pingveno: but you probably do need to update parts of the code to reap any benefit
2017-01-09 10:50:33	bobross_	rkruppe they don't do a straight struct of arrays either, it is elements grouped together at SIMD width (I think), so an image might be RRRRGGGGBBBB instead of RGBRGBRGB
2017-01-09 10:50:47	rkruppe	SoA is not magic fairy dust you sprinkle on code and it gets faster
2017-01-09 10:50:49	&niconii	slomo: to save you some time: https://play.rust-lang.org/?gist=535646bc741cebb561438466ce984f22&version=stable&backtrace=0
2017-01-09 10:50:52	talchas	pingveno: it might be better to convert fields to accessors, which lets you have Ref<Foo, N> be just a single pointer
2017-01-09 10:51:18	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Ping timeout: 121 seconds)
2017-01-09 10:51:30	◣	skeet70 (skeet70@moz-1r774t.static.bresnan.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-09 10:51:34	◥	gvanderest (gvanderest@moz-kn6p76.compute-1.amazonaws.com) has joined #rust
2017-01-09 10:51:42	◣	gkbrk (gkbrk@moz-re8.b6u.205.31.IP) has quit (Quit: Leaving)
2017-01-09 10:52:04	◥	cmyr (cmyr@moz-tcg66u.cable.teksavvy.com) has joined #rust
2017-01-09 10:52:20	◣	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has quit (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
2017-01-09 10:53:09	rkruppe	I am skeptical of anything that makes "let's pull these five fields from separate cache lines together and pretend they are a unit" too convenient
2017-01-09 10:53:17	◣	stephanbuys (Adium@moz-sam0om.telkomadsl.co.za) has quit (Quit: Leaving.)
2017-01-09 10:53:54	talchas	it's magic fairy dust you sprinkle on code that makes it go faster if your access patters are right, and makes it go slower if they're not :P
2017-01-09 10:54:23	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-09 10:54:25	pingveno	So it stands to reason that being able to quickly switch between the two and benchmark could be beneficial, no?
2017-01-09 10:54:27	◥	russ_za (kvirc@moz-l6j8c4.voxdsl.co.za) has joined #rust
2017-01-09 10:54:38	talchas	and probably makes your optimizer very confused if you aren't careful
2017-01-09 10:54:40	bobross_	another thing ISPC does is warn you if you are doing a gather or scatter on an architecture that makes it slow
2017-01-09 10:55:04	◣	crodjer_ (crodjer@moz-4ec.681.143.114.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 10:55:15	rkruppe	pingveno: to get a honest comparison you often need to change the access pattern too
2017-01-09 10:55:56	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-09 10:56:04	⚡	ahal is now known as ahal|lunch
2017-01-09 10:56:31	pingveno	rkruppe: True
2017-01-09 10:57:19	◥	mgottschlag (quassel@moz-13f22k.dip0.t-ipconnect.de) has joined #rust
2017-01-09 10:57:19	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-09 10:57:20	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2017-01-09 10:57:23	◣	Phrohdoh (Phrohdoh@moz-nv0.v7o.34.66.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-09 10:57:33	bobross_	rkruppe I don't think that is necessarily true, if you are accessing elements linearly the access pattern would be the same
2017-01-09 10:57:39	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-09 10:58:35	slomo	niconii: thanks :) did you just write that now or did you also have some use for that in the past?
2017-01-09 10:58:54	&niconii	wrote it now
2017-01-09 10:59:14	◥	mgattozzi (mgattozzi@moz-ut3ia7.hfc.comcastbusiness.net) has joined #rust
2017-01-09 10:59:19	rkruppe	bobross_: not necessarily but very often you can tweak the code to get a different access pattern
2017-01-09 10:59:38	◥	EoF (EoF@moz-h6i7lj.dynamic.kabel-deutschland.de) has joined #rust
2017-01-09 10:59:43	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-09 11:00:29	◥	crodjer (crodjer@moz-mif.qc6.248.49.IP) has joined #rust
2017-01-09 11:00:39	bobross_	rkruppe I'm not sure what you mean, whatever you are doing you would want to access an array linearly for prefetching 
2017-01-09 11:00:52	◣	ashish_ (chatzilla@moz-uru8lt.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 11:00:56	◥	veqz (veqz@moz-jjt88n.connect.netcom.no) has joined #rust
2017-01-09 11:01:14	talchas	bobross_: sure, but you may be able to alternate what operation you are doing
2017-01-09 11:01:17	◣	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has quit (Client exited)
2017-01-09 11:01:30	◥	ashish_ (chatzilla@moz-uru8lt.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-09 11:01:44	talchas	(of course, this is probably worse on your icache, and also may not be possible)
2017-01-09 11:01:47	akaptur	hey folks, what's the latest state in making http requests from rust - hyper? I see http://www.arewewebyet.org/ - I'm looking at writing a client that will run on OS X against an existing server, and it will eventually need to support cert pinning.
2017-01-09 11:01:47	◣	gmjosack (gary@moz-olg.nd8.16.4.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 11:02:31	seanmonstar	akaptur: reqwest tries to be the easiest way to make client requests
2017-01-09 11:02:44	akaptur	that's backed by hyper, right?
2017-01-09 11:02:51	seanmonstar	yes
2017-01-09 11:03:22	◣	mgottschlag (quassel@moz-13f22k.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-09 11:03:23	sfackler	if you're cert pinning you may need to end up talking to hyper directly
2017-01-09 11:03:47	seanmonstar	sfackler: if we can get that in native-tls, reqwest can try to expose it
2017-01-09 11:03:50	◥	gmjosack (gary@moz-5ec.nd8.16.4.IP) has joined #rust
2017-01-09 11:04:05	⚡	janx is now known as janx|afk
2017-01-09 11:04:06	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 11:04:19	◥	mgottschlag (quassel@moz-2n4ip8.dip0.t-ipconnect.de) has joined #rust
2017-01-09 11:04:41	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 11:05:01	akaptur	yeah I'm fine with implementing the cert pinning myself if needed
2017-01-09 11:05:09	◥	kulshrax (kulshrax@moz-2i3ho4.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-09 11:05:22	◣	rkruppe (rkruppe@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-09 11:05:22	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2017-01-09 11:05:44	sfackler	yeah I still need to add some logic to schannel to land that in native-tls
2017-01-09 11:05:48	◥	rkruppe (rkruppe@moz-00ijij.dyn.telefonica.de) has joined #rust
2017-01-09 11:06:18	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-09 11:06:36	◥	durka42 (durka42@moz-h07.vjt.130.158.IP) has joined #rust
2017-01-09 11:06:42	◥	skeet70 (skeet70@moz-2kcbq7.static.bresnan.net) has joined #rust
2017-01-09 11:06:55	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-09 11:07:41	◣	rkruppe (rkruppe@moz-00ijij.dyn.telefonica.de) has quit (Quit: Bye)
2017-01-09 11:07:41	◥	rkruppe_ (chatzilla@moz-3nj.rnu.131.95.IP) has joined #rust
2017-01-09 11:07:49	⚡	rkruppe_ is now known as rkruppe
2017-01-09 11:07:51	◥	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-09 11:08:01	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-09 11:08:21	⚡	janx|afk is now known as janx
2017-01-09 11:09:01	rkruppe	bobross_: Consider an update look like "for each entity { update positions; compute collisions; run scripts; }"
2017-01-09 11:10:02	rkruppe	bobross_: if you just throw SoA at this it's probably not gonna help, a more promising experiment would be to split the loop in two or three loops. And then you may need to introduce additional data structures (e.g. to store the collision information for the scripts), and so on.)
2017-01-09 11:10:18	rkruppe	*update loop
2017-01-09 11:10:20	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-09 11:11:48	bobross_	rkruppe I'm not sure how any of that is different for a SoA, in that example you would want to update all positions before collisions first anyway 
2017-01-09 11:12:14	bobross_	and computing collisions would actually mean walking through a tree, but maybe those two parts aren't what you were focusing on 
2017-01-09 11:12:33	fqtw	what's the best way to convert a base 64 encoded image to an image readable with the image crate? 
2017-01-09 11:12:37	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-09 11:12:42	⚡	agibson is now known as agibson|afk
2017-01-09 11:12:49	fqtw	is there already a function for that? 
2017-01-09 11:13:24	fqtw	the image was created in js with toDataUrl() 
2017-01-09 11:13:26	bobross_	rkruppe if you mean accessing three different arrays instead of one, that is where the SIMD packing of ISPC comes in, since it allows SIMD access while still accessing one array instead of one array for each element
2017-01-09 11:14:01	rkruppe	bobross_: While you can perform that transformation without changing the memory layout, in practice the two will go hand in hand, and usually the loop splitting will have more benefit if coupled with the layout switch
2017-01-09 11:14:08	◣	raichoo (raichoo@moz-eqeiuh.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-09 11:15:22	◣	jackpot51 (jackpot51@moz-h38c14.co.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-09 11:15:23	rkruppe	I guess what I'm saying is if you're gonna experiment with SoA layout you better take the other lessons of data oriented design to heart, too
2017-01-09 11:15:26	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-09 11:15:26	◥	cjhowe (textual@moz-ola7bc.qgog.pphr.8805.2600.IP) has joined #rust
2017-01-09 11:15:53	seanmonstar	fqtw: i imagine you can base64 decode the bytes, and pass those new bytes to whatever image constructor their is
2017-01-09 11:15:55	seanmonstar	there* is
2017-01-09 11:16:05	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-09 11:16:16	◥	stjepang_ (stjepang@moz-3o5.uss.205.37.IP) has joined #rust
2017-01-09 11:17:00	bobross_	rkruppe I still not exactlys sure what you are saying, I think comparing a sequential loop through an array and a sequential loop through the same array with a SIMD packed SoA layout is apples to apples
2017-01-09 11:17:26	Ploppz	my program crashes saying because I called Result::unwrap().. on this line `let messages: Vec<Result<(SocketAddr, Message)>> = self.socket.messages().collect();` but where exactly does unwrap happen here?
2017-01-10 10:59:29	◥	d8v3 (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-10 10:59:29	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-10 10:59:29	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-10 10:59:29	⚡	Channel #rust: 1339 nicks (19 ops, 0 halfops, 3 voices, 1317 normals)
2017-01-10 10:59:31	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-10 10:59:37	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-10 10:59:37	zeryx	it might be a breaking change or something, I don't remember doing anything that would break it, besides maybe just flat out updating to latest rust/rustup/cargo ?
2017-01-10 10:59:46	◥	mmalone (mmalone@moz-h55o2k.ca.comcast.net) has joined #rust
2017-01-10 11:00:02	⚡	You are now known as boon
2017-01-10 11:00:07	◣	nagisa (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2017-01-10 11:01:54	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-10 11:03:15	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:03:27	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 11:04:13	◥	petso (petson@moz-r4476e.dyn.telefonica.de) has joined #rust
2017-01-10 11:04:34	ideasman42	Silly Q, how to pass `Box::new(22)` to a function that takes Box<Any> >?
2017-01-10 11:04:48	@steveklabnik	you have to cast it, right?
2017-01-10 11:04:53	@steveklabnik	Box::new(22) as Box<Any>
2017-01-10 11:05:00	◣	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:05:18	◣	hub (hub@moz-59grbl.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2017-01-10 11:05:46	sfackler	it will often coerce
2017-01-10 11:06:06	Moonlightning	That should totally just coerce, right?
2017-01-10 11:06:06	talchas	yeah, it'll implicitly coerce when it can
2017-01-10 11:06:21	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-10 11:06:38	talchas	but not in things like if/else branches or such
2017-01-10 11:06:46	talchas	(generic args are unlikely to come up with Box<Any>)
2017-01-10 11:06:53	ideasman42	steveklabnik, seems right, but use case errors out with: `&Box<()>` as `&Box<std::any::Any + 'static>`
2017-01-10 11:06:53	◥	xiinotulp (q@moz-s5gkp8.dynamic.totbb.net) has joined #rust
2017-01-10 11:06:55	◥	zaeleus (zaeleus@moz-019oq0.cpe.cableone.net) has joined #rust
2017-01-10 11:06:55	◣	Bonstra (Bonstra@moz-i6fsvp.fr.eu.org) has quit (Connection closed)
2017-01-10 11:07:15	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:07:19	ideasman42	Im not using " + 'static" anywhere
2017-01-10 11:07:28	succ	Any requires it, I think?
2017-01-10 11:07:29	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:07:33	misdreavus	Box implied 'static
2017-01-10 11:07:35	talchas	you can't cast a &Box<T> to &Box<Any>
2017-01-10 11:07:36	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-10 11:07:36	misdreavus	**implies
2017-01-10 11:07:38	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-10 11:07:40	talchas	you need to own the pointer
2017-01-10 11:07:43	succ	misdreavus: it does not.
2017-01-10 11:07:48	succ	Any does, however.
2017-01-10 11:08:09	succ	playbot: let foo = 3; let bar = Box::new(&foo);
2017-01-10 11:08:12	⚡	Notice(playbot): ()
2017-01-10 11:08:14	ideasman42	Ah, but I can cast it before turning into a reference
2017-01-10 11:08:16	misdreavus	succ: when using a boxed trait in general, you need to supply a shorter lifetime if you're not using 'static
2017-01-10 11:08:31	succ	oh, the trait object defaulting, sure
2017-01-10 11:08:34	talchas	ideasman42: yeah
2017-01-10 11:08:41	succ	but that's not really in play here, given that Any requires 'static
2017-01-10 11:08:49	◥	ptalbot (ptalbot@moz-cvpth3.0c6p.cv4v.0e35.2a01.IP) has joined #rust
2017-01-10 11:08:53	◥	Bonstra (Bonstra@moz-i6fsvp.fr.eu.org) has joined #rust
2017-01-10 11:08:57	misdreavus	*shrug*
2017-01-10 11:09:17	◣	cjhowe (textual@moz-8114ai.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 11:09:27	◣	waffles (wafflespean@moz-q0j.kbj.23.1.IP) has quit (Quit: C'yall later...)
2017-01-10 11:09:51	◥	cjhowe (textual@moz-8114ai.hr.cox.net) has joined #rust
2017-01-10 11:10:10	◣	plutoniix (q@moz-nmb1hg.dynamic.totbb.net) has quit (Ping timeout: 121 seconds)
2017-01-10 11:11:45	◣	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has quit (Connection closed)
2017-01-10 11:12:05	◥	tim_____ (tim_____@moz-qbl4sa.dip0.t-ipconnect.de) has joined #rust
2017-01-10 11:13:41	◥	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2017-01-10 11:16:52	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-10 11:17:12	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-10 11:17:36	◣	Morten (Morten@moz-52k39p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 11:17:50	◥	orospakr (orospakr@moz-s8f.0pc.236.207.IP) has joined #rust
2017-01-10 11:18:09	◣	Ilphrin (Ilphrin@moz-br4pjb.fbx.proxad.net) has quit (Quit: Leaving)
2017-01-10 11:18:13	◥	Morten (Morten@moz-52k39p.bb.online.no) has joined #rust
2017-01-10 11:18:15	◥	agile (mike@moz-m71dqt.rcsntx.sbcglobal.net) has joined #rust
2017-01-10 11:18:36	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-10 11:19:02	◥	erde74 (erde74@moz-49726m.dip0.t-ipconnect.de) has joined #rust
2017-01-10 11:19:03	◥	humean (humean@moz-huh.rkq.238.104.IP) has joined #rust
2017-01-10 11:19:16	◥	nom_ (Nabeel@moz-3a0.bea.180.59.IP) has joined #rust
2017-01-10 11:19:30	◣	cjhowe (textual@moz-8114ai.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 11:20:26	◣	neodc (uid170604@moz-364l18.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 11:21:14	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 11:21:19	◣	dionysus69 (Thunderbird@moz-f3r.u5k.134.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 11:21:54	◥	poorman (poorman@moz-00fbhp.biz.rr.com) has joined #rust
2017-01-10 11:22:19	◣	poorman (poorman@moz-00fbhp.biz.rr.com) has quit (Quit: )
2017-01-10 11:22:35	◣	nom (Nabeel@moz-a1o.vsv.180.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:23:08	◣	maddie9 (maddie@moz-fpe67k.dyn.plus.net) has quit (Quit: Leaving)
2017-01-10 11:23:11	◣	humean (humean@moz-huh.rkq.238.104.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:24:11	◣	woshilapin (woshilapin@moz-lte49m.mi.comcast.net) has quit (A TLS packet with unexpected length was received.)
2017-01-10 11:24:36	Moonlightning	pedrocr: sounds like a potential bug!
2017-01-10 11:26:21	◣	derek_v (derek_v@moz-npi3gu.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-10 11:27:35	◥	bluss (bluss@moz-9sooj3.dynamic.simnet.is) has joined #rust
2017-01-10 11:27:45	◥	woshilapin (woshilapin@moz-lte49m.mi.comcast.net) has joined #rust
2017-01-10 11:28:15	◣	sssilver (textual@moz-453ic4.2jev.946a.6000.2605.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 11:28:32	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-10 11:30:10	◥	ghisvail___ (ghisvail@moz-hvaj2i.ic.ac.uk) has joined #rust
2017-01-10 11:30:34	◥	humean (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-10 11:30:50	◥	cloudm2 (Mibbit@moz-tvv.s5g.115.65.IP) has joined #rust
2017-01-10 11:30:56	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:31:38	◥	woboats (woboats@moz-8rajde.ca.comcast.net) has joined #rust
2017-01-10 11:32:45	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-10 11:33:08	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 11:33:29	◣	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has quit (Client exited)
2017-01-10 11:33:38	◥	sh4wn (lucas@moz-93hqeb.ricardis.openfiber.nl) has joined #rust
2017-01-10 11:33:55	◣	cloudm2 (Mibbit@moz-tvv.s5g.115.65.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 11:34:21	◥	cloudm2 (Mibbit@moz-tvv.s5g.115.65.IP) has joined #rust
2017-01-10 11:34:59	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-10 11:35:03	◣	iamrohit7 (uid193791@moz-ks4tse.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 11:35:21	◥	SklopiS (tobias@moz-rd2dfq.dip0.t-ipconnect.de) has joined #rust
2017-01-10 11:35:35	◥	vadix (vadix@moz-57uuv7.nkcu.i5co.05c1.2601.IP) has joined #rust
2017-01-10 11:37:00	◥	NJBS (Intercourse@moz-9bdv6f.fios.verizon.net) has joined #rust
2017-01-10 11:37:09	◣	awygle (Mibbit@moz-no84m6.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 11:37:10	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:37:16	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-10 11:37:18	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-10 11:37:36	◣	dinfuehr (dinfuehr@moz-9gof0l.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2017-01-10 11:39:01	◥	_sfiguser (sfigguser@moz-0temhh.ip57.fastwebnet.it) has joined #rust
2017-01-10 11:39:01	◥	bennofs (benno@moz-f5pkqr.qn0t.tnpg.c1a0.2a00.IP) has joined #rust
2017-01-10 11:39:06	◥	franz (franz@moz-2hdp0g.4976.31ct.0644.2601.IP) has joined #rust
2017-01-10 11:39:15	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-10 11:39:59	◥	dinfuehr (dinfuehr@moz-97ee29.highway.telekom.at) has joined #rust
2017-01-10 11:40:04	◥	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2017-01-10 11:40:09	◥	Kreest__ (Kreest@moz-kpfgh6.globonet.hu) has joined #rust
2017-01-10 11:40:57	◣	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 11:44:17	◣	ubsandroid (ubsan@moz-cc6.3fu.114.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:44:47	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2017-01-10 11:46:03	◥	davs (davs@moz-8afd79.bratislava.digicable.sk) has joined #rust
2017-01-10 11:46:46	◣	pcwalton (pcwalton@moz-l3ita8.dynamic.globalcapacity.com) has quit (Client exited)
2017-01-10 11:47:13	◣	woboats (woboats@moz-8rajde.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-10 11:47:32	◥	ubsandroid (ubsan@moz-marvn9.qq8i.7c2i.fb90.2607.IP) has joined #rust
2017-01-10 11:47:48	◣	undeadleech (undeadleech@moz-qcfacg.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-10 11:47:54	◥	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has joined #rust
2017-01-10 11:48:26	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Connection closed)
2017-01-10 11:48:27	◣	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Connection closed)
2017-01-10 11:48:33	◥	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-10 11:48:56	◣	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 11:49:07	◣	arBmind (Andreas@moz-3v64vi.dyn.telefonica.de) has quit (Quit: Leaving.)
2017-01-10 11:49:34	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-10 11:50:21	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-10 11:50:24	◣	Morten (Morten@moz-52k39p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 11:50:45	◥	Morten (Morten@moz-52k39p.bb.online.no) has joined #rust
2017-01-10 11:50:58	◣	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 11:51:11	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-10 11:51:26	◥	vandenoever (oever@moz-8onu2e.adsl-surfen.hetnet.nl) has joined #rust
2017-01-10 11:51:46	alanhoff	Hello folks, does someone knows how to map enums when using serde? I want to transform something like `EntryType::File` to `"file"` when serialized instead of `"File"`
2017-01-10 11:52:20	◣	ubsandroid (ubsan@moz-marvn9.qq8i.7c2i.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:52:20	◥	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has joined #rust
2017-01-10 11:52:35	◥	ivan (ivan@moz-0ic.teh.78.59.IP) has joined #rust
2017-01-10 11:52:39	dtolnay	alanhoff: you can use a `rename` attribute to rename the variant https://serde.rs/attributes.html#variant-attributes
2017-01-10 11:52:53	dtolnay	alanhoff: `enum EntryType { #[serde(rename = "file")] File }`
2017-01-10 11:53:03	◣	erde74 (erde74@moz-49726m.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-10 11:53:07	◣	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-10 11:53:16	◥	gvandere_ (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-10 11:53:36	◥	erde74 (erde74@moz-49726m.dip0.t-ipconnect.de) has joined #rust
2017-01-10 11:53:46	◥	chandlerbing (chandlerbin@moz-d95lac.ftth.glasoperator.nl) has joined #rust
2017-01-10 11:54:38	alanhoff	@dtolnay awesome that worked! :-)
2017-01-10 11:54:56	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-10 11:55:51	◥	skeuomorf (skeuomorf@moz-dbn.4bu.211.156.IP) has joined #rust
2017-01-10 11:56:06	◣	gvanderest (gvanderest@moz-kn6p76.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-10 11:58:40	◣	ivan (ivan@moz-0ic.teh.78.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 11:59:33	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:00:12	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-10 12:00:28	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-10 12:00:32	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-10 12:00:34	◥	vulpes (vulpes@moz-fjsq93.dcb1.8e10.2788.2a02.IP) has joined #rust
2017-01-10 12:01:23	◣	ghisvail___ (ghisvail@moz-hvaj2i.ic.ac.uk) has quit (Ping timeout: 121 seconds)
2017-01-10 12:01:32	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-10 12:02:25	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-10 12:02:54	◥	daschl (daschl@moz-kvc.ipu.178.62.IP) has joined #rust
2017-01-10 12:03:34	◣	angusi (angusai@moz-v8q.do5.71.82.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:04:36	◣	forgottenone (forgottenon@moz-r82.l2k.234.176.IP) has quit (Quit: Konversation terminated!)
2017-01-10 12:05:14	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 12:05:17	◣	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Client exited)
2017-01-10 12:06:01	◥	Ixrec (Ixrec@moz-9bf9ip.dyn.plus.net) has joined #rust
2017-01-10 12:06:07	◥	arBmind (Andreas@moz-e3hevo.dyn.telefonica.de) has joined #rust
2017-01-10 12:07:16	◣	Beefki (phobia@moz-t3l42c.il.comcast.net) has quit (Connection closed)
2017-01-10 12:07:18	◣	Arlefreak (arlefreak@moz-lnb.844.207.189.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:07:23	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:08:57	◥	undeadleech (undeadleech@moz-qcfacg.dip0.t-ipconnect.de) has joined #rust
2017-01-10 12:09:18	◥	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has joined #rust
2017-01-10 12:09:33	◥	sadboy13 (dbishop@moz-doo.oct.130.68.IP) has joined #rust
2017-01-10 12:10:18	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-10 12:11:19	◣	lambda-11235 (Lambda@moz-aig.kfv.105.75.IP) has quit (Connection closed)
2017-01-10 12:11:24	◣	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has quit (Quit: WeeChat 1.6)
2017-01-10 12:11:30	◥	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has joined #rust
2017-01-10 12:11:37	◥	lambda-11235 (Lambda@moz-aig.kfv.105.75.IP) has joined #rust
2017-01-10 12:11:52	◣	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:12:10	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 12:12:17	◣	erde74 (erde74@moz-49726m.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2017-01-10 12:12:41	◥	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has joined #rust
2017-01-10 12:13:09	◣	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has quit (Connection closed)
2017-01-10 12:14:28	◣	madmalik (uid13697@moz-mac7ts.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 12:16:12	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:16:23	◣	Douman (Douman@moz-ca9.4ql.208.82.IP) has quit (Quit: )
2017-01-10 12:17:13	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-10 12:17:20	◥	Eonil (Eonil@moz-n1g.alp.106.222.IP) has joined #rust
2017-01-10 12:18:00	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-10 12:18:05	◥	Eonil (Eonil@moz-n1g.alp.106.222.IP) has joined #rust
2017-01-10 12:18:08	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-10 12:18:24	◥	snakers (nauxas@moz-e9de27.m4ts.a75g.0640.2601.IP) has joined #rust
2017-01-10 12:18:33	humean	set irc.look.smart_filter on
2017-01-10 12:18:37	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-10 12:18:46	_habnabit	humean, what if i don't want to
2017-01-10 12:18:47	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-10 12:18:54	◥	Eonil (Eonil@moz-n1g.alp.106.222.IP) has joined #rust
2017-01-10 12:18:59	humean	opps
2017-01-10 12:19:34	◥	ubsandroid_ (ubsan@moz-4kupi9.hifp.h3gc.fb90.2607.IP) has joined #rust
2017-01-10 12:19:35	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-10 12:19:36	◣	humean (humean@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2017-01-10 12:19:41	◥	Eonil (Eonil@moz-n1g.alp.106.222.IP) has joined #rust
2017-01-10 12:19:42	◥	humean (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-10 12:20:23	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-10 12:20:29	◥	Eonil (Eonil@moz-n1g.alp.106.222.IP) has joined #rust
2017-01-10 12:21:11	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-10 12:21:39	◥	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust
2017-01-10 12:21:42	◥	sleffy (sleffy@moz-psu60c.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-10 12:22:03	◣	SklopiS (tobias@moz-rd2dfq.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-10 12:23:00	◣	cpup (cpup@moz-m24.69g.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:23:18	◥	cpup (cpup@moz-m24.69g.218.32.IP) has joined #rust
2017-01-10 12:23:21	◣	riskable (Could@moz-kr415q.fl.comcast.net) has quit (Connection closed)
2017-01-10 12:23:25	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-10 12:23:36	◣	joehillen (joehillen@moz-2oec0q.members.linode.com) has quit (Quit: quit)
2017-01-10 12:23:42	◥	kazagistar (Adium@moz-br6.b81.207.205.IP) has joined #rust
2017-01-10 12:24:29	◥	joehillen (joehillen@moz-236d99.fkdv.ulf6.3c01.2600.IP) has joined #rust
2017-01-10 12:25:10	◣	wallacoloo____ (colin@moz-67r52l.dhcp4.washington.edu) has quit (Client exited)
2017-01-10 12:25:10	◥	cjhowe (textual@moz-8114ai.hr.cox.net) has joined #rust
2017-01-10 12:26:10	◣	creationix (creationix@moz-28au0f.cpe.cableone.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 12:27:58	◥	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2017-01-10 12:28:13	◥	creationix (creationix@moz-28au0f.cpe.cableone.net) has joined #rust
2017-01-10 12:28:21	◣	nairware (CELLIS@moz-p2c267.rlghnc.sbcglobal.net) has quit (Quit: Leaving.)
2017-01-10 12:29:12	◥	jsgf (jsgf@moz-183.9o0.201.199.IP) has joined #rust
2017-01-10 12:29:43	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-10 12:29:43	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-10 12:31:38	◥	Akien (akien@moz-cr19g5.dyn.telefonica.de) has joined #rust
2017-01-10 12:32:50	◥	wallacoloo____ (colin@moz-puujts.dhcp4.washington.edu) has joined #rust
2017-01-10 12:33:34	◣	sinclair (chatzilla@moz-1bvbkd.xnet.co.nz) has quit (Quit: ChatZilla 0.9.93 [Firefox 50.1.0/20161208153507])
2017-01-10 12:34:18	◣	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has quit (Client exited)
2017-01-10 12:34:48	◣	bjorn3 (bjorn3@moz-7p2.6ir.81.86.IP) has quit (Connection closed)
2017-01-10 12:35:08	◣	rudy (rustedwolf@moz-9bd5uq.dynamic.chello.pl) has quit (A TLS packet with unexpected length was received.)
2017-01-10 12:35:31	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-10 12:35:43	◣	epimorph (epimorph@moz-37flav.tbcn.telia.com) has quit (Quit: Leaving)
2017-01-10 12:36:34	◣	creationix (creationix@moz-28au0f.cpe.cableone.net) has quit (Ping timeout: 121 seconds)
2017-01-10 12:39:08	◥	tm (tom@moz-4bd.9to.255.49.IP) has joined #rust
2017-01-10 12:39:32	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-10 12:39:35	◣	sck_ (sck@moz-d1jm3d.dyn.as47377.net) has quit (Quit: Leaving)
2017-01-10 12:39:41	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-10 12:39:55	◥	creationix (creationix@moz-cgb.oju.32.72.IP) has joined #rust
2017-01-10 12:40:39	◥	kristof (Mibbit@moz-nlsvri.rk.wavecable.com) has joined #rust
2017-01-10 12:40:52	◣	ashish_ (chatzilla@moz-v2m1p1.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:41:00	kristof	Man, I haven't seen m4rw3r in a while
2017-01-10 12:41:06	kristof	is there a way to leave someone a message on irc while you're gone?
2017-01-10 12:41:19	&brson	1.15 relnotes https://github.com/rust-lang/rust/pull/38966
2017-01-10 12:41:19	kristof	er, while they're gone. And then receive one while you're gone.
2017-01-10 12:41:21	kurufu	bots are the usual solution to that.
2017-01-10 12:41:22	_habnabit	kurufu, memoserv?
2017-01-10 12:41:39	kurufu	Hehe... Nice hilight :)
2017-01-10 12:41:44	_habnabit	oops
2017-01-10 12:41:48	_habnabit	kristof, 
2017-01-10 12:41:48	kristof	it's ok, I saw it
2017-01-10 12:41:55	kristof	that's exactly what I needed, thanks
2017-01-10 12:42:27	◥	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has joined #rust
2017-01-10 12:42:41	◣	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (A TLS packet with unexpected length was received.)
2017-01-10 12:43:34	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Ping timeout: 121 seconds)
2017-01-10 12:44:35	◥	Gramy (quassel@moz-labbb5.hsi5.kabel-badenwuerttemberg.de) has joined #rust
2017-01-10 12:44:38	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Connection closed)
2017-01-10 12:44:47	◣	ubsandroid_ (ubsan@moz-4kupi9.hifp.h3gc.fb90.2607.IP) has quit (Quit: <3)
2017-01-10 12:45:00	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-10 12:45:03	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-10 12:45:28	◣	beedaddy (martin@moz-c95bnq.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2017-01-10 12:45:31	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-10 12:45:55	◣	mcoffin (mcoffin@moz-fc3f8c.ga.charter.com) has quit (Ping timeout: 121 seconds)
2017-01-10 12:46:06	◣	aep (aep@moz-htb.j4r.120.37.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:47:39	◥	aep (aep@moz-htb.j4r.120.37.IP) has joined #rust
2017-01-10 12:49:02	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2017-01-10 12:49:15	◥	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-10 12:49:27	◣	bennofs (benno@moz-f5pkqr.qn0t.tnpg.c1a0.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:49:53	◣	skeuomorf (skeuomorf@moz-dbn.4bu.211.156.IP) has quit (Connection closed)
2017-01-10 12:51:20	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 12:52:24	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 12:52:40	◣	aep (aep@moz-htb.j4r.120.37.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:53:08	◥	Jackneill_ (Jackneill@moz-d5febd.pool.digikabel.hu) has joined #rust
2017-01-10 12:53:17	◣	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:53:17	◥	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has joined #rust
2017-01-10 12:53:57	◣	pepper_chico (pepper_chic@moz-ho9.v8r.45.177.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 12:54:13	cloudm2	Hey, can't remember. Does env_logger (trace, debug etc) get compiled out after doing a 'release' compile? If not, impact on perf?
2017-01-10 12:54:31	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 12:54:36	◣	wallacoloo____ (colin@moz-puujts.dhcp4.washington.edu) has quit (Client exited)
2017-01-10 12:54:57	◥	cjm (c@moz-3cj6cb.co.comcast.net) has joined #rust
2017-01-10 12:54:57	◥	espadrine (tyl@moz-l019mn.fbx.proxad.net) has joined #rust
2017-01-10 12:55:22	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 12:55:31	sleffy	cloudm2, I think certain macros get erased
2017-01-10 12:55:41	sleffy	If memory serves, I think `debug!` does at the very least
2017-01-10 12:55:45	sleffy	But don't quote me on that
2017-01-10 12:56:16	◣	Hoff (kvirc@moz-84jd08.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2017-01-10 12:56:42	sleffy	cloudm2, looking at the docs for the `log` crate, there are features to erase certain macro invocations at compile-time
2017-01-10 12:56:57	sleffy	See here: https://doc.rust-lang.org/log/log/macro.debug.html
2017-01-10 12:57:10	cloudm2	thx
2017-01-10 12:58:28	◥	negge (unlord@moz-84unpo.osuosl.org) has joined #rust
2017-01-10 12:58:44	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-10 12:59:32	◥	ashish_ (chatzilla@moz-v2m1p1.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 13:00:39	◣	Morten (Morten@moz-52k39p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 13:01:27	◥	Morten (Morten@moz-52k39p.bb.online.no) has joined #rust
2017-01-10 13:02:42	◣	mastizada (Thunderbird@moz-k3n.2e1.218.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:03:03	◣	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-10 13:03:03	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:03:48	◥	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 13:04:06	◥	humean_ (humean@moz-huh.rkq.238.104.IP) has joined #rust
2017-01-10 13:04:26	◥	aep (aep@moz-htb.j4r.120.37.IP) has joined #rust
2017-01-10 13:04:27	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:04:42	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-10 13:04:58	◣	fabiand (fabiand@moz-g9mhjv.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2017-01-10 13:05:14	◣	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 13:05:36	◥	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-10 13:05:52	◥	ghisvail___ (ghisvail@moz-pd7njm.wifi.virginm.net) has joined #rust
2017-01-10 13:06:00	◥	MoSal (None@moz-8nalrs.jcsfiberlink.net) has joined #rust
2017-01-10 13:06:33	◣	sh4wn (lucas@moz-93hqeb.ricardis.openfiber.nl) has quit (Quit: Leaving)
2017-01-10 13:07:20	MoSal	Is it possible the language will support Self::SomeEnumVariant(..) in the future?
2017-01-10 13:07:27	◥	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has joined #rust
2017-01-10 13:07:53	MoSal	Right now it fails because the compiler looks for associated items, but not variants.
2017-01-10 13:08:14	◣	humean_ (humean@moz-huh.rkq.238.104.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:08:16	WindowsBunnyKeyboard	MoSal: Maybe you could write an RFC for that
2017-01-10 13:08:34	◣	aep (aep@moz-htb.j4r.120.37.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:09:02	⚡	rail is now known as rail-away
2017-01-10 13:09:37	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:09:50	kristof	Isn't it better to just have the variant be in scope in the module that it's defined in?
2017-01-10 13:10:06	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 13:10:50	◣	nadley (quassel@moz-1acdlb.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:12:12	◣	petso (petson@moz-r4476e.dyn.telefonica.de) has quit (Client exited)
2017-01-10 13:12:20	◥	TechnoCrunch (TechnoCrunc@moz-ant.ip3.100.101.IP) has joined #rust
2017-01-10 13:12:47	◣	ghisvail___ (ghisvail@moz-pd7njm.wifi.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:13:13	◥	fe (fe@moz-o4v.kg2.236.2.IP) has joined #rust
2017-01-10 13:13:43	◥	ville (ville@moz-vb4pog.bb.dnainternet.fi) has joined #rust
2017-01-10 13:14:18	MoSal	kristof: what do you mean? I'm talking about enum Foo { Variant } impl Foo { fn f() -> Self { Self::Variant} }
2017-01-10 13:14:38	◥	sp3d (s@moz-vfftem.mnmb.msaa.0240.2601.IP) has joined #rust
2017-01-10 13:15:02	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-10 13:15:09	sp3d	is there a way to get rustdoc to show what associated types are under for the impls under a trait's "implementors" list?
2017-01-10 13:15:19	sp3d	-under 
2017-01-10 13:15:29	◥	Guest37 (textual@moz-edsm98.res.rr.com) has joined #rust
2017-01-10 13:15:41	ytti	just noticed swift4 is supposedly getting rust inspired ownership model, but as opt-in
2017-01-10 13:18:23	pingveno	Huh, opt-in ownership could get interesting.
2017-01-10 13:18:45	pingveno	I mean, it's kind of something that you to go whole hog on.
2017-01-10 13:19:00	◣	oli_obk (smuxi@moz-ppe75h.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-10 13:19:04	kristof	Opt-in makes more sense for a langauge liek Swift.
2017-01-10 13:19:06	kristof	*like
2017-01-10 13:19:13	◥	humean_ (humean@moz-j5b.rkq.238.104.IP) has joined #rust
2017-01-10 13:19:26	kristof	where most types are either reference counted classes or PODs that you don't mind copying anyway.
2017-01-10 13:20:25	kristof	And rust is about as easy as opt-in move semantics considering 100% of cases where you want copy semantics are a simple derive away.
2017-01-10 13:20:36	◥	michas (michas@moz-nbdi76.dyn.telefonica.de) has joined #rust
2017-01-10 13:20:48	kristof	I don't think they change the semantics considerably but opt-in is probably much easier for beginners.
2017-01-10 13:21:15	◥	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has joined #rust
2017-01-10 13:21:25	Ploppz	I read briefly about threads, and I'm wondering how I can associate a certain running thread with a struct. Say struct A contains b: B. A will run b.run() in a new thread. But how do I ensure that the thread 'dies' when A goes out of scope?
2017-01-10 13:21:30	Ploppz	Maybe I have a lacking understanding
2017-01-10 13:22:36	⚡	haik is now known as haik|afk
2017-01-10 13:22:39	sp3d	Ploppz: it isn't generally safe to "kill" threads; the work the thread is performing should have points at which it checks whether it should cleanly exit
2017-01-10 13:23:01	_habnabit	well that's a thing. i had "warning: variable does not need to be mutable", so i removed the mut, and got "error: cannot borrow immutable captured outer variable in an `FnOnce` closure `results` as mutable"
2017-01-10 13:23:12	talchas	the only safe way to do that is to have some method taking &A or &B that doesn't return until the thread exits
2017-01-10 13:23:21	◣	humean_ (humean@moz-j5b.rkq.238.104.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:23:28	talchas	_habnabit: welp
2017-01-10 13:23:56	Ploppz	talchas: you mean, this method will start the thread? Or this method is the thread?
2017-01-10 13:23:56	_habnabit	should i make a test case to file as a rustc bug? this.. is a bug, right?
2017-01-10 13:24:15	talchas	Ploppz: the method starts the thread and waits until it completes
2017-01-10 13:24:28	◥	sebasmagri (user@moz-hhq.pe4.146.189.IP) has joined #rust
2017-01-10 13:24:35	talchas	(which is mostly not useful unless it does other things before waiting)
2017-01-10 13:24:36	◥	nicholasf (nicholasf@moz-jphe0u.iinet.net.au) has joined #rust
2017-01-10 13:24:43	Ploppz	Ah. Kinda defeats the purpose of thraeds
2017-01-10 13:24:46	stjepang	Ploppz: I implemented something like this before: https://gist.github.com/anonymous/feb3a7166a770fceb72d2c67510ff4b8
2017-01-10 13:25:02	talchas	the other sasfe ways are to not have A contain the B
2017-01-10 13:25:08	◥	wallacoloo____ (colin@moz-p1i8vr.dhcp4.washington.edu) has joined #rust
2017-01-10 13:25:09	◥	derek_v (derek_v@moz-npi3gu.res.rr.com) has joined #rust
2017-01-10 13:25:09	talchas	(at least once the thread is started)
2017-01-10 13:25:10	_habnabit	Ploppz, the purpose of threads isn't to be safely killed..
2017-01-10 13:25:17	talchas	or to have an Arc<B> that is shared
2017-01-10 13:25:22	stjepang	Ploppz: so, whenever `Worker` goes out of scope (i.e. gets dropped), it will signal the thread that it must be stupped and then wait for it to die
2017-01-10 13:25:52	◥	bjz (bjz@moz-4e8t75.optusnet.com.au) has joined #rust
2017-01-10 13:25:57	Ploppz	_habnabit: I just meant having the thread in a function that waits for it to end doesn't really introduce concurrency
2017-01-10 13:25:59	◣	kristof (Mibbit@moz-nlsvri.rk.wavecable.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 13:26:02	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2017-01-10 13:26:05	Ploppz	stjepang: cool, thanks
2017-01-10 13:26:30	◣	Peuch2 (phsym@moz-kc86sv.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:26:33	talchas	Ploppz: what stjepang is doing there is not safe for you
2017-01-10 13:26:34	◥	mcoffin (mcoffin@moz-fc3f8c.ga.charter.com) has joined #rust
2017-01-10 13:26:49	talchas	because you are sharing B between two threads
2017-01-10 13:26:55	◣	mcoffin (mcoffin@moz-fc3f8c.ga.charter.com) has quit (Quit: leaving)
2017-01-10 13:27:01	◥	rocode (rocode@moz-ddt6to.clsp.qwest.net) has joined #rust
2017-01-10 13:27:26	talchas	(that said, it also won't compile without unsafe{} unless you do something correct, just don't use unsafe and think it's ok here)
2017-01-10 13:27:28	_habnabit	talchas, i don't know if the 'welp' had much meaning behind it but this does seem incorrect, right?
2017-01-10 13:27:35	talchas	_habnabit: yeah
2017-01-10 13:27:39	◣	Psilidae (Psilidae@moz-kng1rg.at.cox.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:27:49	_habnabit	let's see if i can repro it
2017-01-10 13:27:50	talchas	_habnabit: "welp, that's a compiler bug"
2017-01-10 13:27:50	Ploppz	hm ok. Well for now I will try hard to find a sequential solution. The only thing I needed threads for is actually waiting (future events)
2017-01-10 13:28:01	◥	mcoffin (mcoffin@moz-fc3f8c.ga.charter.com) has joined #rust
2017-01-10 13:28:08	muricula	.a lug
2017-01-10 13:28:55	◣	mvyskocil (mvyskocil@moz-acv9lf.net.upcbroadband.cz) has quit (Ping timeout: 121 seconds)
2017-01-10 13:29:02	◥	Peuch (phsym@moz-kc86sv.rev.sfr.net) has joined #rust
2017-01-10 13:29:29	◥	Jesin (Jesin@moz-a58euv.fios.verizon.net) has joined #rust
2017-01-10 13:29:48	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-10 13:29:54	⚡	Emilgardis|zzz is now known as Emilgardis
2017-01-10 13:30:14	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:30:21	◥	aep (aep@moz-htb.j4r.120.37.IP) has joined #rust
2017-01-10 13:30:36	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 13:31:11	◥	nadley (quassel@moz-1acdlb.fbx.proxad.net) has joined #rust
2017-01-10 13:31:36	◣	wallacoloo____ (colin@moz-p1i8vr.dhcp4.washington.edu) has quit (Client exited)
2017-01-10 13:31:49	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:32:03	◥	wallacoloo____ (colin@moz-p1i8vr.dhcp4.washington.edu) has joined #rust
2017-01-10 13:32:23	◥	Philpax_ (Philpax@moz-eduvrg.optusnet.com.au) has joined #rust
2017-01-10 13:32:30	◣	TheCycoONE (quassel@moz-d4s.1g6.223.162.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:32:51	◣	Philpax (Philpax@moz-5lrr6m.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2017-01-10 13:32:55	◥	william (william@moz-g7bo5r.ca.comcast.net) has joined #rust
2017-01-10 13:34:13	◣	bjz (bjz@moz-4e8t75.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2017-01-10 13:34:30	◣	sadboy13 (dbishop@moz-doo.oct.130.68.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 13:34:38	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:35:39	◣	ashish_ (chatzilla@moz-v2m1p1.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:35:48	◣	rocode (rocode@moz-ddt6to.clsp.qwest.net) has quit (Quit: Leaving)
2017-01-10 13:36:03	◥	ashish_ (chatzilla@moz-ufgt0j.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 13:36:42	◥	Guest30 (textual@moz-ermqvg.a82i.2ods.0260.2a01.IP) has joined #rust
2017-01-10 13:36:55	◣	MoSal (None@moz-8nalrs.jcsfiberlink.net) has left #rust ("WeeChat 1.6")
2017-01-10 13:37:14	_habnabit	talchas, lmao ok it would help if i looked at the right 'mut results'
2017-01-10 13:37:17	_habnabit	no bug.
2017-01-10 13:38:14	◥	njn (chatzilla@moz-alnh9n.optusnet.com.au) has joined #rust
2017-01-10 13:38:50	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2017-01-10 13:39:50	◣	Morten (Morten@moz-52k39p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 13:40:20	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:40:38	◥	Morten (Morten@moz-52k39p.bb.online.no) has joined #rust
2017-01-10 13:40:47	◥	ftr_horizons (Mibbit@moz-uef.qu5.23.114.IP) has joined #rust
2017-01-10 13:40:52	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-10 13:41:04	◥	rocode (rocode@moz-ddt6to.clsp.qwest.net) has joined #rust
2017-01-10 13:41:04	◣	creationix (creationix@moz-cgb.oju.32.72.IP) has quit (Connection closed)
2017-01-10 13:41:07	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-10 13:41:15	ftr_horizons	Linking .rs with FUSE FS with ld works on Mac OS but on Linux says missing reference _Unwind_Resume amoungst others
2017-01-10 13:41:40	◥	tiby312 (uid183686@moz-gps7hq.hathersage.irccloud.com) has joined #rust
2017-01-10 13:41:55	◣	rubdos (rubdos@moz-61duhc.dynamic.voo.be) has quit (Ping timeout: 121 seconds)
2017-01-10 13:42:09	tiby312	i want to copy a slice into a mutable slice. how best to do this?
2017-01-10 13:42:20	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-10 13:42:20	_habnabit	tiby312, clone_from_slice?
2017-01-10 13:42:21	talchas	_habnabit: oops
2017-01-10 13:42:24	pedrocr	Moonlightning: I can try and produce a simplified test case if someone cares enough about it
2017-01-10 13:42:30	◣	aep (aep@moz-htb.j4r.120.37.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:42:40	◣	rocode (rocode@moz-ddt6to.clsp.qwest.net) has quit (Quit: Leaving)
2017-01-10 13:42:53	◥	rocode (rocode@moz-ddt6to.clsp.qwest.net) has joined #rust
2017-01-10 13:43:30	▷	bascule almost gets a nostd program to compile
2017-01-10 13:43:48	@steveklabnik	:D
2017-01-10 13:43:49	⚡	edunham is now known as edunham|pto
2017-01-10 13:44:01	_habnabit	ftr_horizons, rustc linking the final executable, or exposing a rust dylib and linking that?
2017-01-10 13:44:07	bascule	how do I link against libSystem.dylib on a Mac?
2017-01-10 13:44:20	bascule	maybe I should give up trying to do this stuff on Macs since it isn't important to my use case anyway
2017-01-10 13:44:51	◣	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:44:59	bascule	I guess I should say... my program won't link, ostensibly because: "note: ld: dynamic main executables must link with libSystem.dylib for architecture x86_64"
2017-01-10 13:45:08	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 13:45:12	tiby312	_habnabit: thanks!
2017-01-10 13:45:18	ftr_horizons	_habnabit: rust is only compiling the .rs and later linking with ld
2017-01-10 13:45:22	◣	tim_____ (tim_____@moz-qbl4sa.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-10 13:45:27	_habnabit	ftr_horizons, compiling .rs to what?
2017-01-10 13:45:32	◥	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has joined #rust
2017-01-10 13:45:40	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-10 13:46:11	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Connection closed)
2017-01-10 13:46:24	_habnabit	bascule, how, exactly, are you running rustc or whatever?
2017-01-10 13:46:35	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:46:50	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-10 13:46:56	ftr_horizons	_habnabit: running rust from build.rs into staticlib
2017-01-10 13:47:34	◣	Guest30 (textual@moz-ermqvg.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 13:48:17	◥	mib_3ytvu3 (Mibbit@moz-aikmrb.dip0.t-ipconnect.de) has joined #rust
2017-01-10 13:48:19	◣	mib_3ytvu3 (Mibbit@moz-aikmrb.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 13:48:25	bascule	_habnabit: "rustc myprogram.rs"
2017-01-10 13:48:42	◣	theduke (theduke@moz-bv6pm3.t8e8.4raq.8388.2a02.IP) has quit (Quit: Leaving)
2017-01-10 13:49:29	◥	aep (aep@moz-htb.j4r.120.37.IP) has joined #rust
2017-01-10 13:49:34	◣	lenwood (manjaro-kde@moz-lk2i3i.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-10 13:50:31	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-10 13:50:45	◣	rocode (rocode@moz-ddt6to.clsp.qwest.net) has quit (Quit: Leaving)
2017-01-10 13:50:55	◥	rocode (rocode@moz-ddt6to.clsp.qwest.net) has joined #rust
2017-01-10 13:51:11	◣	xiinotulp (q@moz-s5gkp8.dynamic.totbb.net) has quit (Quit: Leaving)
2017-01-10 13:51:13	◣	Ferreus (ferreus@moz-1ehpod.vr93.a1ia.2028.2a02.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 13:51:42	◥	tim_____ (tim_____@moz-qbl4sa.dip0.t-ipconnect.de) has joined #rust
2017-01-10 13:51:48	◣	humean (humean@moz-sl2fi3.cable.virginm.net) has quit (A TLS packet with unexpected length was received.)
2017-01-10 13:52:33	◣	YaLTeR (YaLTeR@moz-muk.do7.220.77.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 13:53:55	misdreavus	how would one select which version of asdf() to run here? https://is.gd/21fxZu
2017-01-10 13:54:14	◣	ideasman42 (cambo@moz-hf4pn0.iinet.net.au) has quit (Ping timeout: 121 seconds)
2017-01-10 13:54:22	◣	kulshrax (kulshrax@moz-q61.9o0.201.199.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 13:54:43	◥	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 13:55:23	◥	humean_ (humean@moz-j5b.rkq.238.104.IP) has joined #rust
2017-01-10 13:55:31	_habnabit	misdreavus, you'd have to downcast to C<X> or C<Y>
2017-01-10 13:56:00	misdreavus	but Z cannot be cast to X or Y, no?
2017-01-10 13:56:05	talchas	... I'm surprised the first section compiles
2017-01-10 13:56:08	◣	ashish_ (chatzilla@moz-ufgt0j.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 13:56:12	benh	heh, clever
2017-01-10 13:56:17	misdreavus	yeah, this is a modified example from #rust-beginners earlier
2017-01-10 13:56:19	_habnabit	oh, Z impls A and B
2017-01-10 13:56:20	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 13:56:26	_habnabit	these metavariable names are hard to follow
2017-01-10 13:56:33	misdreavus	X and Y are superfluous in this example, sorry
2017-01-10 13:56:40	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-10 13:56:45	◣	fe (fe@moz-o4v.kg2.236.2.IP) has quit (Connection closed)
2017-01-10 13:56:50	◥	mastizada (Thunderbird@moz-288.r0a.3.188.IP) has joined #rust
2017-01-10 13:56:51	misdreavus	the trick is that the asdf's are impl'd directly on the C<T> trait object
2017-01-10 13:56:54	◥	wallacoloo_____ (colin@moz-q7l6m1.dhcp4.washington.edu) has joined #rust
2017-01-10 13:56:58	talchas	yeah
2017-01-10 13:57:16	◥	fe (fe@moz-47g5bc.q4bj.rjaa.0b07.2001.IP) has joined #rust
2017-01-10 13:57:27	◥	SiIky (SiIky@moz-dbrsl2.5ghr.hl2k.08a0.2001.IP) has joined #rust
2017-01-10 13:57:29	misdreavus	originally the impl blocks were empty, and if you made them "for T" then it would be a coherence error
2017-01-10 13:57:44	◣	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 13:57:46	&mbrubeck	You don't even need `B`: https://is.gd/XBa6JQ
2017-01-10 13:57:47	◣	humean_ (humean@moz-j5b.rkq.238.104.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 13:57:47	_habnabit	<C<Z> as C<A>>::asdf(asdf); huh
2017-01-10 13:57:52	◥	humean (humean@moz-j5b.rkq.238.104.IP) has joined #rust
2017-01-10 13:57:56	_habnabit	oh that does it
2017-01-10 13:58:02	◣	wallacoloo____ (colin@moz-p1i8vr.dhcp4.washington.edu) has quit (Ping timeout: 121 seconds)
2017-01-10 13:58:03	◣	denisg (denisg@moz-k19q37.dip0.t-ipconnect.de) has quit (Client exited)
2017-01-10 13:58:10	◣	Jesin (Jesin@moz-a58euv.fios.verizon.net) has quit (Quit: Leaving)
2017-01-10 13:58:14	talchas	misdreavus: yeah, this fails for struct C<T>(T), the fact that it works for trait C<T>{} feels like a bug
2017-01-10 13:58:16	_habnabit	oh, that code fails too
2017-01-10 13:58:19	◥	ville_ (ville@moz-hrrhqh.bb.dnainternet.fi) has joined #rust
2017-01-10 13:58:26	talchas	(the dual impl blocks, that is)
2017-01-10 13:58:28	◣	ville_ (ville@moz-hrrhqh.bb.dnainternet.fi) has quit (Quit: Lost terminal)
2017-01-10 13:58:35	◥	Guest30 (textual@moz-ermqvg.a82i.2ods.0260.2a01.IP) has joined #rust
2017-01-10 13:59:01	misdreavus	talchas: yeah, when they're both on the same generic that totally feels like a bug
2017-01-10 13:59:09	misdreavus	but theoretically this is possible, if T does not impl both A and B
2017-01-10 13:59:24	▷	bascule tries to build a no_std prog on Linux, can't get that to work either :|
2017-01-10 13:59:35	_habnabit	aha!
2017-01-10 13:59:37	◣	ville (ville@moz-vb4pog.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2017-01-10 13:59:37	_habnabit	misdreavus, C::<A>::asdf(asdf);
2017-01-10 13:59:40	talchas	(where by "feels like a bug" I mean, "I'm pretty sure it is a bug that it wasn't forbidden with the others")
2017-01-10 13:59:51	◥	ville (ville@moz-hrrhqh.bb.dnainternet.fi) has joined #rust
2017-01-10 13:59:57	misdreavus	_habnabit: nope
2017-01-10 13:59:59	_habnabit	it fails with a Sized thing but this is part of the way
2017-01-10 14:00:02	&mbrubeck	_habnabit: Now try my version https://is.gd/p2t7Iv
2017-01-10 14:00:04	&mbrubeck	;)
2017-01-10 14:00:13	◣	Kreest__ (Kreest@moz-kpfgh6.globonet.hu) has quit (Connection closed)
2017-01-10 14:00:14	◣	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-10 14:00:27	_habnabit	mbrubeck, heeeeyyyy, how do lines 7-8 compile
2017-01-10 14:00:36	◥	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 14:00:39	◥	humean_ (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-10 14:00:44	&mbrubeck	This has to be a bug in conflict detection
2017-01-10 14:00:58	◣	humean_ (humean@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-10 14:01:00	talchas	yeah, it's not checking trait objects or something
2017-01-10 14:01:03	◥	humean_ (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-10 14:01:18	◣	fe (fe@moz-47g5bc.q4bj.rjaa.0b07.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:01:25	◣	bennofs1 (benno@moz-dmv86e.qn0t.tnpg.c1a0.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:01:44	◣	bschaefer (bschaefer@moz-6rr.8im.18.24.IP) has quit (Quit: Leaving)
2017-01-10 14:01:52	_habnabit	the original code is a bit weird in using trait objects yes
2017-01-10 14:01:58	◣	humean (humean@moz-j5b.rkq.238.104.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:02:10	◣	tm (tom@moz-4bd.9to.255.49.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:02:23	◣	humean_ (humean@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-10 14:02:29	◥	humean (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-10 14:02:32	misdreavus	i'd be willing to accept that this shouldn't happen due to coherence
2017-01-10 14:02:41	misdreavus	(that was the original expectation, even!)
2017-01-10 14:02:57	◥	ashish_ (chatzilla@moz-466o64.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 14:03:08	◥	vadimcn (uid46608@moz-9ioufh.tooting.irccloud.com) has joined #rust
2017-01-10 14:03:19	◣	derek_v (derek_v@moz-npi3gu.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-10 14:03:28	_habnabit	wait no the original code uses type parameters
2017-01-10 14:03:29	_habnabit	huh
2017-01-10 14:03:33	&mbrubeck	further reduced https://is.gd/3zE1Ob
2017-01-10 14:03:47	◣	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 14:03:56	◣	sepp2k (Sepp2k@moz-iq7msv.dyn.telefonica.de) has quit (Connection closed)
2017-01-10 14:04:08	_habnabit	mbrubeck, is that really the same problem?
2017-01-10 14:04:09	talchas	https://github.com/rust-lang/rust/issues/36889 is the tracking issue for what should have caught this
2017-01-10 14:04:11	misdreavus	it's treating it as separate trait impls rather than the same function being impl'd in separate blocks
2017-01-10 14:04:32	◣	davs (davs@moz-8afd79.bratislava.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-10 14:04:47	misdreavus	mbrubeck: that's fairly obviously a bug, but would my original example be considered a hard error in that case?
2017-01-10 14:04:49	_habnabit	oh, i suppose it is, if T: A and T: B should be treated as conflicting since something can impl A and B
2017-01-10 14:04:49	◣	jdm (jdm@moz-3eu2pc.cpe.teksavvy.com) has quit (Quit: )
2017-01-10 14:04:53	&mbrubeck	and further: https://is.gd/52L57m
2017-01-10 14:05:08	&mbrubeck	misdreavus: Yes, all of these should error
2017-01-10 14:05:20	misdreavus	i think you're having way too much fun reducing this down
2017-01-10 14:05:48	misdreavus	and i'm having way too much fun watching this develop :3
2017-01-10 14:06:12	misdreavus	should i tag this onto that issue talchas linked or make a new issue?
2017-01-10 14:06:30	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-10 14:06:37	&mbrubeck	misdreavus: Make a new issue and link to it from the tracking isue
2017-01-10 14:06:39	◥	davs (davs@moz-nsm9ed.bratislava.digicable.sk) has joined #rust
2017-01-10 14:06:52	misdreavus	can do
2017-01-10 14:07:11	◥	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has joined #rust
2017-01-10 14:07:34	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-10 14:08:17	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-10 14:08:56	◣	karinqe (karinqe@moz-ptt.nvt.172.163.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:09:50	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 14:10:22	Ploppz	in the Vec doc, there is a section "Methods from Deref<Target=[T]>" what does that mean?
2017-01-10 14:10:45	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 14:10:51	misdreavus	since Vec impl's Deref with a Target of [T], you can call any method that's defined on a slice as well
2017-01-10 14:10:57	◥	nairware (CELLIS@moz-h1t.rrt.69.71.IP) has joined #rust
2017-01-10 14:11:05	◣	vulpes (vulpes@moz-fjsq93.dcb1.8e10.2788.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:11:24	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-10 14:11:44	Ploppz	oh, nice, so those methods are actually from [T]
2017-01-10 14:11:54	◣	ptalbot (ptalbot@moz-cvpth3.0c6p.cv4v.0e35.2a01.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:12:10	◣	alanhoff (uid17275@moz-eugnce.tooting.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 14:12:19	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:12:55	misdreavus	yup
2017-01-10 14:13:04	◣	humean (humean@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-10 14:13:37	hroi	can i specify a dependency in Cargo.toml which is only used when running cargo bench?
2017-01-10 14:13:46	◥	davs_ (davs@moz-nsm9ed.bratislava.digicable.sk) has joined #rust
2017-01-10 14:13:52	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:13:53	◥	jbomo (dkd@moz-80j.dj5.155.47.IP) has joined #rust
2017-01-10 14:13:55	◣	jbomo (dkd@moz-80j.dj5.155.47.IP) has quit (Quit: )
2017-01-10 14:14:06	hroi	i've placed the benchmarks in benches/
2017-01-10 14:14:34	Ploppz	where can I see what a for .. in loop actually expands to?
2017-01-10 14:14:35	&mbrubeck	hroi: Put it in a [dev-dependencies] section
2017-01-10 14:14:37	misdreavus	iirc dev-dependencies are pulled in with benches? they're pulled in for tests and examples too but not just for lib consumers
2017-01-10 14:14:47	_habnabit	Ploppz, the MIR?
2017-01-10 14:14:48	&mbrubeck	hroi: Then it will be built only when building benches, tests, or examples
2017-01-10 14:14:57	◣	Murarth (Murarth@moz-f35.kg2.40.192.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:15:09	◥	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has joined #rust
2017-01-10 14:15:18	&mbrubeck	Ploppz: https://doc.rust-lang.org/std/iter/#for-loops-and-intoiterator
2017-01-10 14:15:24	Ploppz	thanks
2017-01-10 14:15:28	hroi	ok
2017-01-10 14:16:04	hroi	don't know why I was trying to avoid using dev-dependencies
2017-01-10 14:16:25	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-10 14:18:34	◥	wilfredh (user@moz-lafa9m.cable.virginm.net) has joined #rust
2017-01-10 14:18:35	Ploppz	https://bpaste.net/show/1313e7ac0d70  `the value of the associated type `Item` (from the trait `std::iter::Iterator`) must be specified`  - or should I just return Map?
2017-01-10 14:18:50	◣	davs_ (davs@moz-nsm9ed.bratislava.digicable.sk) has quit (Quit: Lost terminal)
2017-01-10 14:18:55	Ploppz	(question is how to specify type of Item)
2017-01-10 14:19:04	_habnabit	Ploppz, either way you'd have to name the type in the iterator
2017-01-10 14:19:08	◣	Morten (Morten@moz-52k39p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 14:19:15	_habnabit	Ploppz, -> Box<Iterator<Item=...>>
2017-01-10 14:19:35	◥	Morten (Morten@moz-52k39p.bb.online.no) has joined #rust
2017-01-10 14:20:11	◣	jbradberry (jrb@moz-mrjdh9.rlghnc.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2017-01-10 14:20:21	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2017-01-10 14:20:26	misdreavus	mbrubeck: talchas: _habnabit: https://github.com/rust-lang/rust/issues/38967
2017-01-10 14:20:27	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-10 14:21:07	Ploppz	thanks, _habnabit   - now I have a lifetime problem. https://bpaste.net/show/401b1fa796bf  I thought it'd be okay since I cloned() it
2017-01-10 14:21:28	_habnabit	Ploppz, cloned is lazy
2017-01-10 14:21:36	kazagistar	Ploppz: the .cloned() happens to each item, lazily. the resulting iterator still is borrowing the iterated collection
2017-01-10 14:21:44	_habnabit	Ploppz, you'd have to eagerly clone them and produce a Vec
2017-01-10 14:21:56	◣	alx741 (alx741@moz-4aj.fgh.107.200.IP) has quit (Client exited)
2017-01-10 14:21:58	Ploppz	so clone the Vec, not the iterator?
2017-01-10 14:22:05	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-10 14:22:35	_habnabit	Ploppz, probably what you want is self.send_window.packets.iter().map(|x| x.packet).cloned().collect::<Vec<_>>()
2017-01-10 14:23:05	◥	alx741 (alx741@moz-4aj.fgh.107.200.IP) has joined #rust
2017-01-10 14:23:26	Ploppz	ah that makes sense
2017-01-10 14:23:38	kazagistar	Or collect the iterator into a Vec, or pass the lifetime constraint on the resulting value, or build a new iterator type to use as the result
2017-01-10 14:24:28	◥	mgattozzi (mgattozzi@moz-t0tk4q.cable.rcn.com) has joined #rust
2017-01-10 14:24:36	◥	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 14:25:28	◣	malayaleecoder (uid139674@moz-k1ar3t.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 14:26:03	kazagistar	iter() creates an object containing a borrow of self.send_window.packets, cloned() creates an object containing that iterator, etc. Rust won't let you "forget" the borrow
2017-01-10 14:26:06	◣	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 14:26:20	◣	aep (aep@moz-htb.j4r.120.37.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:27:00	Ploppz	_habnabit: your solution doesn't work: https://bpaste.net/show/7fd9324ba11d
2017-01-10 14:27:25	◥	sssilver_ (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-10 14:27:33	◣	sssilver_ (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 14:27:48	_habnabit	Ploppz, what is the type of x.packet?
2017-01-10 14:27:56	Ploppz	Vec<u8>
2017-01-10 14:28:10	_habnabit	Ploppz, oh, then you'd need &x.packet
2017-01-10 14:28:12	◥	sssilver_ (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-10 14:28:31	◣	slomo (slomo@moz-cr5.9m0.117.188.IP) has quit (Quit: Leaving)
2017-01-10 14:28:41	◣	Peuch (phsym@moz-kc86sv.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2017-01-10 14:29:10	◣	zeryx (zeryx@moz-h7uvtb.ns.bellaliant.net) has quit (Client exited)
2017-01-10 14:29:20	Ploppz	it works, but why?
2017-01-10 14:29:47	◣	Guest30 (textual@moz-ermqvg.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 14:29:55	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:30:05	_habnabit	Ploppz, doing `x.packet` was trying to move the Vec out, and since it was a Vec and not a &Vec, .cloned() was confused by its input type
2017-01-10 14:30:19	_habnabit	Ploppz, .cloned() expects to be &T -> T, not T -> T
2017-01-10 14:30:43	Ploppz	ah. Thanks
2017-01-10 14:31:16	◣	mgottschlag (quassel@moz-asvnpo.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-10 14:31:44	◣	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 14:31:47	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-10 14:32:22	◣	wldcordeiro (wldcordeiro@moz-pitpqa.maon.n3es.0681.2601.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:32:32	◣	hexagoxel (hexagoxel@moz-rb2hnp.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2017-01-10 14:32:35	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-10 14:32:47	◥	bschaefer (bschaefer@moz-sr39tv.wa.comcast.net) has joined #rust
2017-01-10 14:33:53	◣	undeadleech (undeadleech@moz-qcfacg.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.6)
2017-01-10 14:33:57	◥	undeadleech (undeadleech@moz-qcfacg.dip0.t-ipconnect.de) has joined #rust
2017-01-10 14:34:07	pedrocr	just did a micro-benchmark and copy_from_slice() came out 165x faster than doing the loop by hand
2017-01-10 14:34:09	◥	Murarth (Murarth@moz-533.kg2.40.192.IP) has joined #rust
2017-01-10 14:34:58	◣	tromey (tromey@moz-hn05ml.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.91.1))
2017-01-10 14:35:02	◥	tm (tom@moz-4bd.9to.255.49.IP) has joined #rust
2017-01-10 14:35:04	pedrocr	and the time spend grows linearly with number of iterations so it doesn't seem to be just optimized away
2017-01-10 14:36:29	◥	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 14:36:32	bluss	pedrocr: what was the loop doing?
2017-01-10 14:36:46	bluss	(type of element)
2017-01-10 14:37:09	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-10 14:37:23	◣	ahihi (ahihi@moz-0t1257.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2017-01-10 14:37:48	sebk	I do have a question: why does uncommenting 'data' break this: https://is.gd/Y7jJHc ?
2017-01-10 14:37:57	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2017-01-10 14:38:07	pedrocr	bluss: https://gist.github.com/pedrocr/9d594ab54c321df2f324d8795777728b
2017-01-10 14:38:15	◣	rakm (rakm@moz-prc.jsh.115.17.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-10 14:38:26	sebk	I thought the livetime is the same as of &'a RenderSettings
2017-01-10 14:38:40	_habnabit	sebk, because you can't have a mutable and immutable borrow active
2017-01-10 14:39:07	bluss	sebk: Self contains the type parameter
2017-01-10 14:39:29	bluss	sebk: if you replace Self in FnMut(&mut Self) with something more explicit, it should be more clear?
2017-01-10 14:39:41	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 14:39:55	◣	ShaRose (ShaRose@moz-bluree.am.sharo.se) has quit (A TLS packet with unexpected length was received.)
2017-01-10 14:40:04	◣	tm (tom@moz-4bd.9to.255.49.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:40:05	◣	TobiasFar (tfar@moz-k0rqoo.sfpv.svop.04f8.2a01.IP) has quit (Quit: Bye)
2017-01-10 14:40:10	bluss	I mean Self contains the lifetime parameter, sorry
2017-01-10 14:40:15	sebk	yea I was guessing this
2017-01-10 14:40:15	◥	TobiasFar (tfar@moz-e6igna.ayena.de) has joined #rust
2017-01-10 14:40:16	◥	walter (walter@moz-glm69e.ma.comcast.net) has joined #rust
2017-01-10 14:40:22	◣	Akien (akien@moz-cr19g5.dyn.telefonica.de) has quit (A TLS packet with unexpected length was received.)
2017-01-10 14:40:56	_habnabit	oh, i misread
2017-01-10 14:41:03	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-10 14:41:36	◥	stephanbuys1 (Adium@moz-srkq2f.telkomadsl.co.za) has joined #rust
2017-01-10 14:41:47	bluss	pedrocr: aha, so the original loop is not so easy to optimize apparently
2017-01-10 14:41:55	◥	ghisvail___ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-10 14:42:04	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-10 14:42:12	◣	cjhowe (textual@moz-8114ai.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 14:42:38	pedrocr	bluss: I do all sorts of loops like this, they seem idiomatic and give a bunch of info to the compiler, no?
2017-01-10 14:43:16	bluss	pedrocr: I'm not sure what I should say in general. .zip() doesn't have the best codegen
2017-01-10 14:43:21	◥	durka42 (durka42@moz-itei31.pa.comcast.net) has joined #rust
2017-01-10 14:43:22	bluss	it has a specialization for slice iterators
2017-01-10 14:43:33	pedrocr	they make for really elegant image processing code: https://github.com/pedrocr/rawloader/blob/master/src/imageops/colorspaces.rs#L8-L22
2017-01-10 14:43:41	◣	stephanbuys (Adium@moz-sam0om.telkomadsl.co.za) has quit (Ping timeout: 121 seconds)
2017-01-10 14:43:43	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:43:43	pedrocr	so it's bad news that zip doesn't optimize well
2017-01-10 14:43:57	◥	cjhowe (textual@moz-8114ai.hr.cox.net) has joined #rust
2017-01-10 14:43:58	pedrocr	is that likely to improve?
2017-01-10 14:44:41	bluss	best is to break your example down and file a performance bug about it
2017-01-10 14:45:00	talchas	so part of that is just that the latter (in your example) is memcpy, and memcpy in particular is extremely optimized
2017-01-10 14:45:05	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Ping timeout: 121 seconds)
2017-01-10 14:45:07	◥	tm (tom@moz-4bd.9to.255.49.IP) has joined #rust
2017-01-10 14:45:17	bluss	is it related to zip or something else? There's a lot of extra operations in the chunking, should the compiler be able to strip that all off when the chunk sizes are 1? I don't know
2017-01-10 14:45:26	talchas	but it's also quite probable that chunks.zip(chunks) is slower than the manual indexing
2017-01-10 14:45:44	◣	hardenedapple (hardenedapp@moz-cu794c.range86-172.btcentralplus.com) has quit (Quit: WeeChat 1.6)
2017-01-10 14:45:45	pedrocr	yeah, in the actual code I only saw a 40% improvement from copy_from_slice
2017-01-10 14:45:51	pedrocr	and that wasn't using zip
2017-01-10 14:46:01	◥	ahihi (ahihi@moz-0t1257.bb.dnainternet.fi) has joined #rust
2017-01-10 14:46:10	kazagistar	what makes zip code slow?
2017-01-10 14:46:18	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 14:46:28	bluss	pedrocr: there are some bugs for basic things like https://github.com/rust-lang/rust/issues/37945 which regards propagation of metadata for the optimizer
2017-01-10 14:46:51	talchas	there's a bunch of conditionals that I bet the optimizer has trouble coalescing so that it can do better loop optimizations and such
2017-01-10 14:47:03	bluss	kazagistar: My explanation is that in the general case it needs to check: Is the first iterator done or what is its next element? Is the second iterator done or what is its next element?
2017-01-10 14:47:25	bluss	kazagistar: if it can't make that into a single conditional, then most loop optimizations don't apply
2017-01-10 14:47:42	◣	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:47:46	◣	DusXMT (dusxmt@moz-09f.p1s.12.195.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 14:47:55	pedrocr	the normal indexed loop is indeed ~3x faster
2017-01-10 14:48:00	◥	DusXMT (dusxmt@moz-09f.p1s.12.195.IP) has joined #rust
2017-01-10 14:48:01	◣	alx741 (alx741@moz-4aj.fgh.107.200.IP) has quit (Client exited)
2017-01-10 14:48:15	pedrocr	that still leaves a 50x performance difference to the memcpy :)
2017-01-10 14:48:19	◥	alx741 (alx741@moz-4aj.fgh.107.200.IP) has joined #rust
2017-01-10 14:48:20	kazagistar	bluss: but the size hints should guarantee that it never has to make that check in this case, or does it not do that optimization?
2017-01-10 14:48:31	pedrocr	it seems it's getting compiled down to an avx memcpy which should help
2017-01-10 14:49:28	pedrocr	but that was a minor thing anyway
2017-01-10 14:49:28	bluss	kazagistar: size hint is not used in .zip()'s .next() method. I'm not sure how it could be
2017-01-10 14:49:41	bluss	or in the construction of the Zip iterator? It doesn't help in the general case (no size hint)
2017-01-10 14:49:55	kazagistar	a.zip(b) doesn't need to make any checks until min(a.size_hint()._0, b.size_hint()._0) right?
2017-01-10 14:49:59	pedrocr	I'm observing about a 10-20% overhead from rust code compared to the equivalent C++ one right now
2017-01-10 14:50:19	bluss	pedrocr: minimize and file bugs IMO. Filed bugs have a chance to be fixed :)
2017-01-10 14:50:26	pedrocr	and that's on highly array based code that will of course need more bounds checking than the C++ code currently does
2017-01-10 14:50:31	pedrocr	so it's paying for safety
2017-01-10 14:50:36	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-10 14:50:48	bluss	kazagistar: ok.. How do we skip the check for a general iterator? We have .next() -> Option<Item>
2017-01-10 14:50:48	pedrocr	bluss: I'm still focusing on getting the same coverage of formats before I benchmark in earnest
2017-01-10 14:51:03	bluss	kazagistar: we can't trust the size_hint for memory safety, so we can't "Unsafe unwrap" the option
2017-01-10 14:51:08	pedrocr	bluss: I did file this one: https://github.com/rust-lang/rust/issues/38578
2017-01-10 14:51:26	bluss	pedrocr: not minimized though
2017-01-10 14:51:31	FreeFull	For arbitrary iterators, you can't really do anything besides calling .next() over and over again anyway
2017-01-10 14:51:37	pedrocr	bluss: yeah, true
2017-01-10 14:51:39	ebulkin	there's no current way to get the name of an enum variant as a string, right
2017-01-10 14:51:43	kazagistar	bluss: oh, I didn't realize you can't trust size_hint for memory safety, makes sense, nevermind then
2017-01-10 14:52:15	pedrocr	bluss: can probably get it down to a function or two without too much trouble
2017-01-10 14:52:24	pedrocr	after 1.0 I'll focus more on performance
2017-01-10 14:52:29	◣	ghisvail___ (ghisvail@moz-8k797h.cable.virginm.net) has quit (Client exited)
2017-01-10 14:52:30	bluss	great
2017-01-10 14:52:47	pedrocr	there's some I've just left on the table by implementing some things in simpler ways
2017-01-10 14:52:51	kazagistar	maybe an unsafe sized_zip() that assumes the size hints are accurate I guess :(
2017-01-10 14:52:54	pedrocr	128bit types will help with some of those
2017-01-10 14:53:57	bluss	kazagistar: there's a specialization trait that's internal to libcore right now
2017-01-10 14:54:03	pedrocr	I'm also getting a ~4x reduction in code size which is impressive
2017-01-10 14:54:35	◣	tim_____ (tim_____@moz-qbl4sa.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-10 14:54:42	bluss	kazagistar: for zip I mean
2017-01-10 14:55:07	kazagistar	bluss: I see, interesting
2017-01-10 14:55:14	bluss	TrustedRandomAccess but not visible in docs
2017-01-10 14:56:31	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Ping timeout: 121 seconds)
2017-01-10 14:56:34	bluss	specializing zip using that is surprisingly tricky. You can't just use (x[0], y[0]) .. (x[len - 1], y[len - 1]) and stop there, have to get x[len]) for its potential side effect (think i.map(f).zip(j))
2017-01-10 14:56:40	◥	mr-bt (mr-bt@moz-8r4eoh.range109-155.btcentralplus.com) has joined #rust
2017-01-10 14:57:16	bluss	(if x is longer than y)
2017-01-10 14:57:16	◥	ivan (ivan@moz-0ic.teh.78.59.IP) has joined #rust
2017-01-10 14:57:28	◥	jackpot51 (jackpot51@moz-h38c14.co.comcast.net) has joined #rust
2017-01-10 14:58:30	◣	sssilver_ (textual@moz-bac.97e.122.38.IP) has quit (Connection closed)
2017-01-10 14:59:21	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-10 15:00:05	kazagistar	oh boy, thats awkward. An unexpected (for me) side effect of combining the traditional next() => T and hasNext() => boolean into next() => Option<T> ?
2017-01-10 15:00:16	⚡	sleffy is now known as sleffy_
2017-01-10 15:00:19	⚡	sleffy_ is now known as sleffy
2017-01-10 15:00:32	kazagistar	though, I guess hasNext could have side effects too even in that sort of scheme, ugh
2017-01-10 15:00:44	_habnabit	heh 'traditional'
2017-01-10 15:00:48	Ploppz	for (ref addr, ref conn) in    -- what does that just tell something about the Item of the iterator (that the Iterator actually returns (&Address, &Connection) or something?
2017-01-10 15:00:58	_habnabit	i think you mean 'java-style, which php stole without comprehending'
2017-01-10 15:01:05	◥	Darfeel (Thunderbird@moz-02e.505.53.184.IP) has joined #rust
2017-01-10 15:01:18	◣	ivan (ivan@moz-0ic.teh.78.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:01:18	kazagistar	sure :D
2017-01-10 15:01:21	bluss	pedrocr: ref doesn't say anything about what exists in the position `addr` -- only that you want a reference to whatever is there
2017-01-10 15:01:29	bluss	Ploppz: ^ sorry, wrong nick
2017-01-10 15:01:41	⚡	sleffy is now known as sleff
2017-01-10 15:01:49	◥	kristof (Mibbit@moz-nlsvri.rk.wavecable.com) has joined #rust
2017-01-10 15:02:06	Ploppz	bluss: but isn't what you get defined by the Iterator itself? Can you change that by writing ref?
2017-01-10 15:02:09	◣	niklasad1 (niklasad1@moz-1l8g7e.cust.bredbandsbolaget.se) has quit (Ping timeout: 121 seconds)
2017-01-10 15:02:36	bluss	yes that's the role of the `ref` keyword. To pick references to a thing in a pattern
2017-01-10 15:02:43	talchas	playbot: let ref x = 1;
2017-01-10 15:02:45	⚡	Notice(playbot): ()
2017-01-10 15:02:49	bluss	simplest example is .. that ^
2017-01-10 15:03:03	kristof	Put another way, ref allows you to name things in a pattern without moving it
2017-01-10 15:03:08	talchas	yeah, in this case it'll be like for (addr, conn) in .. { let addr = &addr; let conn = &conn; }
2017-01-10 15:03:15	talchas	but in other cases it does things you couldn't do like that
2017-01-10 15:03:25	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:03:26	Ploppz	cool, thanks
2017-01-10 15:03:30	bluss	Ploppz: consider this.  let t = (1, 2);  let (ref x, _) = t;   What is x? It's a reference to the first field in t
2017-01-10 15:03:34	talchas	because you can do things like let &(_, ref x) = some_reference; 
2017-01-10 15:03:35	◣	ghosss (textual@moz-rr8npu.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 15:03:39	◣	sebasmagri (user@moz-hhq.pe4.146.189.IP) has quit (Quit: ERC (IRC client for Emacs 25.1.1))
2017-01-10 15:03:40	◣	zhirr (bjowi@moz-mr87dm.cust.bahnhof.se) has quit (Quit: WeeChat 1.6)
2017-01-10 15:03:47	◥	jsgf (jsgf@moz-183.9o0.201.199.IP) has joined #rust
2017-01-10 15:04:07	kristof	I noticed something that's hard for a lot of people is seeing that & in a pattern doesn't take a reference, it matches the structure of a reference
2017-01-10 15:04:13	kazagistar	"ref x" is the wildcard just like "x", but the binding is by reference rather then by move
2017-01-10 15:04:34	Ploppz	I see
2017-01-10 15:04:39	◣	Murarth (Murarth@moz-533.kg2.40.192.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:04:56	bluss	it's a FAQ
2017-01-10 15:04:58	Ploppz	I've been struggling with this aliasing problem for a while.. https://bpaste.net/show/7b3a3044ef7c the problem is that self.send_reliably_to takes &mut self, while self is borrowed [mutably] in line 1. conn.consume_queue() also mutates conn.
2017-01-10 15:05:07	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Connection closed)
2017-01-10 15:05:10	Ploppz	self.connection is a HashMap
2017-01-10 15:05:11	◥	ssebastianj (ssebastianj@moz-8n8fph.telecom.net.ar) has joined #rust
2017-01-10 15:05:16	◣	tglman (tglman@moz-bsmqe2.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 15:05:43	◥	Murarth (Murarth@moz-gup.pva.40.192.IP) has joined #rust
2017-01-10 15:05:45	◥	hub (hub@moz-59grbl.cpe.pppoe.ca) has joined #rust
2017-01-10 15:05:51	◣	Jackneill_ (Jackneill@moz-d5febd.pool.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2017-01-10 15:05:52	bluss	Ploppz: in this line `for (ref addr, ref mut conn) in self.connections.iter_mut()`  you would remove ref and ref mut
2017-01-10 15:06:04	◣	swaroopch (swaroopch@moz-4a9l7i.static.monkeybrains.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-10 15:06:06	bluss	addr is already a reference. You don't need a reference to the reference. Same with conn
2017-01-10 15:06:09	◣	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2017-01-10 15:06:10	Ploppz	yes true
2017-01-10 15:06:32	Ploppz	problem persists
2017-01-10 15:06:54	Ploppz	so for every Value in the HashMap that satisfies something (the matching and if-statement), I need to mutate conn and also self.. hm
2017-01-10 15:07:07	◥	Quxxy2 (Quxxy@moz-efh10q.internode.on.net) has joined #rust
2017-01-10 15:07:16	bluss	does send reliably use the hashmap?
2017-01-10 15:07:31	◥	rschifflin (randy@moz-ddf6l4.lv.cox.net) has joined #rust
2017-01-10 15:07:43	Ploppz	yes https://bpaste.net/show/7d1490fa9d56
2017-01-10 15:07:48	bluss	this usually needs splitting the self type into parts, or making one of the methods a free function or something that doesn't borrow the whole self
2017-01-10 15:07:52	◣	mr-bt (mr-bt@moz-8r4eoh.range109-155.btcentralplus.com) has quit (Connection closed)
2017-01-10 15:08:17	Ploppz	bluss: splitting into parts?
2017-01-10 15:08:19	bluss	oh it even mutates the hashmap. That's not allowed while it is being iterated
2017-01-10 15:08:40	bluss	splitting self is relevant if the two methods operate on different data, but apparently they use the same
2017-01-10 15:08:43	◣	EoF (EoF@moz-h6i7lj.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-10 15:09:18	Ploppz	I've gotten myself in quite a mess?
2017-01-10 15:09:18	◣	Gramy (quassel@moz-labbb5.hsi5.kabel-badenwuerttemberg.de) has quit (Quit: Quit)
2017-01-10 15:09:19	◣	cjhowe (textual@moz-8114ai.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 15:09:23	◥	rpip (mawuli@moz-m2nqap.w00t.firrre.com) has joined #rust
2017-01-10 15:09:27	kazagistar	if you mutably borrow self inside the loop, rust can't really guarantee you won't mutate the hashmap, invalidating the iterator and causing a memory problem
2017-01-10 15:09:29	bluss	You need to first figure out a strategy how to handle iterating the connection list and mutating it
2017-01-10 15:09:57	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-10 15:09:59	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-10 15:10:27	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-10 15:10:29	bluss	you want to add connections on the way apparently. Maybe redirect that to a different hashmap and merge it in later
2017-01-10 15:11:03	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Connection closed)
2017-01-10 15:11:18	◣	rafaeldelucena (Rafael@moz-lh8.0oc.209.186.IP) has quit (Connection closed)
2017-01-10 15:11:22	◥	jrmuizel (jrmuizel@66.207.193.21) has joined #rust
2017-01-10 15:11:28	▷	bascule continues having fun with no_std :|
2017-01-10 15:11:32	◥	rafaeldelucena (Rafael@moz-lh8.0oc.209.186.IP) has joined #rust
2017-01-10 15:11:53	◣	raichoo (raichoo@moz-ame1gb.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-10 15:11:57	Ploppz	hmmm thinking hard
2017-01-10 15:12:00	bascule	how does one do C strings with no_std?
2017-01-10 15:12:09	◥	tglman (tglman@moz-bsmqe2.cable.virginm.net) has joined #rust
2017-01-10 15:12:17	bascule	I tried "Hello, world!\0".as_ptr()
2017-01-10 15:12:23	kazagistar	build a diff and then afterwards mutate based on the diff is a common pattern. for example Java will also have a problem if you mutate a collection while iterating over it, but it will throw a runtime exception instead
2017-01-10 15:12:27	bluss	bascule: well, that works
2017-01-10 15:12:32	◣	ytain (ytain@moz-19a0it.lhgc.s942.f2c0.2607.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-10 15:12:32	talchas	.as_bytes().as_ptr() would work I think?
2017-01-10 15:12:36	bascule	"expected i8, found u8"
2017-01-10 15:12:36	talchas	(if that doesn't)
2017-01-10 15:12:53	bluss	bascule: need to cast to the right char type :(
2017-01-10 15:12:58	bascule	mmmk
2017-01-10 15:13:01	talchas	oh yes, all the libc things are declared as c_char, which on most platforms is i8
2017-01-10 15:13:03	bluss	bascule: so you'd use libc for that
2017-01-10 15:13:11	bascule	yeah I'm trying to use libc
2017-01-10 15:13:15	bascule	this is a libc function
2017-01-10 15:13:22	talchas	which is completely and utterly useless to everyone and adds a whole bunch of dumb casts for you to screw up
2017-01-10 15:13:26	bluss	bascule: ok there's a common macro that's suggested for this
2017-01-10 15:13:37	bluss	only it's not so common that it is in Rust, of course :P
2017-01-10 15:13:41	◥	talklittle (talklittle@moz-a6kpae.l0lm.9cq6.0646.2601.IP) has joined #rust
2017-01-10 15:14:04	bluss	something like this https://github.com/dcampbell24/iup-rust/blob/master/src/macros.rs#L2-L8
2017-01-10 15:14:15	bascule	ok
2017-01-10 15:14:28	durka42	 // must be a literal!!!
2017-01-10 15:14:40	▷	durka42 glances at "days since $x:literal RFC accepted" ticker
2017-01-10 15:14:53	bluss	concat!() should ensure that it's a string at the other end anyway
2017-01-10 15:14:54	bascule	lol
2017-01-10 15:14:57	bluss	string literal in fact
2017-01-10 15:14:59	pingveno	This would work too: https://doc.rust-lang.org/stable/std/ffi/struct.CStr.html#method.from_bytes_with_nul
2017-01-10 15:15:10	bluss	ah but it's not no-std
2017-01-10 15:15:12	bascule	I am still wondering if the insanity I am trying is going to work, heh
2017-01-10 15:15:24	◣	jrmuizel (jrmuizel@66.207.193.21) has quit (Ping timeout: 121 seconds)
2017-01-10 15:15:49	Fenrir	there's also this crate https://crates.io/crates/rcstring
2017-01-10 15:15:49	◣	undeadleech (undeadleech@moz-qcfacg.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-10 15:16:07	bascule	cool, thanks
2017-01-10 15:16:08	pingveno	bluss: Oh, that's unfortunate :(
2017-01-10 15:17:07	◣	Binary (Miranda6431@moz-nbosct.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2017-01-10 15:17:11	◣	tglman (tglman@moz-bsmqe2.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 15:19:14	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 15:19:42	Ploppz	can't borrow mutably on both line 3 and 22.. but doesn't the first mut borrow go out of scope?
2017-01-10 15:20:06	bascule	zomg, hello world works
2017-01-10 15:20:07	WindowsBunnyKeyboard	bascule: u8 and i8 have the same ABI on relevant platforms so you can pointer cast from *const u8 to *const i8 and back with zero concern
2017-01-10 15:20:17	bascule	WindowsBunnyKeyboard: yeah it's working now, thanks
2017-01-10 15:20:29	bascule	now for the real fun...
2017-01-10 15:20:39	bascule	trying to cross-compile to PowerPC o_O
2017-01-10 15:20:59	Ploppz	umm here's the attachment! https://bpaste.net/show/b7344732eb73
2017-01-10 15:21:12	◣	junqed (junqed@moz-8ee.3fb.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 15:21:18	◣	Freyskeyd (Freyskeyd@moz-oa5cvm.abo.bbox.fr) has quit (Ping timeout: 121 seconds)
2017-01-10 15:21:37	◣	JackMc (uid85402@moz-chh512.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2017-01-10 15:21:43	bluss	Ploppz: keys are borrowed from the connections map-- you'd need to clone each addr
2017-01-10 15:21:45	◥	sssilver (textual@moz-o28ro6.res.rr.com) has joined #rust
2017-01-10 15:22:03	⚡	sleff is now known as sleffy
2017-01-10 15:22:37	⚡	sleffy is now known as slef
2017-01-10 15:22:39	Ploppz	ah, thank you
2017-01-10 15:22:41	◥	cjhowe (textual@moz-8114ai.hr.cox.net) has joined #rust
2017-01-10 15:22:41	◥	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has joined #rust
2017-01-10 15:22:56	◣	kaljaman69 (uid206194@moz-l1hd6m.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2017-01-10 15:23:08	◣	pikajude (Jude@moz-j1fepb.bio) has quit (Quit: ZNC 1.6.3 - http://znc.in)
2017-01-10 15:23:16	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:23:38	⚡	slef is now known as sleffly
2017-01-10 15:23:47	Ploppz	so I made it work by not calling send_reliably_to, but rather do what the function do except get_connection_or_create, because that function should logically never actually create and add a connection (i.e. mutate self) I think, having not thought about it that much. But ok for now.
2017-01-10 15:24:02	◥	pikajude (Jude@moz-j1fepb.bio) has joined #rust
2017-01-10 15:24:34	◥	JackMc (uid85402@moz-chh512.ealing.irccloud.com) has joined #rust
2017-01-10 15:24:49	◥	kaljaman69 (uid206194@moz-l1hd6m.ealing.irccloud.com) has joined #rust
2017-01-10 15:25:23	◣	Morten (Morten@moz-52k39p.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 15:26:21	◥	Morten (Morten@moz-1chkaa.bb.online.no) has joined #rust
2017-01-10 15:26:52	Ploppz	every time I get an aliasing error, I know this is going to be an unpleasant adventure!
2017-01-10 15:27:10	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-10 15:27:19	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:28:15	Ploppz	I mean.. challenging and sometimes time consuming
2017-01-10 15:29:13	◣	davs (davs@moz-nsm9ed.bratislava.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-10 15:29:48	◣	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-10 15:30:01	◣	Prottey (user@moz-q7a.hl4.177.81.IP) has quit (Quit: Leaving.)
2017-01-10 15:30:12	◥	jrozner_ (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-10 15:30:41	◣	woshilapin (woshilapin@moz-lte49m.mi.comcast.net) has quit (Quit: leaving)
2017-01-10 15:30:45	◥	woshilapin (woshilapin@moz-lte49m.mi.comcast.net) has joined #rust
2017-01-10 15:30:45	◥	Kingsquee (kingsley@moz-sf902d.bchsia.telus.net) has joined #rust
2017-01-10 15:30:55	◣	gingermusketeer (gingermuske@moz-j57ehl.compute.amazonaws.com) has quit (Connection closed)
2017-01-10 15:31:01	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-10 15:31:04	◥	gingermusketeer (gingermuske@moz-3bq2v5.compute.amazonaws.com) has joined #rust
2017-01-10 15:31:12	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 15:31:27	◥	lholden-M (lholdenmat@moz-905bpb.openmarket.com) has joined #rust
2017-01-10 15:31:29	lholden-M	Anyone know of any conferences happening this year in North America?
2017-01-10 15:31:46	@steveklabnik	there will be at least two
2017-01-10 15:31:51	@steveklabnik	they do not have dates announced yet
2017-01-10 15:32:01	◥	bugweiser (Mibbit@moz-g65bkk.umd.edu) has joined #rust
2017-01-10 15:32:09	@steveklabnik	that is, rustconf and rust belt rust
2017-01-10 15:32:24	lholden-M	Haha.. I freaking enjoyed the heck out of Rust belt rust.
2017-01-10 15:32:28	@steveklabnik	:)
2017-01-10 15:32:36	@steveklabnik	iirc, they have also said it will not be in pgh this year
2017-01-10 15:32:40	@steveklabnik	but elsewhere in the rust belt
2017-01-10 15:32:45	Aaronepower	steveklabnik Hey, the tokio website's SSL is broken.
2017-01-10 15:33:00	◣	bugweiser (Mibbit@moz-g65bkk.umd.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 15:33:19	@steveklabnik	Aaronepower: what tokio website? ;)
2017-01-10 15:33:43	◣	Morten (Morten@moz-1chkaa.bb.online.no) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-10 15:34:15	◥	Denommus (user@moz-e42esc.1pjh.sdpv.07f5.2804.IP) has joined #rust
2017-01-10 15:34:20	kristof	is rustconf west cost where Mozilla is?
2017-01-10 15:34:23	kristof	*coast
2017-01-10 15:34:27	Denommus	do we have GADTs?
2017-01-10 15:34:41	kristof	No, I think Niko has investigated that before.
2017-01-10 15:34:45	Denommus	I've been away for a long time
2017-01-10 15:34:48	@steveklabnik	kristof: last year it was in portland. this year has not been announced yet
2017-01-10 15:34:55	kristof	Apologies to your interpreter :(
2017-01-10 15:34:59	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 15:35:06	kristof	steveklabnik: gotcha
2017-01-10 15:35:10	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-10 15:35:36	Denommus	kristof: interpreter?
2017-01-10 15:35:46	lholden-M	I was hoping there would be something this spring... need more Rust :D
2017-01-10 15:35:54	◣	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has quit (Client exited)
2017-01-10 15:36:10	@steveklabnik	lholden-M: not in the US
2017-01-10 15:36:14	◥	Cyderize (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2017-01-10 15:36:33	hroi	hmm, is there a tokio website we're not supposed to know about?
2017-01-10 15:36:59	@steveklabnik	no
2017-01-10 15:37:02	@steveklabnik	nothing to see here
2017-01-10 15:37:04	@steveklabnik	move along ;)
2017-01-10 15:37:05	kristof	Denommus: haha I don't know what else GADTs are for!
2017-01-10 15:38:12	Denommus	kristof: I'm using them to represent signal functions in Arrowized FRP in OCaml. I was wondering if I could rewrite my library in Rust
2017-01-10 15:38:29	Denommus	I *can* use a trait instead of a GADT, of course
2017-01-10 15:38:32	kristof	Nifty, what's the enum you're trying to write?
2017-01-10 15:38:53	kristof	You could use a trait but then you lose matching
2017-01-10 15:39:16	kristof	That's the most idiomatic rust thing to do, though
2017-01-10 15:39:20	Denommus	https://gist.github.com/Denommus/e1c4575f1abeb7e997ea64f02dec609c
2017-01-10 15:39:23	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 15:39:55	kristof	Denommus: Should just use a trait in my opinion :)
2017-01-10 15:40:03	kristof	seeing ocaml reminds me how much I love the syntax. *sigh*
2017-01-10 15:40:27	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2017-01-10 15:41:32	Denommus	I'm also thinking whether I should just use Arc<T> almost everywhere
2017-01-10 15:42:05	◣	Matthias247 (Miranda@moz-h1rs08.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-10 15:42:53	◣	sssilver (textual@moz-o28ro6.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 15:43:16	◥	sssilver (textual@moz-o28ro6.res.rr.com) has joined #rust
2017-01-10 15:43:20	◣	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-10 15:43:55	kristof	You're using rust, so you have the advantage of scoped threads if you want them
2017-01-10 15:44:04	◥	c0dehero (codehero@moz-6a3juu.on.coding4coffee.org) has joined #rust
2017-01-10 15:44:18	◥	kulshrax (kulshrax@moz-rtr0qu.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 15:44:51	kristof	I think there's a profound organizational effect when you use Rust because of the RAII that benefits code structure. Because you think about ownership, your code becomes more hierarchical and you think in terms of layers 
2017-01-10 15:44:54	kristof	less spaghetti!
2017-01-10 15:45:27	◣	_sfiguser (sfigguser@moz-0temhh.ip57.fastwebnet.it) has quit (Ping timeout: 121 seconds)
2017-01-10 15:45:47	◥	tglman (tglman@moz-bsmqe2.cable.virginm.net) has joined #rust
2017-01-10 15:46:43	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (A TLS packet with unexpected length was received.)
2017-01-10 15:46:45	◣	thornber (thornber@moz-vuihgv.redhat.com) has quit (Ping timeout: 121 seconds)
2017-01-10 15:46:47	◥	thornber (thornber@moz-vuihgv.redhat.com) has joined #rust
2017-01-10 15:46:59	◥	caconym (caconym@moz-mhv.8si.171.67.IP) has joined #rust
2017-01-10 15:47:26	◥	repnop (shell@moz-p9k.f0i.55.66.IP) has joined #rust
2017-01-10 15:47:50	◣	cynicaldevil (uid126068@moz-3m708d.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 15:48:10	◣	cjhowe (textual@moz-8114ai.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 15:48:10	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-10 15:48:12	◣	s (Mibbit@moz-rk7.vqp.75.216.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 15:48:32	◥	jdm (jdm@moz-l33svf.pg7c.10n3.8d80.2605.IP) has joined #rust
2017-01-10 15:48:32	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-10 15:49:07	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-10 15:49:24	◥	cjhowe (textual@moz-8114ai.hr.cox.net) has joined #rust
2017-01-10 15:49:40	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-10 15:50:44	◥	stephanbuys (Adium@moz-evuja1.telkomadsl.co.za) has joined #rust
2017-01-10 15:50:48	◣	jrozner_ (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-10 15:51:02	◣	cloudm2 (Mibbit@moz-tvv.s5g.115.65.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 15:52:12	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:52:24	◣	stephanbuys1 (Adium@moz-srkq2f.telkomadsl.co.za) has quit (Ping timeout: 121 seconds)
2017-01-10 15:53:19	◣	michas (michas@moz-nbdi76.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-10 15:53:24	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 15:53:36	◣	steffengy (quassel@moz-ivfl09.hsi15.kabel-badenwuerttemberg.de) has quit (Ping timeout: 121 seconds)
2017-01-10 15:54:08	◥	jrozner_ (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-10 15:55:31	◣	eibwen (eibwen@moz-6smn86.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-10 15:57:39	◥	_sfiguser (sfigguser@moz-0temhh.ip57.fastwebnet.it) has joined #rust
2017-01-10 15:58:28	◣	jrozner_ (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-10 15:58:57	◣	ville (ville@moz-hrrhqh.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2017-01-10 15:59:12	◥	steffengy (quassel@moz-ivfl09.hsi15.kabel-badenwuerttemberg.de) has joined #rust
2017-01-10 15:59:25	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-10 15:59:47	◥	Kingsqueee (kingsley@moz-sf902d.bchsia.telus.net) has joined #rust
2017-01-10 16:00:22	◥	derek_v (derek_v@moz-npi3gu.res.rr.com) has joined #rust
2017-01-10 16:00:32	◣	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:01:03	◥	rkuska (rkuska@moz-c9b.85h.82.95.IP) has joined #rust
2017-01-10 16:01:22	◣	Kingsquee (kingsley@moz-sf902d.bchsia.telus.net) has quit (Ping timeout: 121 seconds)
2017-01-10 16:03:29	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:04:22	◣	sssilver (textual@moz-o28ro6.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 16:04:35	◥	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has joined #rust
2017-01-10 16:05:05	◣	rkuska (rkuska@moz-c9b.85h.82.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:06:09	◣	av (av@moz-ck6g9m.80x24.ca) has quit (Quit: Bye!)
2017-01-10 16:07:28	◣	tel (tel@moz-0jh5f2.ma.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2017-01-10 16:08:03	◣	kdlv (kdlv@moz-p88oti.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:08:38	◥	av (av@moz-ck6g9m.80x24.ca) has joined #rust
2017-01-10 16:08:46	◣	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-10 16:09:12	▷	bascule tries to cross-compile rust
2017-01-10 16:09:27	◥	bholley (bholley@moz-8d0g9h.ca.comcast.net) has joined #rust
2017-01-10 16:09:35	◣	cjhowe (textual@moz-8114ai.hr.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 16:09:36	◣	NJBS (Intercourse@moz-9bdv6f.fios.verizon.net) has quit (Quit: Catastrophic failure.)
2017-01-10 16:09:40	◥	kdlv (kdlv@moz-p88oti.tbcn.telia.com) has joined #rust
2017-01-10 16:10:54	◣	otterdam (otterdam@moz-3plq5d.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:01	◥	otterdam (otterdam@moz-3plq5d.com) has joined #rust
2017-01-10 16:11:26	◣	canton7 (canton7@moz-77alh7.members.linode.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:31	◣	tekacs (tekacs@moz-q64vt8.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:32	◣	Twey (twey@moz-vdb7o7.co.uk) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:45	◣	rweir (rob@moz-vv5ono.ertius.org) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:48	◣	toby_s (toby_s@moz-bp5qol.sk83.bjud.7e00.2a01.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:50	◥	remize (kyrias@212.71.254.33) has joined #rust
2017-01-10 16:11:53	◣	mteufel (mteufel@moz-34h992.urandom.eu.org) has quit (Ping timeout: 121 seconds)
2017-01-10 16:11:55	◣	qz (quetzal@moz-7gvuqj.members.linode.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:12:16	◣	majoh (Sponge_Bob@moz-2cilpe.se) has quit (Ping timeout: 121 seconds)
2017-01-10 16:12:17	◣	erikj (erikj@moz-aj5go8.jki.re) has quit (Ping timeout: 121 seconds)
2017-01-10 16:12:21	◣	remmy (kyrias@theos.kyriasis.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:12:35	Emilgardis	use xargo!
2017-01-10 16:12:42	Emilgardis	Or even better, use cross
2017-01-10 16:13:24	bascule	oh ho
2017-01-10 16:13:26	◥	qz (quetzal@moz-7gvuqj.members.linode.com) has joined #rust
2017-01-10 16:14:35	◣	wilfredh (user@moz-lafa9m.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 16:16:31	◥	bvssvni (sven@moz-pri02e.bb.online.no) has joined #rust
2017-01-10 16:16:40	◥	Powersource (Powersource@moz-u199ao.cust.bredband2.com) has joined #rust
2017-01-10 16:16:55	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Quit: Leaving...)
2017-01-10 16:17:00	bascule	if what I'm trying to do actually works... :O
2017-01-10 16:17:21	◣	Dahrkael (Dahrkael@moz-oc5.368.25.46.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:17:27	Ploppz	what are you trying to do?
2017-01-10 16:17:30	◥	tekacs (tekacs@moz-pf3rp6.sk83.bjud.7e00.2a01.IP) has joined #rust
2017-01-10 16:17:31	◥	erikj (erikj@moz-aj5go8.jki.re) has joined #rust
2017-01-10 16:18:29	◥	Dahrkael (Dahrkael@moz-oc5.368.25.46.IP) has joined #rust
2017-01-10 16:18:48	◥	toby_s (toby_s@moz-bp5qol.sk83.bjud.7e00.2a01.IP) has joined #rust
2017-01-10 16:18:50	◥	canton7 (canton7@moz-i52qqc.sk83.bjud.7e00.2a01.IP) has joined #rust
2017-01-10 16:19:04	◣	Ploppz (ploppz@moz-52uqdh.dbg4.2af8.0700.2001.IP) has quit (Quit: have to sleep)
2017-01-10 16:19:12	◣	bread|laptop (bread@moz-brooh7.hfc.comcastbusiness.net) has quit (Client exited)
2017-01-10 16:19:22	◣	lambda-11235 (Lambda@moz-aig.kfv.105.75.IP) has quit (Quit: WeeChat 1.6)
2017-01-10 16:19:28	◥	mteufel (mteufel@moz-34h992.urandom.eu.org) has joined #rust
2017-01-10 16:19:44	◥	Twey (twey@moz-vdb7o7.co.uk) has joined #rust
2017-01-10 16:19:50	◥	majoh (Sponge_Bob@moz-2cilpe.se) has joined #rust
2017-01-10 16:21:02	◥	rweir (rob@moz-vv5ono.ertius.org) has joined #rust
2017-01-10 16:22:06	◥	_nom_ (Nabeel@moz-svf.nfo.180.59.IP) has joined #rust
2017-01-10 16:22:16	durka42	Emilgardis: does cross completely obsolete xargo or what?
2017-01-10 16:23:09	◣	nom_ (Nabeel@moz-3a0.bea.180.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:23:18	@steveklabnik	isn't cross built on top of xargo?
2017-01-10 16:23:41	◣	Dahrkael (Dahrkael@moz-oc5.368.25.46.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:24:01	◣	wallacoloo_____ (colin@moz-q7l6m1.dhcp4.washington.edu) has quit (Client exited)
2017-01-10 16:24:03	◣	remize (kyrias@212.71.254.33) has quit (Quit: Do Androids Dream of Electric Sheep?)
2017-01-10 16:24:13	◥	remmy (kyrias@theos.kyriasis.com) has joined #rust
2017-01-10 16:24:25	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Quit: WeeChat 1.5)
2017-01-10 16:24:57	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2017-01-10 16:25:09	◣	otterdam (otterdam@moz-3plq5d.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:25:16	◥	otterdam (otterdam@moz-v171l1.sk83.bjud.7e00.2a01.IP) has joined #rust
2017-01-10 16:25:17	Ixrec	judging by the source code, it is
2017-01-10 16:25:49	◣	chandlerbing (chandlerbin@moz-d95lac.ftth.glasoperator.nl) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2017-01-10 16:27:27	Emilgardis	It's using xargo yes
2017-01-10 16:27:54	stjepang	Are there any RFCs that would propose syntax sugar for things like `fn foo<T: AsRef<Something>>(smth: T)` (replace AsRef with Borrow, Into, Pattern, etc.)?
2017-01-10 16:27:56	Emilgardis	basically, xargo is for wrapping cargo, cross is for wrapping docker and xargo and cargo
2017-01-10 16:28:20	Emilgardis	what does count in copy_nonoverlapping do?
2017-01-10 16:28:28	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-10 16:28:43	Ixrec	stjepang: haven't seen any
2017-01-10 16:28:58	@steveklabnik	stjepang: some people have said things like that before but never got the point of an RFC
2017-01-10 16:29:12	Ixrec	Emilgardis: tells the function how many things to copy
2017-01-10 16:29:26	◥	samx (sami@moz-oq8dni.dyn.optonline.net) has joined #rust
2017-01-10 16:29:27	durka42	well there was that RFC which would replace it with `fn foo(smth: some AsRef<Something>)` or whatever
2017-01-10 16:30:00	Emilgardis	and things are of size<T> ?
2017-01-10 16:30:05	Ixrec	ah yeah, there were suggestions of extending impl Trait syntax to arguments
2017-01-10 16:30:14	◥	rudy (rustedwolf@moz-9bd5uq.dynamic.chello.pl) has joined #rust
2017-01-10 16:30:22	&mbrubeck	Emilgardis: yes
2017-01-10 16:30:23	Ixrec	https://doc.rust-lang.org/std/intrinsics/fn.copy_nonoverlapping.html
2017-01-10 16:30:24	Ixrec	"Copies count * size_of<T> bytes from src to dst. "
2017-01-10 16:31:07	Emilgardis	I didn't understand that text when I read it there :/
2017-01-10 16:31:13	Emilgardis	Thank you guys
2017-01-10 16:32:10	Emilgardis	Is there anyway to get a T of arbitruary size? I have a usize with the size I need.
2017-01-10 16:32:13	◣	rudy (rustedwolf@moz-9bd5uq.dynamic.chello.pl) has quit (Quit: Leaving)
2017-01-10 16:32:30	Ixrec	I'm not sure what that means
2017-01-10 16:32:32	Ixrec	what is T?
2017-01-10 16:32:57	Emilgardis	I can explain what I'm trying to do
2017-01-10 16:33:04	_habnabit	please do
2017-01-10 16:33:52	Emilgardis	I have the size of an area (.data) in ROM called Data_Size, I need to copy it to RAM
2017-01-10 16:34:02	◥	tmtwd (tmtwd@moz-i27.n7l.52.157.IP) has joined #rust
2017-01-10 16:34:19	Emilgardis	I'm trying to replace some startup code with rust
2017-01-10 16:34:32	Ixrec	and this size is measured in bytes?
2017-01-10 16:34:48	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-10 16:34:53	Emilgardis	should be bits
2017-01-10 16:35:04	Ixrec	close enough
2017-01-10 16:35:06	◥	ashish__ (chatzilla@moz-l4l4mp.8r4b.grs8.010d.2620.IP) has joined #rust
2017-01-10 16:35:13	◣	manuel_ (manuel@moz-44m.14s.6.209.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:35:16	◣	ashish_ (chatzilla@moz-466o64.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:35:25	⚡	bholley is now known as bholley_away
2017-01-10 16:35:55	m12y	I've ended up with a bunch of `#[cfg(any(target_os = "ios", target_os = "android"))]`s all over my code to work around some GL vs GLES issues. Is there any way I can make something like `#[cfg(gles)]` or `#[gles]` or `#[cfg(gles!())]` to help clean up my code + have only a single spot i need to tweak to add support for new GLES targets?
2017-01-10 16:35:55	&mbrubeck	Emilgardis: You can pass in byte pointers (*const u8, *mut u8) and the size in bytes.
2017-01-10 16:36:11	Ixrec	^
2017-01-10 16:36:19	_habnabit	or use copy_from_slice if you get &[u8]s
2017-01-10 16:37:19	Ixrec	m12y: I *think* a macro can generate an attribute
2017-01-10 16:37:22	◣	free_beard (mircea@moz-32vo60.euroweb.ro) has quit (Ping timeout: 121 seconds)
2017-01-10 16:37:31	keeper	m12y: There are a few things you could do here.
2017-01-10 16:37:31	◣	sqwishy (sqwishy@moz-ifh.q9a.172.69.IP) has quit (Connection closed)
2017-01-10 16:37:55	Emilgardis	mbrubeck: pass them into copy_nooverlapp?
2017-01-10 16:37:55	keeper	You could make an android and ios module.
2017-01-10 16:37:57	◥	sqwishy (sqwishy@moz-ifh.q9a.172.69.IP) has joined #rust
2017-01-10 16:37:57	m12y	lxrec: I've only been able to get that to work if the macro is also inserting (or re-inserting) the thing the attribute is applying to as well
2017-01-10 16:38:20	keeper	Or you could use features.
2017-01-10 16:38:58	◣	amir (amir@moz-qbf4gg.fiber7.init7.net) has quit (Ping timeout: 121 seconds)
2017-01-10 16:39:47	◣	ftr_horizons (Mibbit@moz-uef.qu5.23.114.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 16:39:51	keeper	m12y: This is how rust handles it from what I've seen https://github.com/rust-lang/rust/blob/master/src/libstd/sys/mod.rs
2017-01-10 16:40:48	&mbrubeck	Emilgardis: right
2017-01-10 16:41:07	keeper	So a module with the same name is loaded from a different path based on the platform, and it's publically exported.
2017-01-10 16:41:36	◣	_nom_ (Nabeel@moz-svf.nfo.180.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:41:39	◣	blashyrk (gushromp@moz-4hp94c.dynamic.sbb.rs) has quit (Quit: Leaving)
2017-01-10 16:41:45	keeper	Then there is a sys_common module that holds common code for all the different implementations https://github.com/rust-lang/rust/tree/master/src/libstd/sys_common
2017-01-10 16:41:51	m12y	keeper: I'll give that a try. I don't think it will solve _all_ of my problems (I have multiple places (e.g. startup and rendering) where I care about the GL/GLES differences), but it'll definitely help. Thanks!
2017-01-10 16:42:01	&mbrubeck	Emilgardis: copy_nonoverlapping(src as *const u8, dst as *mut u8, n); // copy `n` bytes from `src` to `dst`
2017-01-10 16:42:19	◣	kzan (kzan@moz-a7t.ujr.97.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:42:21	◣	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-10 16:42:25	sleffly	Does there exist an iterator adapter which represents a chain of multiple iterators?
2017-01-10 16:42:30	keeper	m12y: Then it has more internally https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/mod.rs
2017-01-10 16:42:33	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-10 16:42:40	◥	_rovar_ (rovar@moz-ai0250.wa.charter.com) has joined #rust
2017-01-10 16:42:41	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-10 16:42:48	◣	sebk (sebk@moz-05nbdi.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2017-01-10 16:42:52	_habnabit	sleffly, there's flat_map
2017-01-10 16:42:55	rkruppe	sleffly: Iterator::chain?
2017-01-10 16:43:00	sleffly	rkruppe, that's just two iterators
2017-01-10 16:43:07	_habnabit	you can chain a chain
2017-01-10 16:43:10	◣	Powersource (Powersource@moz-u199ao.cust.bredband2.com) has quit (Quit: Leaving)
2017-01-10 16:43:15	sleffly	I'm looking for a single type which says "zero or more iterators chained together"
2017-01-10 16:43:23	sleffly	_habnabit, not looking to use polymorphism here
2017-01-10 16:43:26	_habnabit	Iterator
2017-01-10 16:43:27	rkruppe	if you have a variable number, flat_map is your friend
2017-01-10 16:43:41	keeper	flat_map will iterate an iterator of  iterators.
2017-01-10 16:43:43	◣	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has quit (Client exited)
2017-01-10 16:43:45	◣	orks (orks@moz-qae.c0k.84.93.IP) has quit (Quit: rakede)
2017-01-10 16:44:53	◣	rovar_ (rovar@moz-qa6fd4.compute-1.amazonaws.com) has quit (Ping timeout: 121 seconds)
2017-01-10 16:44:56	Emilgardis	mbrubeck: Here is the asm code I want to replicate: http://pastebin.com/SmNpG8aB
2017-01-10 16:45:11	◣	chris_99 (chris_99@moz-0qhdat.clients.your-server.de) has quit (Connection closed)
2017-01-10 16:45:39	sleffly	mmm, that'd be flat_map(id) though
2017-01-10 16:45:43	sleffly	I guess I can work with that
2017-01-10 16:45:53	◣	handyman (handyman@moz-s9ci8a.subp.5lka.0645.2601.IP) has quit (Quit: )
2017-01-10 16:46:35	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Ping timeout: 121 seconds)
2017-01-10 16:46:43	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-10 16:47:32	_habnabit	i don't remember if i got an answer before, but it's not actually possiblel to specialize e.g. Iterator::chain on an impl of Iterator, right? Chain has no public constructors and it'd take some contortion to construct a Chain in your chain impl
2017-01-10 16:47:36	Emilgardis	mbrubeck: so casting as *_ u8 will get me a pointer of a type with size 8, and then I simply copy n bytes.
2017-01-10 16:48:07	◣	mcoffin (mcoffin@moz-fc3f8c.ga.charter.com) has quit (Quit: leaving)
2017-01-10 16:48:22	◥	bazz (bazz@moz-lcj649.whatbox.ca) has joined #rust
2017-01-10 16:48:29	rkruppe	_habnabit: if you were in std you could specialize Chain<YourIter, OtherIter>
2017-01-10 16:48:37	◣	jdm (jdm@moz-l33svf.pg7c.10n3.8d80.2605.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:48:57	_habnabit	rkruppe, most code isn't in std
2017-01-10 16:49:01	rkruppe	_habnabit: customizing Iterator::chain makes approx. no sense because it's just Chain's constructor
2017-01-10 16:49:15	_habnabit	rkruppe, yeah i know. chain was just the first listed
2017-01-10 16:49:42	rkruppe	many other methods are like that
2017-01-10 16:50:52	rkruppe	the behavior happens in the wrapper's next () impl so that is where you need to hook in
2017-01-10 16:50:52	rkruppe	and that requires specialization and std actually offering specialization
2017-01-10 16:50:52	◣	futile (felix@moz-l82m5j.pools.vodafone-ip.de) has quit (Quit: WeeChat 1.6)
2017-01-10 16:51:23	◥	manuel_ (manuel@moz-5eskqg.ma.comcast.net) has joined #rust
2017-01-10 16:51:36	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-10 16:52:24	◥	stjepang_ (stjepang@moz-rsc.aah.252.151.IP) has joined #rust
2017-01-10 16:53:27	mitsuhiko	is macros 1.1 in beta?
2017-01-10 16:53:44	@steveklabnik	if it's not yet it will be when the next beta builds
2017-01-10 16:54:17	⚡	bholley_away is now known as bholley
2017-01-10 16:54:38	◥	plutoniix (q@moz-kp1.dop.192.159.IP) has joined #rust
2017-01-10 16:55:43	◣	stjepang (stjepang@moz-3o5.uss.205.37.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:56:01	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-10 16:58:36	◣	alfie (alfie@moz-dk2iqm.alfiepates.me) has quit (Ping timeout: 121 seconds)
2017-01-10 16:58:36	◣	tiby312 (uid183686@moz-gps7hq.hathersage.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-10 16:58:46	◥	ivan (ivan@moz-0ic.teh.78.59.IP) has joined #rust
2017-01-10 16:58:54	◣	aidanhs (aidanhs@moz-417.5v2.4.81.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 16:58:57	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Quit: Leaving...)
2017-01-10 16:59:57	◥	aidanhs (aidanhs@moz-417.5v2.4.81.IP) has joined #rust
2017-01-10 17:00:12	◥	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has joined #rust
2017-01-10 17:00:56	◣	bschaefer (bschaefer@moz-sr39tv.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-10 17:01:23	mitsuhiko	aww. serde does not support beta yet
2017-01-10 17:01:33	◥	alfie (alfie@moz-dk2iqm.alfiepates.me) has joined #rust
2017-01-10 17:01:45	mitsuhiko	emits a feature flag that is disallowed in beta
2017-01-10 17:01:54	mitsuhiko	does that mean beta is not young enough yet or does that need to change in serde?
2017-01-10 17:02:40	◣	jsgf (jsgf@moz-183.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-10 17:02:40	@steveklabnik	the latter i'd guess
2017-01-10 17:02:40	◣	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has quit (Connection closed)
2017-01-10 17:02:49	◣	ivan (ivan@moz-0ic.teh.78.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 17:02:58	◣	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2017-01-10 17:03:02	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Connection closed)
2017-01-10 17:03:19	◥	jdm (jdm@moz-n5hfeq.cpe.pppoe.ca) has joined #rust
2017-01-10 17:03:19	⚡	Mode #rust [+o jdm] by ChanServ
2017-01-10 17:03:19	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Connection closed)
2017-01-10 17:03:29	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2017-01-10 17:03:31	◥	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has joined #rust
2017-01-10 17:03:52	◥	drasich (indefini@moz-4p4v25.ucom.ne.jp) has joined #rust
2017-01-10 17:04:09	dtolnay	mitsuhiko i'll fix it right now
2017-01-10 17:04:13	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-10 17:04:27	mitsuhiko	\o/
2017-01-10 17:04:30	◥	blackgoat (blackgoat@moz-rbq.89i.24.59.IP) has joined #rust
2017-01-10 17:05:13	◣	hauleth (hauleth@moz-im3la2.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-10 17:05:28	◥	eckhardt_ (eckhardt@moz-o8r.1op.84.135.IP) has joined #rust
2017-01-10 17:06:01	◥	alx741_ (alx741@moz-d51.hcb.152.190.IP) has joined #rust
2017-01-10 17:06:30	◥	jethroft (jethro@moz-kot7v5.hfc.comcastbusiness.net) has joined #rust
2017-01-10 17:06:58	jethroft	why is this generic fn ok but the generic trait impl throws an error? https://is.gd/vFt24o
2017-01-10 17:07:07	◣	gvandere_ (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Quit: )
2017-01-10 17:08:32	◣	jrmuizel (jrmuizel@moz-d2skqo.fibre.fibrestream.ca) has quit (Ping timeout: 121 seconds)
2017-01-10 17:08:38	◣	alx741 (alx741@moz-4aj.fgh.107.200.IP) has quit (Ping timeout: 121 seconds)
2017-01-10 17:08:53	◥	hatman (Mibbit@moz-5r2.kh2.150.95.IP) has joined #rust
2017-01-10 17:09:01	hatman	yo
2017-01-10 17:09:28	hatman	anyone not idling here?
2017-01-10 17:09:30	sleffly	hatman, yo
2017-01-10 17:09:31	◥	tel (tel@moz-0jh5f2.ma.comcast.net) has joined #rust
2017-01-10 17:09:34	sleffly	Lotsa people not idling here
2017-01-10 17:09:49	hatman	ah
2017-01-10 17:09:53	◥	sbw (Thunderbird@moz-gkj.r2e.173.59.IP) has joined #rust
2017-01-10 17:10:23	◣	hatman (Mibbit@moz-5r2.kh2.150.95.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-10 17:10:46	◥	jsgf (jsgf@moz-ao5.9o0.201.199.IP) has joined #rust
2017-01-10 17:11:14	◣	jdm (jdm@moz-n5hfeq.cpe.pppoe.ca) has quit (Connection closed)
2017-01-11 09:54:53	⚡	irc: disconnected from server
2017-01-11 09:55:09	◥	boon (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-11 09:55:09	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-11 09:55:09	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-11 09:55:09	⚡	Channel #rust: 1336 nicks (19 ops, 0 halfops, 3 voices, 1314 normals)
2017-01-11 09:55:13	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-11 09:55:15	◣	pcwalton (pcwalton@moz-21mp4f.ca.comcast.net) has quit (Client exited)
2017-01-11 09:55:16	◥	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has joined #rust
2017-01-11 09:55:21	◣	ShaRose (ShaRose@moz-bluree.am.sharo.se) has quit (Quit: I appear to have left for some reason.)
2017-01-11 09:55:50	prz	there is this dep graph package that does all this through cargo ... compile time, hmm, probably nope but you can have a build.rs that does that and generates a manifest ... 
2017-01-11 09:56:16	◥	ShaRose (ShaRose@moz-bluree.am.sharo.se) has joined #rust
2017-01-11 09:56:52	prz	devon: ok, I see that compiles and actually matches. Yeah, your code is confusing 
2017-01-11 09:56:53	◥	vasi (vasi@moz-i2jeql.ejl3.c9sv.ffc5.2602.IP) has joined #rust
2017-01-11 09:57:01	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-11 09:57:02	prz	the x you use in pattern match has _nothing_ to do with the variable x 
2017-01-11 09:57:13	prz	you're shadowing the real x 
2017-01-11 09:57:14	@steveklabnik	viny: i guess in theory you could parse cargo.lock in a build script. it's not a stable interface though
2017-01-11 09:57:18	jorendorff	is there a way to tag a type that's used only for its `Drop` side effect, so that it doesn't trigger unused_variables warnings?
2017-01-11 09:57:47	durka42	jorendorff: prepend a _ to the variable name
2017-01-11 09:57:55	jorendorff	of course, duh
2017-01-11 09:57:57	jorendorff	thanks
2017-01-11 09:58:07	◣	mchang (mchang@moz-786mcj.res.rr.com) has quit (Client exited)
2017-01-11 09:58:11	◥	daschl (daschl@moz-kvc.ipu.178.62.IP) has joined #rust
2017-01-11 09:58:49	prz	devon: if that's what you tried to do https://is.gd/wY04qA then it won't compile due to type mismatch ... 
2017-01-11 09:59:14	◥	skeuomorf (skeuomorf@moz-47b.3h9.211.156.IP) has joined #rust
2017-01-11 10:00:34	⚡	stephaneyfx is now known as stephaneyfx_away
2017-01-11 10:00:49	◣	melleb (Thunderbird@moz-2f6.hgi.241.84.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:01:31	◥	sethlopez (sethlopez@moz-cor.ifk.27.12.IP) has joined #rust
2017-01-11 10:01:53	◣	ngqrl (weechat@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 10:02:11	◣	alanhoff (uid17275@moz-eugnce.tooting.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-11 10:02:22	◥	starblue (juergen@moz-0sjqgo.web.vodafone.de) has joined #rust
2017-01-11 10:03:00	◥	ngqrl (weechat@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has joined #rust
2017-01-11 10:04:35	◣	stephaneyfx_away (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Ping timeout: 121 seconds)
2017-01-11 10:04:39	◥	humean (humean@moz-4tj.ek0.162.178.IP) has joined #rust
2017-01-11 10:05:31	◥	Naerbnic_ (Naerbnic@moz-ndnrq9.public.wayport.net) has joined #rust
2017-01-11 10:05:39	◣	crunchiebones (jy@moz-3rf.7pg.205.31.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:06:10	◣	humean (humean@moz-4tj.ek0.162.178.IP) has quit (Quit: WeeChat 1.5)
2017-01-11 10:06:19	◥	humean (humean@moz-4tj.ek0.162.178.IP) has joined #rust
2017-01-11 10:06:27	Naerbnic_	So, I’m noticing that there’s a number of implementations of shared cached buffers in the async IO world, such as EasyBuf in tokio and MemBuf in the hyper tokio implementation.
2017-01-11 10:06:42	Naerbnic_	Is there demand to create a common package for those?
2017-01-11 10:07:27	carllerche	Naerbnic_: Tokio 0.2 has a goal of using the `bytes` crate. We just punted it for now
2017-01-11 10:07:30	◣	dex (Thunderbird@moz-93r.unj.91.193.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:07:57	◥	fqtw (uid18992@moz-oqv2tr.tooting.irccloud.com) has joined #rust
2017-01-11 10:07:58	Naerbnic_	Ah, I’ll take a look at that crate then.
2017-01-11 10:08:30	seanmonstar	hyper may use bytes as well, I'm currently exploring what I need so I can compare with bytes
2017-01-11 10:09:27	◣	santiago (santiago@moz-rlvtng.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2017-01-11 10:10:07	Naerbnic_	The difference I saw at first glance is that the hyper impl allows a vec to be mutable even with shared references, as long as they don’t reference the changed range
2017-01-11 10:10:14	◣	jrozner (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 10:10:19	Naerbnic_	(And of course, as long as there are no needed reallocations)
2017-01-11 10:10:23	carllerche	Naerbnic_: this one: http://github.com/carllerche/bytes
2017-01-11 10:10:43	Naerbnic_	Cool, carllerche. Thanks!
2017-01-11 10:10:51	carllerche	Naerbnic_: bytes does that w/ Bytes & BytesMut
2017-01-11 10:10:57	Naerbnic_	Ah, nice
2017-01-11 10:11:02	yzarubin	I've been away from Rust for a while, is there still no way to a access a string by index C++ style? my problem domain is 100% ascii, and its so painful having to convert every string to a vector of chars
2017-01-11 10:11:05	carllerche	EasyBuf was just a super simple implementation until we could focus on polishing up the bytes API
2017-01-11 10:11:12	◥	jrozner (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-11 10:11:23	Naerbnic_	Ah, okay
2017-01-11 10:11:27	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-11 10:11:33	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-11 10:11:44	Naerbnic_	Does it make sense to allow for an API with non-contiguous byte ranges, or do the performance numbers not support that?
2017-01-11 10:11:45	prz	@carllerche: big kuddos for the MIO work ... Using it very heavily currently ... 
2017-01-11 10:12:40	◥	alexherbo2 (alex@moz-dgs.fnc.61.176.IP) has joined #rust
2017-01-11 10:13:07	talchas	yzarubin: if it's 100% ascii you may want to use [u8] and b"foo" instead
2017-01-11 10:13:22	⚡	alexherbo2 is now known as alex`
2017-01-11 10:13:29	◣	Guest30 (textual@moz-062n07.a82i.2ods.0260.2a01.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 10:13:47	talchas	(there's also the AsciiExt methods if they happen to be what you need in other ways)
2017-01-11 10:13:52	Naerbnic_	yzarubin: You can also do the same with ASCII characters: b’A’
2017-01-11 10:14:12	yzarubin	yeah but I then have to use the vector API instead of the regular string API
2017-01-11 10:14:36	Naerbnic_	yzarubin: Is there something specific that you need from the string API?
2017-01-11 10:14:57	yzarubin	ok well conceptually in my head, I have the C++ string api
2017-01-11 10:14:59	talchas	Vec doesn't have any good subsequence stuff iirc
2017-01-11 10:15:12	yzarubin	so I translate the C++ methods in my head to rust string methods
2017-01-11 10:15:22	yzarubin	but now instead I have to go and look for similar vector methods
2017-01-11 10:15:47	Naerbnic_	Or slice methods, (which are listed on the page)
2017-01-11 10:15:51	◥	Ferreus (ferreus@moz-hkkdms.c13d.1nu3.2028.2a02.IP) has joined #rust
2017-01-11 10:15:54	talchas	in any case, what are you actually missing?
2017-01-11 10:15:54	Naerbnic_	I’m just curious what is missing, in theory
2017-01-11 10:16:05	yzarubin	and simple things like println!() obviously print vectors differently than strings
2017-01-11 10:16:05	◥	bluss (bluss@moz-9sooj3.dynamic.simnet.is) has joined #rust
2017-01-11 10:16:33	talchas	there's also just .as_bytes()[i] for when you do need indexing, so long as you don't need mutation
2017-01-11 10:16:42	◣	Devon (Mibbit@moz-qgvrhi.nh.comcast.net) has left #rust
2017-01-11 10:17:04	◥	saimen (saimen@moz-i2kas4.natpool.mwn.de) has joined #rust
2017-01-11 10:17:32	◥	mastizada (Thunderbird@moz-k3n.2e1.218.176.IP) has joined #rust
2017-01-11 10:17:47	◣	brson (brson@moz-j1n.kmu.58.172.IP) has quit (Connection closed)
2017-01-11 10:17:54	jethroft	TIL this is the name of a type: for<'s> fn(&'s i32) -> &'s i32>
2017-01-11 10:18:10	durka42	extra >?
2017-01-11 10:18:25	jethroft	oh oops that shouldn't be there but yeah
2017-01-11 10:18:33	◥	KiChjang (KiChjang@moz-qdqrbs.28m4.nqec.0646.2601.IP) has joined #rust
2017-01-11 10:19:06	◣	playbot (playbot@moz-t76o6j.compute.amazonaws.com) has quit (RecvQ exceeded)
2017-01-11 10:19:58	◥	DreamingInCode (textual@moz-vqbadk.sd.cox.net) has joined #rust
2017-01-11 10:20:04	◥	brson (brson@moz-j1n.kmu.58.172.IP) has joined #rust
2017-01-11 10:20:04	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-11 10:20:44	yzarubin	is String.as_bytes() O(1)?
2017-01-11 10:21:29	@steveklabnik	yes
2017-01-11 10:21:35	@steveklabnik	String is a Vec<u8> internally
2017-01-11 10:21:40	@steveklabnik	so it's just a cast
2017-01-11 10:22:32	◣	iiddnn__ (iacopodeeno@moz-fcea0a.retail.telecomitalia.it) has quit (Client exited)
2017-01-11 10:22:34	yzarubin	Can I mutate it?
2017-01-11 10:22:48	@steveklabnik	it returns a &[u8], iirc, so no
2017-01-11 10:22:54	◥	raichoo (raichoo@moz-gvtrsq.versanet.de) has joined #rust
2017-01-11 10:23:01	Naerbnic_	yzarubin: Since String requires the data to be UTF8, it wouldn’t be able to maintain the invariant
2017-01-11 10:23:05	Naerbnic_	If it were mutable
2017-01-11 10:23:05	◣	tstack (Adium@moz-lmrjds.wa.comcast.net) has quit (Quit: Leaving.)
2017-01-11 10:23:15	Naerbnic_	Vec, however, does allow you to do that
2017-01-11 10:23:25	◥	fce (fce@moz-0h0ct1.hen6.nivq.2028.2a02.IP) has joined #rust
2017-01-11 10:23:31	◥	TheCycoONE (quassel@moz-d4s.1g6.223.162.IP) has joined #rust
2017-01-11 10:23:36	◣	mastizada (Thunderbird@moz-k3n.2e1.218.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:24:37	yzarubin	Yeah I've been trying everything, there's no way to do mutable random access strings in a way that doesn't make me want to just do it in C++
2017-01-11 10:24:40	talchas	ah, String has unsafe .as_mut_vec() even though str doesn't have .as_mut_slice for some reason
2017-01-11 10:24:47	◣	ngqrl (weechat@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has quit (Client exited)
2017-01-11 10:24:48	◣	remmy (kyrias@theos.kyriasis.com) has quit (Quit: Do Androids Dream of Electric Sheep?)
2017-01-11 10:24:53	◣	[o__o] ([o__o]@moz-4s2t5k.compute-1.amazonaws.com) has quit (A TLS packet with unexpected length was received.)
2017-01-11 10:24:56	talchas	that's probably the easiest way
2017-01-11 10:25:06	◥	[o__o] ([o__o]@moz-4s2t5k.compute-1.amazonaws.com) has joined #rust
2017-01-11 10:25:09	durka42	yzarubin: why do you need mutable random access in a string?
2017-01-11 10:25:33	yzarubin	competitive programming (I never said Rust was good for it)
2017-01-11 10:25:38	durka42	I know that's an annoying question, but it creates difficulties as soon as you consider non-ASCII characters
2017-01-11 10:25:52	◥	denisg (denisg@moz-k19q37.dip0.t-ipconnect.de) has joined #rust
2017-01-11 10:26:04	durka42	if everything is ASCII then maybe you want to do everything with Vec<u8> and then convert to String at the end
2017-01-11 10:26:10	rkruppe	^
2017-01-11 10:26:16	durka42	or even Vec<char> if you don't care about memory usage
2017-01-11 10:26:20	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2017-01-11 10:26:34	yzarubin	problem with Vec<u8> is that I want to println! for debugging
2017-01-11 10:26:41	yzarubin	and instead of a string im looking at bytes
2017-01-11 10:26:53	yzarubin	so I have to convert it everytime
2017-01-11 10:26:55	◣	petso (petson@moz-tr7emb.dyn.telefonica.de) has quit (Client exited)
2017-01-11 10:26:57	Naerbnic_	You can create a wrapper type around a &[u8] that prints the contents as ASCII
2017-01-11 10:27:03	rkruppe	for debugging, just slap a str::from_utf8 around it
2017-01-11 10:27:09	Naerbnic_	That works too :-)
2017-01-11 10:27:49	◣	playbot-mini (playbot-min@moz-t76o6j.compute.amazonaws.com) has quit (Connection closed)
2017-01-11 10:27:50	◥	playbot-mini (playbot-min@moz-t76o6j.compute.amazonaws.com) has joined #rust
2017-01-11 10:27:50	⚡	Mode #rust [+v playbot-mini] by ChanServ
2017-01-11 10:28:01	◥	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has joined #rust
2017-01-11 10:28:05	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 10:28:31	bascule	I'm trying to cross-compile a Rust program with an ancient gcc (for a proprietary toolchain). Is that even going to work, and if so, how do I customize the CFLAGS to remove the ones it's too old to support?
2017-01-11 10:28:42	bascule	program is a #![no_std] hello world
2017-01-11 10:28:43	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-11 10:28:47	bascule	I'm just trying to PoC this
2017-01-11 10:29:06	◥	remmy (kyrias@theos.kyriasis.com) has joined #rust
2017-01-11 10:29:13	◥	pcwalton (pcwalton@moz-vhk0rb.hfc.comcastbusiness.net) has joined #rust
2017-01-11 10:29:13	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-11 10:29:28	◥	Guest85 (textual@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has joined #rust
2017-01-11 10:29:28	sfackler	bascule: one easy approach could be to set your cc to a wrapper script that strips the flags you don't want
2017-01-11 10:29:47	◣	TileHalo (TileHalo@moz-mqq8n6.elisa-laajakaista.fi) has quit (A TLS packet with unexpected length was received.)
2017-01-11 10:30:02	◥	pcwalton_ (pcwalton@moz-vhk0rb.hfc.comcastbusiness.net) has joined #rust
2017-01-11 10:30:03	⚡	Mode #rust [+ao pcwalton_ pcwalton_] by ChanServ
2017-01-11 10:30:37	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-11 10:30:41	◥	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has joined #rust
2017-01-11 10:31:07	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 10:31:39	◥	petso (petson@moz-tr7emb.dyn.telefonica.de) has joined #rust
2017-01-11 10:31:56	◣	Guest85 (textual@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has quit (Quit: Bye!)
2017-01-11 10:32:08	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:32:12	◣	lenwood (manjaro-kde@moz-1b9l7k.r4a5.s6a3.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:32:15	◥	nom (nomer@moz-2b7.3cf.180.59.IP) has joined #rust
2017-01-11 10:32:56	◥	davs (davs@moz-ni1ugg.bratislava.digicable.sk) has joined #rust
2017-01-11 10:32:58	dcrewi	is there no (safe) way to get something out of a Box without box patterns?
2017-01-11 10:34:02	◣	pcwalton (pcwalton@moz-vhk0rb.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-11 10:34:02	⚡	pcwalton_ is now known as pcwalton
2017-01-11 10:34:02	rkruppe	dcrewi: not in a pattern. but you can dereference to move out of the box.
2017-01-11 10:34:02	◥	Acader1 (Acader@moz-lct6l6.hsi15.kabel-badenwuerttemberg.de) has joined #rust
2017-01-11 10:34:02	◣	espadrine (tyl@moz-to6uce.offices.captaintrain.com) has quit (Ping timeout: 121 seconds)
2017-01-11 10:34:13	durka42	yeah you have to make a nested match
2017-01-11 10:34:23	◣	Acader1 (Acader@moz-lct6l6.hsi15.kabel-badenwuerttemberg.de) has quit (Client exited)
2017-01-11 10:34:42	dcrewi	rkruppe: oh. I didn't think to try dereferencing
2017-01-11 10:35:02	◣	woboats (woboats@moz-8rajde.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-11 10:35:05	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-11 10:35:19	◥	ngc0202 (ngc0202@moz-9jvocq.ny.comcast.net) has joined #rust
2017-01-11 10:35:35	◣	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-11 10:35:57	◣	Eonil (Eonil@moz-n1g.alp.106.222.IP) has quit (Quit: This computer has gone to sleep)
2017-01-11 10:35:59	yzarubin	If I'm using Vec<u8> instead of strings, what is going to be the best way of doing something akin to   string s3 = s1.substr(0,1) + s2.substr(0,1);
2017-01-11 10:36:05	yzarubin	with the copy mechanics and everythin
2017-01-11 10:36:27	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 10:36:41	rkruppe	It will be spelled differently but the actual work won't be any different
2017-01-11 10:36:59	◣	Acader (Acader@moz-adki23.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2017-01-11 10:37:13	rkruppe	Because String is just a Vec<u8> with UTF-8 as invariant, and likewise &str is just &[u8] that's UTF-8
2017-01-11 10:37:15	◥	Beefki (phobia@moz-t3l42c.il.comcast.net) has joined #rust
2017-01-11 10:37:50	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-11 10:38:10	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-11 10:38:18	◣	renchan (renchan@moz-m6g.9fp.88.195.IP) has quit (Quit: )
2017-01-11 10:38:20	yzarubin	I know the execution will be the same
2017-01-11 10:38:27	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-11 10:38:27	◣	Jesin (Jesin@moz-a58euv.fios.verizon.net) has quit (Quit: Leaving)
2017-01-11 10:38:30	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-11 10:38:48	seanmonstar	Naerbnic_: i believe you described the BlockBuf from bytes: https://github.com/carllerche/bytes-more/blob/master/src/block.rs
2017-01-11 10:39:00	talchas	well if it's 0,1 in particular, vec[s1[0], s2[0]] would be the easiest
2017-01-11 10:39:24	yzarubin	its substr(i, j)
2017-01-11 10:39:27	◣	cpup (cpup@moz-osl.ktm.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:39:33	yzarubin	for practical purposes
2017-01-11 10:39:58	kirillkh	WindowsBunnyKeyboard: ahem... I'm testing against the stable, and it gives me the same performance. I got confused somehow (probably something changed in my own program). what I *am* seeing is a huge discrepancy between performance on Linux and Windows
2017-01-11 10:40:06	yzarubin	the APIs return vecto slices, which I'm guessing you can't use + operator on
2017-01-11 10:40:21	talchas	but if it's not one char and you need actual concat then hmm, s1[x..y].iter().cloned().chain(s2[a..b].iter().cloned()).collect::<Vec<_>>() is horrible
2017-01-11 10:40:24	◥	cpup (cpup@moz-osl.ktm.218.32.IP) has joined #rust
2017-01-11 10:40:37	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-11 10:40:45	yzarubin	geeez
2017-01-11 10:40:49	talchas	let s3 = s1[x..y].to_owned(); s3.extend(s2[a..b]) is better
2017-01-11 10:40:59	WindowsBunnyKeyboard	kirillkh: It could likely just be jemalloc vs system allocator
2017-01-11 10:41:18	yzarubin	It needs to be an expression
2017-01-11 10:41:27	Naerbnic_	seanmonstar: I see. Looks like Bytes covers most everything then :-)
2017-01-11 10:41:43	◣	viny (jdoe@moz-3hb24u.hsi13.unitymediagroup.de) has quit (Quit: leaving)
2017-01-11 10:41:48	yzarubin	considering I could be adding n number of substrings 
2017-01-11 10:41:48	◣	Naerbnic_ (Naerbnic@moz-ndnrq9.public.wayport.net) has quit (Client exited)
2017-01-11 10:42:00	talchas	I mean, this is rust, { let s3 = s1[x..y].to_owned(); s3.extend(s2[a..b]); s3 } is an expression
2017-01-11 10:42:09	◣	nom (nomer@moz-2b7.3cf.180.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:42:11	◥	Cyp_ (Cyp_@moz-onaqlm.cpe.webspeed.dk) has joined #rust
2017-01-11 10:42:11	kirillkh	WindowsBunnyKeyboard: clone of a binary tree with 100 items is 3.5x faster on Linux...
2017-01-11 10:42:20	bascule	sfackler: hmm, ok
2017-01-11 10:43:10	yzarubin	Oh true, yeah I keep forgetting blocks work differently
2017-01-11 10:43:19	sfackler	bascule: it might not be a great long term solution but if you just want the thing working it's probably the easiest approach
2017-01-11 10:43:20	◣	skeuomorf (skeuomorf@moz-47b.3h9.211.156.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 10:43:27	talchas	if you are doing a bunch [a, b, c, d].iter().cloned().flat_map(|x| x) or something like that to give the correct dereferences and clones would be concise
2017-01-11 10:43:36	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 10:43:37	◥	Naerbnic_ (Naerbnic@moz-ndnrq9.public.wayport.net) has joined #rust
2017-01-11 10:43:40	◣	Lykve (emil@moz-5do.h62.38.158.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:44:06	fqtw	can i use tokio to send push notifications from my server to my app? 
2017-01-11 10:44:25	talchas	alternatively there's write!(&mut s3, "{}{}{}{}", s1[x..y], etc) if they're strings
2017-01-11 10:44:35	WindowsBunnyKeyboard	kirillkh: Yeah, that seems like about the perf difference for allocation
2017-01-11 10:44:44	fqtw	or should I use ws
2017-01-11 10:44:53	talchas	(and you can use the .as_mut_vec() thing when you need to mutate)
2017-01-11 10:45:02	kirillkh	WindowsBunnyKeyboard: is it something that the developers want to fix?
2017-01-11 10:45:35	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-11 10:45:43	rkruppe	kirillkh: the long term goal is that Rust always uses the system allocator by default and you can pull in jemalloc from crates.io if it helps your use case and works for you
2017-01-11 10:45:44	◥	junqed (junqed@moz-al2.rqj.70.178.IP) has joined #rust
2017-01-11 10:45:48	◥	Fanaen (Fanaen@moz-kjiu8m.6rfj.92aj.0e35.2a01.IP) has joined #rust
2017-01-11 10:45:53	yzarubin	cant I do something like clone(s1.substr(..)) + clone(s2.substr(..))
2017-01-11 10:46:01	WindowsBunnyKeyboard	kirillkh: jemalloc is kinda broken on windows
2017-01-11 10:46:01	yzarubin	or whatever the substr semantics are
2017-01-11 10:46:11	kirillkh	rkruppe: is it possible now?
2017-01-11 10:46:13	WindowsBunnyKeyboard	kirillkh: and msvc can't even compile it at all
2017-01-11 10:46:14	talchas	Vec doesn't implement Add like that
2017-01-11 10:46:32	yzarubin	and that why i need strings :(
2017-01-11 10:46:33	talchas	(string does)
2017-01-11 10:46:36	kirillkh	WindowsBunnyKeyboard: can Rust devs fix it upstream?
2017-01-11 10:46:55	seanmonstar	you can use copy_from_slice instead of add
2017-01-11 10:46:55	rkruppe	kirillkh: even on linuxes jemalloc has caused us more than its fair share of headaches
2017-01-11 10:46:58	◥	Lykve (emil@moz-5do.h62.38.158.IP) has joined #rust
2017-01-11 10:46:59	fqtw	WindowsBunnyKeyboard: can msvc link it? 
2017-01-11 10:47:30	WindowsBunnyKeyboard	fqtw: msvc cannot statically link code compiled by mingw
2017-01-11 10:47:33	WindowsBunnyKeyboard	and vice versa
2017-01-11 10:47:34	kirillkh	rkruppe: judging by this benchmark, it might be worth it
2017-01-11 10:47:49	seanmonstar	s1[x..y].clone().copy_from_slice(&s2[a..b])
2017-01-11 10:48:05	WindowsBunnyKeyboard	kirillkh: fqtw: Personally I'd much rather see someone write a good fast allocator in Rust directly
2017-01-11 10:48:06	sfackler	kirillkh: we would like to jettison jemalloc entirely and allow people to select the global allocator they want
2017-01-11 10:48:16	◣	daschl (daschl@moz-kvc.ipu.178.62.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 10:48:24	rkruppe	kirillkh: stupid non-deterministic bugs in jemalloc have killed so many nightlies and bors builds it's not even funny
2017-01-11 10:48:57	◥	Jesin (Jesin@moz-a58euv.fios.verizon.net) has joined #rust
2017-01-11 10:48:59	fqtw	WindowsBunnyKeyboard: can it be as fast as jemalloc? 
2017-01-11 10:49:09	kirillkh	rkruppe: well, writing malloc is way above my head, so having a choice isn't going to help me much
2017-01-11 10:49:13	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 10:49:15	WindowsBunnyKeyboard	fqtw: It is entirely possible for someone to write an allocator in Rust that is as fast, if not faster, than jemalloc
2017-01-11 10:49:23	WindowsBunnyKeyboard	It's just that nobody has gone through the effort of doing so yet
2017-01-11 10:49:42	◥	ygrek (user@moz-8j9aeu.org.ua) has joined #rust
2017-01-11 10:49:56	◣	s_kunk (s_kunk@moz-9s3.d1q.255.146.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:50:57	WindowsBunnyKeyboard	fqtw: and remember, each allocator wastes a certain amount of memory via memory it mapped but hasn't allocated yet
2017-01-11 10:50:59	◣	humean (humean@moz-4tj.ek0.162.178.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 10:51:06	talchas	seanmonstar: the issue is that that doesn't return the slice you create
2017-01-11 10:51:07	WindowsBunnyKeyboard	So when you use a custom allocator, the system allocator is still there
2017-01-11 10:51:09	Naerbnic_	Just curious: Are the atomic scalar types available in core?
2017-01-11 10:51:12	WindowsBunnyKeyboard	so you're wasting twice as much space
2017-01-11 10:51:28	talchas	(also it would be into_owned rather than clone, but that's no big deal)
2017-01-11 10:51:41	WindowsBunnyKeyboard	Naerbnic_: yes
2017-01-11 10:51:44	sfackler	Naerbnic_: std::sync::atomic::{AtomicUsize, AtomicIsize};
2017-01-11 10:51:50	sfackler	other sizes exist but are currently unstable
2017-01-11 10:51:51	◥	rdrsss (rdrsss@moz-ek5.ntm.88.38.IP) has joined #rust
2017-01-11 10:51:52	sfackler	iirc
2017-01-11 10:51:55	rkruppe	core::sync::... you mean
2017-01-11 10:51:56	seanmonstar	talchas: so a let binding :)
2017-01-11 10:52:00	⚡	bholley is now known as bholley_away
2017-01-11 10:52:01	fqtw	WindowsBunnyKeyboard: isn't the system allocator overhead constant? 
2017-01-11 10:52:05	sfackler	oh sorry yeah core
2017-01-11 10:52:14	Naerbnic_	WindowsBunnyKeyboard: Well generally the amount of memory used would be proportional to the commited memory (IIRC)
2017-01-11 10:52:24	◣	rdrsss (rdrsss@moz-ek5.ntm.88.38.IP) has quit (Quit: Leaving)
2017-01-11 10:52:33	Naerbnic_	So if you don’t use an allocator, there will be a small overhead, but not half, IIUC
2017-01-11 10:52:45	fqtw	or can the system allocator be told to always free memory? 
2017-01-11 10:52:55	◥	ptalbot (ptalbot@moz-cvpth3.0c6p.cv4v.0e35.2a01.IP) has joined #rust
2017-01-11 10:53:00	talchas	seanmonstar: yeah, but that's mildly annoying if you're doing a bunch, which is what they didn't like a bunch of lines ago :P
2017-01-11 10:53:09	WindowsBunnyKeyboard	fqtw: Heap allocators map pages of memory and divy up chunks of that
2017-01-11 10:53:12	◣	dpyro (dpyro@moz-el40ti.tx.frontiernet.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 10:53:25	◥	skeuomorf (skeuomorf@moz-47b.3h9.211.156.IP) has joined #rust
2017-01-11 10:53:29	WindowsBunnyKeyboard	So there will always be bits of pages that are mapped but not allocated
2017-01-11 10:53:33	◥	dpyro (dpyro@moz-el40ti.tx.frontiernet.net) has joined #rust
2017-01-11 10:53:46	seanmonstar	talchas: macro_rules seems to exist to reduce copypasta patterns, i guess
2017-01-11 10:53:50	WindowsBunnyKeyboard	the system allocator will be used by various things like libc and system libraries, even if you don't use it yourself
2017-01-11 10:54:03	WindowsBunnyKeyboard	So the system allocator *will* always have that overhead of mapped but not allocated memory
2017-01-11 10:54:08	WindowsBunnyKeyboard	and so will any custom allocator that you use
2017-01-11 10:54:09	fqtw	WindowsBunnyKeyboard: are you saying if I allocate 1 gb with jemalloc on windows it'll allocate 2? and 1 is unusable? 
2017-01-11 10:54:13	◥	rdrsss (rdrsss@moz-ek5.ntm.88.38.IP) has joined #rust
2017-01-11 10:54:22	WindowsBunnyKeyboard	fqtw: I did not say that
2017-01-11 10:54:54	fqtw	how large would the overhead be? 
2017-01-11 10:54:59	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-11 10:55:01	◣	junqed (junqed@moz-al2.rqj.70.178.IP) has quit (A TLS packet with unexpected length was received.)
2017-01-11 10:55:08	fqtw	in terms of memory allocated 
2017-01-11 10:55:10	⚡	agibson is now known as agibson|afk
2017-01-11 10:55:14	rkruppe	depends a lot on the strategy of the allocators
2017-01-11 10:55:32	WindowsBunnyKeyboard	some allocators will have different pages mapped for different allocation sizes
2017-01-11 10:56:12	◥	SiIky (SiIky@moz-dbrsl2.5ghr.hl2k.08a0.2001.IP) has joined #rust
2017-01-11 10:56:13	◥	saati (s@moz-h8cvkq.harmless.hu) has joined #rust
2017-01-11 10:56:40	fqtw	would a good rust allocator have to be specific to different system allocators? 
2017-01-11 10:56:47	kirillkh	WindowsBunnyKeyboard: in many cases some small amount of wasted memory is acceptable for performance-oriented code
2017-01-11 10:56:54	WindowsBunnyKeyboard	kirillkh: Sure
2017-01-11 10:57:01	fqtw	to cooperate with them or predict what they do 
2017-01-11 10:57:04	WindowsBunnyKeyboard	kirillkh: Which is why Rust provides a *choice* of global allocator
2017-01-11 10:57:15	WindowsBunnyKeyboard	It just doesn't have much in the way of options yet
2017-01-11 10:57:24	WindowsBunnyKeyboard	fqtw: That doesn't make any sense
2017-01-11 10:58:05	◣	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has quit (A TLS packet with unexpected length was received.)
2017-01-11 10:58:05	kirillkh	WindowsBunnyKeyboard: then what's the point of discussing the weakness of having a custom allocator? it needs to exist
2017-01-11 10:58:18	◥	woboats (woboats@moz-8rajde.ca.comcast.net) has joined #rust
2017-01-11 10:58:28	rkruppe	kirillkh: it's another factor that influences your choice of allocator
2017-01-11 10:58:48	kirillkh	rkruppe: user's choice. Rust still has to provide the options, and right now it doesn't
2017-01-11 10:58:50	WindowsBunnyKeyboard	kirillkh: I'm just saying that having a custom allocator by default is the wrong option
2017-01-11 10:59:02	rkruppe	kirillkh: It doesn't because features take time to mature
2017-01-11 10:59:07	WindowsBunnyKeyboard	The right option is use a system allocator by default, and then have a wide variety of global allocators to choose from
2017-01-11 10:59:19	◥	ngqrl (ngqrl@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has joined #rust
2017-01-11 10:59:22	⚡	bholley_away is now known as bholley
2017-01-11 10:59:31	kirillkh	WindowsBunnyKeyboard: agreed
2017-01-11 11:00:43	◣	jethroft (jethro@moz-kot7v5.hfc.comcastbusiness.net) has quit (Quit: leaving)
2017-01-11 11:01:29	◥	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has joined #rust
2017-01-11 11:01:35	◥	espadrine (tyl@moz-l019mn.fbx.proxad.net) has joined #rust
2017-01-11 11:01:56	◣	petso (petson@moz-tr7emb.dyn.telefonica.de) has quit (Client exited)
2017-01-11 11:02:18	Pluppz	why is VecDeque not just called Deque?
2017-01-11 11:02:45	rkruppe	Pluppz: because it's based on a Vec and not on a linked list
2017-01-11 11:02:57	Pluppz	okay thanks
2017-01-11 11:03:20	◣	skeuomorf (skeuomorf@moz-47b.3h9.211.156.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 11:04:46	◥	REMqb (REMqb@moz-b7q21s.abo.wanadoo.fr) has joined #rust
2017-01-11 11:05:02	◣	SklopiS (tobias@moz-rd2dfq.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-11 11:05:14	yzarubin	talchas: Does [u8] work with HashMap or HashSet?
2017-01-11 11:05:21	◥	sleffly (sleffy@moz-j2qo25.4f2e.erii.0644.2601.IP) has joined #rust
2017-01-11 11:05:34	bascule	sfackler: zomg, it worked! :D
2017-01-11 11:05:37	bobross	WindowsBunnyKeyboard what is the system allocator on windows? is the from the C library or something using windows functions ?
2017-01-11 11:05:39	rkruppe	yzarubin: &[u8] does
2017-01-11 11:06:12	yzarubin	right, cool, ty
2017-01-11 11:06:13	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Connection closed)
2017-01-11 11:07:17	◥	alx741_ (alx741@moz-gkf.qnp.152.190.IP) has joined #rust
2017-01-11 11:07:22	◥	humean (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-11 11:07:22	iamrohit7	i have been fighting with the borrow checker for quite a while now. how to solve this? https://is.gd/78yTUd
2017-01-11 11:07:52	◥	ytain (ytain@moz-dsd9oq.lhgc.s942.f2c0.2607.IP) has joined #rust
2017-01-11 11:07:55	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-11 11:08:59	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 11:09:41	talchas	iamrohit7: so let temp = 5; x = &temp; will solve the first issue with that but not all of them
2017-01-11 11:09:55	◣	alx741 (alx741@moz-cdv.34h.152.190.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 11:10:12	talchas	the second issue is that objects are destroyed in the opposite order so temp will be gone before x, even though nothing could access through x to cause an issue
2017-01-11 11:10:13	◥	kristof (Mibbit@moz-nlsvri.rk.wavecable.com) has joined #rust
2017-01-11 11:10:26	◥	junqed (junqed@moz-al2.rqj.70.178.IP) has joined #rust
2017-01-11 11:10:48	◥	rafalm (ck@moz-n1o.975.79.79.IP) has joined #rust
2017-01-11 11:10:50	◣	woboats (woboats@moz-8rajde.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-11 11:10:58	talchas	that said, is this your actual issue or a simplification, because some common issues that give this error can be solved in ways this cannot
2017-01-11 11:12:10	dom96	hey guys, i'm trying to run one of the tokio-minihttp examples but I can't figure out how to even compile them. Any pointers to docs appreciated.
2017-01-11 11:12:50	&mbrubeck	dom96: `cargo run --example hello-world` should compile and run one
2017-01-11 11:13:15	iamrohit7	talchas: i have the exact scenario in a piece of code. i need to modify a variable and a reference to it to a new value.
2017-01-11 11:13:50	talchas	is this in a loop for a datastructure?
2017-01-11 11:13:52	iamrohit7	something like let mut k = 5; let mut ref = &k; k = (new value), ref = (ref to new value)
2017-01-11 11:13:54	dom96	mbrubeck: ahh, damn it. I even tried that but thought it was called hello_world
2017-01-11 11:14:01	iamrohit7	talchas: no
2017-01-11 11:14:24	Pluppz	using error-chain, is there some fast way to return an Error or `bail!` if an Option is None?
2017-01-11 11:15:04	talchas	if you are making a new k, can you make a new ref?
2017-01-11 11:15:18	WindowsBunnyKeyboard	bobross: HeapAlloc
2017-01-11 11:15:31	Pluppz	looking for more of a one-liner than having to use a match block
2017-01-11 11:15:35	◣	veer66 (vee@moz-ki4vtc.asianet.co.th) has quit (Ping timeout: 121 seconds)
2017-01-11 11:15:44	iamrohit7	i guess, but i don't completely understand what you're saying.
2017-01-11 11:16:02	◥	chamar (chamar@moz-fbvvki.mc.videotron.ca) has joined #rust
2017-01-11 11:16:07	bobross	WindowsBunnyKeyboard nice, that is thread local or is that a different function? 
2017-01-11 11:16:16	stjepang	Why does https://tokio.rs redirect to someone's LinkedIn profile? Is this a joke I'm not getting? :)
2017-01-11 11:16:36	◣	tyoc213 (tyoc@moz-fv4.8oo.75.184.IP) has quit (Connection closed)
2017-01-11 11:16:39	&mbrubeck	stjepang: It's not redirecting for me
2017-01-11 11:16:55	Stary	doesnt for me
2017-01-11 11:17:23	iamrohit7	talchas: the update happens inside an if block, so i can't create a new ref in that block because i need to use it outside too
2017-01-11 11:17:31	stjepang	Really weird. I guess something is messed up in my browser then.
2017-01-11 11:17:32	◣	pikajude (Jude@moz-j1fepb.bio) has left #rust ("WeeChat 1.6")
2017-01-11 11:17:39	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-11 11:17:40	◥	Ixrec (Ixrec@moz-9bf9ip.dyn.plus.net) has joined #rust
2017-01-11 11:17:52	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-11 11:17:56	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 11:17:57	talchas	iamrohit7: is there a reason you need a ref to exist the whole time anyways?
2017-01-11 11:18:15	WindowsBunnyKeyboard	bobross: HeapAlloc allocates from whatever heap you specify
2017-01-11 11:18:25	WindowsBunnyKeyboard	bobross: Normally you use GetProcessHeap to get the process global heap
2017-01-11 11:18:28	Pluppz	in a VecDeque, you can get and get_mut, but not set? I would like to alter an element by index.
2017-01-11 11:18:56	iamrohit7	talchas: it's a part of a bigger function
2017-01-11 11:19:04	talchas	Pluppz: *x.get_mut() = new;
2017-01-11 11:19:06	bobross	WindowsBunnyKeyboard got it - I've made a thread local heap allocator with it but not a global allocator
2017-01-11 11:19:12	◣	sepp2k (sepp2k@moz-69go6a.isp.uni-luebeck.de) has quit (Quit: Leaving.)
2017-01-11 11:19:14	Pluppz	thanks talchas
2017-01-11 11:19:39	◣	kzan (kzan@moz-oecg7b.res.rr.com) has quit (Connection closed)
2017-01-11 11:19:49	WindowsBunnyKeyboard	bobross: If you make a heap that you'll only use on one thread, there's a synchronized flag that you don't have to pass anymore
2017-01-11 11:19:52	◥	kzan (kzan@moz-oecg7b.res.rr.com) has joined #rust
2017-01-11 11:19:56	WindowsBunnyKeyboard	bobross: which may speed things up a small bit
2017-01-11 11:20:45	&mbrubeck	iamrohit7: Maybe something like https://is.gd/WeujNd
2017-01-11 11:21:10	bobross	WindowsBunnyKeyboard right, I remember that now - it didn't block once I used that and was in fact very fast
2017-01-11 11:21:19	&mbrubeck	Pluppz: You can also do `deque[i] = new_value;`
2017-01-11 11:21:25	◥	bennofs1 (benno@moz-dmv86e.qn0t.tnpg.c1a0.2a00.IP) has joined #rust
2017-01-11 11:21:34	Pluppz	mbrubeck: will it panic?
2017-01-11 11:21:37	&mbrubeck	Pluppz: yes
2017-01-11 11:21:51	Pluppz	hmmmm well I panic anyway :P
2017-01-11 11:21:55	Pluppz	by unwrapping
2017-01-11 11:22:52	◣	Naerbnic_ (Naerbnic@moz-ndnrq9.public.wayport.net) has quit (Client exited)
2017-01-11 11:23:12	◣	nagisa (nagisa@moz-8t068g.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2017-01-11 11:23:50	WindowsBunnyKeyboard	bobross: HEAP_NO_SERIALIZE
2017-01-11 11:24:33	◥	Devon (Mibbit@moz-qgvrhi.nh.comcast.net) has joined #rust
2017-01-11 11:24:48	Devon	Is it idiomatic/common to surround blocks of code with braces to control lifetimes? Its definitely used a lot in the book
2017-01-11 11:25:18	◣	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2017-01-11 11:25:41	WindowsBunnyKeyboard	Devon: yes
2017-01-11 11:25:45	&mbrubeck	Devon: yes, though I find in real-life code the relevant stuff is already separated into blocks (loop bodies, conditionals, etc.)
2017-01-11 11:25:49	@steveklabnik	Devon: only if you need to
2017-01-11 11:25:51	@steveklabnik	sometimes you do
2017-01-11 11:26:14	&mbrubeck	Devon: So it's slightly more common in artificial examples where you just use a block to "simulate" where a nested scope would go
2017-01-11 11:26:22	◥	TechnoCrunch (TechnoCrunc@moz-ant.ip3.100.101.IP) has joined #rust
2017-01-11 11:26:31	Devon	Thanks
2017-01-11 11:26:34	◥	supercurio (curio@moz-khkdde.cust.bredbandsbolaget.se) has joined #rust
2017-01-11 11:26:38	◣	kristof (Mibbit@moz-nlsvri.rk.wavecable.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 11:27:12	◣	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has quit (Ping timeout: 121 seconds)
2017-01-11 11:28:45	◣	stjepang (stjepang@moz-t6r2md.dynamic.amis.hr) has quit (Client exited)
2017-01-11 11:29:02	◣	humean (humean@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.5)
2017-01-11 11:29:17	◥	ubsandroid_ (ubsan@moz-jgkpi0.l9nm.lsik.fb90.2607.IP) has joined #rust
2017-01-11 11:29:59	◥	Riateche (Riateche@moz-2p4mi3.moscow.rt.ru) has joined #rust
2017-01-11 11:30:27	◣	neodc (uid170604@moz-364l18.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-11 11:30:36	Riateche	hi, what does "error: failed to find lock name of" mean in cargo build?
2017-01-11 11:30:48	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 11:31:50	◥	duncan_ (paul@moz-uo3obu.og6e.vh7e.0306.2602.IP) has joined #rust
2017-01-11 11:31:51	◣	ubsandroid (ubsan@moz-cc6.3fu.114.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 11:31:54	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-11 11:32:07	◥	Jackneill_ (Jackneill@moz-d5febd.pool.digikabel.hu) has joined #rust
2017-01-11 11:32:30	◥	hroi (hroi@moz-tih6lb.l8a6.u1sb.1448.2001.IP) has joined #rust
2017-01-11 11:32:35	◣	vulpes (vulpes@moz-bro3pq.dynamic.voo.be) has quit (Ping timeout: 121 seconds)
2017-01-11 11:33:21	◥	s_kunk (s_kunk@moz-1hb0ft.rev.sfr.net) has joined #rust
2017-01-11 11:34:11	&mbrubeck	Riateche: Looking at the source code, it seems to have something to do with an override that it can't process
2017-01-11 11:34:34	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-11 11:34:50	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 11:35:04	Riateche	mbrubeck: why can't it process it?
2017-01-11 11:35:29	&mbrubeck	Riateche: I'm not sure; I don't understand exactly what this code is doing yet.... Do you have any `paths` overrides set in a ".cargo/config" file?
2017-01-11 11:35:52	◥	snakers (nauxas@moz-3d80vh.m4ts.a75g.0640.2601.IP) has joined #rust
2017-01-11 11:36:12	◥	ai (ai@moz-q1p.l6u.172.31.IP) has joined #rust
2017-01-11 11:36:15	Riateche	mbrubeck: yes, i have, and it's also always gives me "path override for crate `...` has altered the original list of dependencies" warning
2017-01-11 11:36:16	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2017-01-11 11:36:43	sssilver	did Tokio _just_ release? I thought I had been using it for a while
2017-01-11 11:36:53	Riateche	mbrubeck: but the build worked in other cases, despite the warning
2017-01-11 11:37:19	◥	tim_____ (tim_____@moz-d0c3ev.dip0.t-ipconnect.de) has joined #rust
2017-01-11 11:37:19	carllerche	sssilver: the 0.1 stack + website was
2017-01-11 11:37:30	carllerche	sssilver: tokio-core + futures have already been on crates.io at 0.1
2017-01-11 11:37:35	carllerche	but we released tokio-proto + -service
2017-01-11 11:37:46	sssilver	carllerche ahh that makes sense
2017-01-11 11:38:02	sssilver	I was like "lolwut did I juts get warped to a parallel universe where Tokio didn't exist until today??"
2017-01-11 11:38:03	◥	fsaintjacques (Mibbit@moz-mm6.2b9.35.70.IP) has joined #rust
2017-01-11 11:38:08	◣	pcwalton (pcwalton@moz-vhk0rb.hfc.comcastbusiness.net) has quit (Client exited)
2017-01-11 11:38:27	sssilver	it was awkward because my colleague at work forwarded me the release announcement coz he knew I was into Rust in general
2017-01-11 11:38:32	sssilver	and I was like yeah I've been using it for a while
2017-01-11 11:38:37	sssilver	and he was like errr it JUST got released
2017-01-11 11:38:42	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2017-01-11 11:38:43	sssilver	and I was like "errr awkward"
2017-01-11 11:39:30	fsaintjacques	would anyone be able to explain why explicit typing of `let` make this snippet work?
2017-01-11 11:39:32	fsaintjacques	https://play.rust-lang.org/?gist=36ede0193a9d4fc4bf3a29d1d4f928f6&version=stable&backtrace=0
2017-01-11 11:39:36	Riateche	mbrubeck: I also don't understand how am I supposed to use [replace] instead of cargo overrides, as the warning suggests
2017-01-11 11:39:46	◣	Hoff (kvirc@moz-s2sqq6.dhcp.inet.fi) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2017-01-11 11:40:00	Riateche	mbrubeck: [replace] goes in Cargo.toml and in the repository, so it's clearly not what I want for local path overrides
2017-01-11 11:40:01	johannh	woodworker: http://www.newrustacean.com/show_notes/crates_you_should_know/_1/
2017-01-11 11:40:39	◥	chandlerbing (chandlerbin@moz-l5fqmj.dynamic.ziggo.nl) has joined #rust
2017-01-11 11:40:43	talchas	fsaintjacques: it causes rustc to make them reborrows rather than moves
2017-01-11 11:40:59	talchas	(as if if i % 2 == 0 { &mut *x } else { &mut *y })
2017-01-11 11:41:10	◥	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has joined #rust
2017-01-11 11:41:17	◣	Devon (Mibbit@moz-qgvrhi.nh.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 11:41:22	talchas	now, I'm not sure /why/ it does that
2017-01-11 11:43:05	◣	ghisvail___ (ghisvail@moz-jb7aoh.ic.ac.uk) has quit (Client exited)
2017-01-11 11:43:06	◥	FlibberTGibbet (David@moz-9vh0a1.idnet.net) has joined #rust
2017-01-11 11:44:00	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-11 11:44:04	fsaintjacques	can't the compiler infer this?
2017-01-11 11:44:13	fsaintjacques	https://github.com/rust-lang/rust/issues/25899
2017-01-11 11:44:16	fsaintjacques	https://github.com/rust-lang/rust/issues/35919
2017-01-11 11:44:17	◥	vulpes (vulpes@moz-mlao6l.dcb1.8e10.2788.2a02.IP) has joined #rust
2017-01-11 11:44:54	◣	FlibberTGibbet (David@moz-9vh0a1.idnet.net) has quit (Connection closed)
2017-01-11 11:45:04	◣	lucian (lucian@moz-iuo.htl.74.194.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 11:46:15	◥	FlibberTGibbet (David@moz-9vh0a1.idnet.net) has joined #rust
2017-01-11 11:48:46	◥	jethroft (jethro@moz-kot7v5.hfc.comcastbusiness.net) has joined #rust
2017-01-11 11:49:10	jethroft	Why do I get "only traits defined in the current crate can be implemented for a type parameter" here? https://is.gd/fsrDef
2017-01-11 11:49:21	jethroft	am I not doing exactly that?
2017-01-11 11:50:39	&mbrubeck	jethroft: Some type `T` from outside your crate could impl both `Send` and `MyTrait`, causing a conflict
2017-01-11 11:50:48	jethroft	oh. hmm. right
2017-01-11 11:51:22	◥	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 11:51:48	◥	davs_ (davs@moz-h96idq.pool.digicable.sk) has joined #rust
2017-01-11 11:53:35	◣	ubsandroid_ (ubsan@moz-jgkpi0.l9nm.lsik.fb90.2607.IP) has quit (Quit: <3)
2017-01-11 11:53:49	◥	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has joined #rust
2017-01-11 11:53:53	◥	sargas (sargas@moz-863roc.hfc.comcastbusiness.net) has joined #rust
2017-01-11 11:54:26	◣	davs (davs@moz-ni1ugg.bratislava.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-11 11:55:04	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-11 11:56:16	◥	petso (petson@moz-tr7emb.dyn.telefonica.de) has joined #rust
2017-01-11 11:59:10	◣	davs_ (davs@moz-h96idq.pool.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-11 11:59:22	◣	Riateche (Riateche@moz-2p4mi3.moscow.rt.ru) has quit (Quit: Leaving)
2017-01-11 12:00:48	◣	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 12:01:05	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-11 12:01:26	dom96	Is there any way to force tokio to use only a single thread?
2017-01-11 12:01:58	ubsan	kirillkh: hi
2017-01-11 12:02:08	ubsan	I was asleep
2017-01-11 12:02:09	@steveklabnik	dom96: an event loop already uses a singel thread
2017-01-11 12:02:19	ubsan	kirillkh: it's probably safe
2017-01-11 12:02:34	ubsan	but transmute on pointers is dangerous and should not be used
2017-01-11 12:02:46	ubsan	(Vec is a wrapper around a pointer, so no no)
2017-01-11 12:02:56	ubsan	Vec::from_raw_parts
2017-01-11 12:03:29	◣	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Quit: bye)
2017-01-11 12:03:43	ubsan	!playbot
2017-01-11 12:03:43	+rustbot	is a Rust “interpreter” which runs your code through a template that’s essentially `println!("{:?}", { «input» })`. See also playbot-mini which executes whole programs. Execute with `playbot: <code>`. Owned by a.crichto.
2017-01-11 12:03:54	ubsan	acrichto: playbot is down on #rust
2017-01-11 12:04:01	◥	LLBlumire (LLBlumire@moz-n9v987.aqhk.68od.0388.2a01.IP) has joined #rust
2017-01-11 12:04:07	◥	caconym (caconym@moz-klghvh.wa.comcast.net) has joined #rust
2017-01-11 12:04:13	◥	sepp2k (Sepp2k@moz-9kv9rr.dyn.telefonica.de) has joined #rust
2017-01-11 12:05:00	◥	grepherd (grepherd@moz-eal2t9.dyn.plus.net) has joined #rust
2017-01-11 12:05:02	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 12:05:09	◣	sargas (sargas@moz-863roc.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2017-01-11 12:05:17	dom96	steveklabnik: this appears to be spawning additional threads https://github.com/tokio-rs/tokio-proto/blob/master/src/tcp_server.rs#L99
2017-01-11 12:05:26	WindowsBunnyKeyboard	steveklabnik: an IOCP could totally use multiple threads though
2017-01-11 12:05:45	◣	jld (jld@moz-onnk26.xlerb.net) has quit (Ping timeout: 121 seconds)
2017-01-11 12:06:02	@steveklabnik	dom96: i mean, sure, you can write arbitrary code, so you can do anything. but tokio itself is currently one thread per event loop, which is what i thought you were talking about
2017-01-11 12:06:05	@steveklabnik	WindowsBunnyKeyboard: :)
2017-01-11 12:06:05	◥	steveire (quassel@moz-ljp807.jluj.36ij.8084.2a02.IP) has joined #rust
2017-01-11 12:06:15	WindowsBunnyKeyboard	It's just that current async IO designs in Rust are limited by non-windows :(
2017-01-11 12:06:38	◥	davs (davs@moz-fhfed8.pool.digicable.sk) has joined #rust
2017-01-11 12:07:06	◣	rkruppe (chatzilla@moz-3nj.rnu.131.95.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 12:07:08	◥	rudy (rustedwolf@moz-9bd5uq.dynamic.chello.pl) has joined #rust
2017-01-11 12:07:09	talchas	clearly you/someone should write something that abstracts over libaio and windows iocp :P
2017-01-11 12:07:23	talchas	(I don't know if bsd and such have anything usable in that space)
2017-01-11 12:07:42	talchas	(and I don't actually have any idea how good io_submit et al actually are)
2017-01-11 12:07:54	Ralith	WindowsBunnyKeyboard: there's nothing stopping you from using multiple threads if you want to...
2017-01-11 12:08:03	◥	yulia (uid205511@moz-2oj2kd.ealing.irccloud.com) has joined #rust
2017-01-11 12:08:15	Ralith	it's not clear that you have any substantive criticism other than "mio/tokio are not literally iocp"
2017-01-11 12:08:58	Ralith	talchas: libaio is not appropriate for general use
2017-01-11 12:09:07	◣	petso (petson@moz-tr7emb.dyn.telefonica.de) has quit (Client exited)
2017-01-11 12:09:24	◥	Riateche (Riateche@moz-2egmgl.dral.67ba.2168.2a02.IP) has joined #rust
2017-01-11 12:09:26	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 12:09:48	◥	humean (humean@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-11 12:09:51	Ralith	there are many gotchas like "used the wrong filesystem" or "didn't read into a correctly aligned buffer"
2017-01-11 12:10:16	◥	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has joined #rust
2017-01-11 12:10:28	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 12:10:51	◣	humean (humean@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-11 12:11:04	Ralith	I think the BSD story is actually pretty good in comparison, but I'm not familiar with the details
2017-01-11 12:11:28	◣	oli_obk (smuxi@moz-ppe75h.hsi6.kabel-badenwuerttemberg.de) has quit (Connection closed)
2017-01-11 12:11:29	◥	mrutter (mrutter@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-11 12:11:33	◥	petso (petson@moz-tr7emb.dyn.telefonica.de) has joined #rust
2017-01-11 12:11:42	◥	davs_ (davs@moz-tc8r0n.bratislava.digicable.sk) has joined #rust
2017-01-11 12:11:57	◥	Trangar (Trangar@moz-scf.k7b.97.185.IP) has joined #rust
2017-01-11 12:12:22	◣	petso (petson@moz-tr7emb.dyn.telefonica.de) has left #rust
2017-01-11 12:12:36	◥	nhlfr (nhlfr@moz-pds.37e.62.178.IP) has joined #rust
2017-01-11 12:12:42	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-11 12:12:49	◣	nhlfr (nhlfr@moz-pds.37e.62.178.IP) has quit (Quit: WeeChat 1.5)
2017-01-11 12:12:57	◣	davs (davs@moz-fhfed8.pool.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-11 12:13:41	◥	nhlfr (nhlfr@moz-pds.37e.62.178.IP) has joined #rust
2017-01-11 12:13:44	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-11 12:13:55	◣	mrutter (mrutter@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-11 12:14:00	◥	mrutter (mrutter@moz-sl2fi3.cable.virginm.net) has joined #rust
2017-01-11 12:14:30	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 12:14:49	◥	steveire_ (quassel@moz-ljp807.jluj.36ij.8084.2a02.IP) has joined #rust
2017-01-11 12:14:50	WindowsBunnyKeyboard	Ralith: There is totally something stopping you in mio's API from being able to have multiple threads getting events from a single event loop
2017-01-11 12:15:31	◥	Kreest_ (Kreest@moz-g2bnqo.globonet.hu) has joined #rust
2017-01-11 12:16:09	◣	steveire_ (quassel@moz-ljp807.jluj.36ij.8084.2a02.IP) has quit (Connection closed)
2017-01-11 12:16:29	Ralith	if only we had a way for threads to communicate with eachother
2017-01-11 12:16:31	◣	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has quit (Connection closed)
2017-01-11 12:16:34	◥	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has joined #rust
2017-01-11 12:16:47	◥	pcwalton (pcwalton@moz-l8ebtf.sfo1.mozilla.com) has joined #rust
2017-01-11 12:16:47	⚡	Mode #rust [+ao pcwalton pcwalton] by ChanServ
2017-01-11 12:17:26	WindowsBunnyKeyboard	Ralith: It still limits your throughput
2017-01-11 12:17:30	◣	ngqrl (ngqrl@moz-vqjugs.cp89.ofd7.0e35.2a01.IP) has quit (Quit: Bye!)
2017-01-11 12:17:51	Ralith	do you have a benchmark?
2017-01-11 12:18:05	◣	bluss (bluss@moz-9sooj3.dynamic.simnet.is) has quit (Ping timeout: 121 seconds)
2017-01-11 12:18:27	◣	Kreest__ (Kreest@moz-6lvq4a.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2017-01-11 12:18:42	◥	nicoch (nicoch@moz-9qvk8k.2utt.76f9.0e34.2a01.IP) has joined #rust
2017-01-11 12:19:35	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-11 12:20:02	◣	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has quit (Connection closed)
2017-01-11 12:20:44	Sergio	Is the tokio site completely busted on mobile?
2017-01-11 12:20:53	Sergio	Or is it just me?
2017-01-11 12:20:58	◥	meh (meh@moz-86tddh.nat.rutgers.edu) has joined #rust
2017-01-11 12:20:59	@steveklabnik	there's an open issue that's like 'investigate mobile'
2017-01-11 12:20:59	@steveklabnik	so
2017-01-11 12:21:09	Sergio	:'(
2017-01-11 12:21:11	◥	simonoram (simonoram@moz-73kk99.cable.virginm.net) has joined #rust
2017-01-11 12:21:20	Sergio	That's a rather unfortunate afterthought. 
2017-01-11 12:21:35	◣	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has quit (Connection closed)
2017-01-11 12:21:36	◣	nicoch (nicoch@moz-9qvk8k.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2017-01-11 12:21:39	◥	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has joined #rust
2017-01-11 12:21:43	Sergio	Given that something like 70% of the visits are likely to be from a smartphone or tablet. 
2017-01-11 12:22:12	Sergio	I mean, for the launch, from HN and such. 
2017-01-11 12:22:31	@steveklabnik	what's that saying? if you're not embarassed by parts of your launch, you've shipped too late
2017-01-11 12:22:37	◣	caconym (caconym@moz-klghvh.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-11 12:23:03	Sergio	That sounds like sophistry to me ;)
2017-01-11 12:23:14	◣	brson (brson@moz-j1n.kmu.58.172.IP) has quit (Quit: leaving)
2017-01-11 12:23:49	◥	bjz (bjz@moz-puppgq.tpgi.com.au) has joined #rust
2017-01-11 12:24:15	◣	Riateche (Riateche@moz-2egmgl.dral.67ba.2168.2a02.IP) has quit (Quit: Leaving)
2017-01-11 12:24:40	Pluppz	seems like I always forget how to do this .. https://bpaste.net/show/14076d57ede3 I want to iterate over mut refs and match to see if it is Some (the elements are Option)
2017-01-11 12:25:32	staticassert	I've been unable to view the tokio site unfortunately :[ maybe later when I'm on a different network
2017-01-11 12:25:34	slomo	if i have a struct that contains a reference, and implements Clone. is there a way to implement Clone in a way that the references lifetime is not carried over to the clone? (i.e. by having the reference stored in a Cow and doing into_owned() on it inside clone())?
2017-01-11 12:25:40	nalexander	What's the idiomatic way to match, say, `Ok("literal".into())` of type `Option<String>`?
2017-01-11 12:25:50	@steveklabnik	nalexander: you have to use if
2017-01-11 12:25:55	@steveklabnik	Ok(s) if s == "literal"
2017-01-11 12:26:03	◥	llambda (Mibbit@moz-6ma.301.186.208.IP) has joined #rust
2017-01-11 12:26:05	nalexander	Wow, this is ... suboptimal.
2017-01-11 12:26:09	nalexander	But thanks steveklabnik
2017-01-11 12:26:17	@steveklabnik	eh
2017-01-11 12:26:21	@steveklabnik	it is and it isn't :)
2017-01-11 12:26:22	pingveno	Isn't it Ok(ref s) if s == "literal"?
2017-01-11 12:26:30	@steveklabnik	pingveno: possibly yeah, if you don't want to move out
2017-01-11 12:27:23	llambda	how do i compile examples? e.g. https://github.com/spicavigo/kafka-rust/tree/master/examples
2017-01-11 12:27:50	◣	blackgoat (blackgoat@moz-pme.0mb.201.119.IP) has quit (Quit: WeeChat 1.5)
2017-01-11 12:27:50	pingveno	cargo build --example
2017-01-11 12:27:55	@steveklabnik	also
2017-01-11 12:27:57	@steveklabnik	cargo test will compile them
2017-01-11 12:27:58	pingveno	cargo build --example <foo>
2017-01-11 12:28:13	llambda	woot, thanks!
2017-01-11 12:28:40	◥	djcb (user@moz-a1m7sq.elisa-mobile.fi) has joined #rust
2017-01-11 12:28:43	◥	jld (jld@moz-onnk26.xlerb.net) has joined #rust
2017-01-11 12:28:56	pingveno	llambda: Also works as: cargo run --example <foo>
2017-01-11 12:31:06	stephaneyfx	nalexander, you could do that too: https://is.gd/HWGJz3
2017-01-11 12:31:54	◥	Naerbnic_ (Naerbnic@moz-ndnrq9.public.wayport.net) has joined #rust
2017-01-11 12:32:16	Pluppz	I get this error https://bpaste.net/show/e1a9e5829124
2017-01-11 12:32:23	◣	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-11 12:32:53	◣	eazar001 (ebrahim@moz-6luan8.hutj.9gq1.0304.2602.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 12:33:47	◥	mib_ug6trv (Mibbit@moz-m2momf.dynamic.ziggo.nl) has joined #rust
2017-01-11 12:33:53	◣	mib_ug6trv (Mibbit@moz-m2momf.dynamic.ziggo.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 12:34:18	◣	fsaintjacques (Mibbit@moz-mm6.2b9.35.70.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 12:35:51	stephaneyfx	Pluppz, https://is.gd/Gh3QfA
2017-01-11 12:36:10	Pluppz	I fixed it https://bpaste.net/show/a0cb2cfb351c but why do I have to have &mut on the outside and ref mut on the inside?
2017-01-11 12:36:51	◥	tm (tom@moz-4bd.9to.255.49.IP) has joined #rust
2017-01-11 12:37:10	Pluppz	oh I think I kinda understand
2017-01-11 12:37:39	LLBlumire	&mut destructures the pattern, essentially removing the reference
2017-01-11 12:37:40	stephaneyfx	Pluppz, the &mut is part of the destructuring as you're matching a mutable reference
2017-01-11 12:37:41	Pluppz	&mut is just a part of the pattern, as the LHS is indeed &mut. And ref mut means that the new variable should be a &mut to what's inside. 
2017-01-11 12:37:44	LLBlumire	you don't want to move, so ref mut adds it back in
2017-01-11 12:38:35	Sergio	!paste
2017-01-11 12:38:35	+rustbot	Paste large text at https://paste.rs/, or code at https://play.rust-lang.org/ and shorten
2017-01-11 12:38:55	◥	aep (aep@moz-htb.j4r.120.37.IP) has joined #rust
2017-01-11 12:38:57	◣	Jesin (Jesin@moz-a58euv.fios.verizon.net) has quit (Quit: Leaving)
2017-01-11 12:39:03	◥	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 12:39:04	◣	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has quit (Connection closed)
2017-01-11 12:39:05	◥	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 12:40:15	◥	mxmz (herb@moz-oph.qbr.88.219.IP) has joined #rust
2017-01-11 12:41:07	◥	erdos (Mibbit@moz-3cn.7vj.212.150.IP) has joined #rust
2017-01-11 12:41:20	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 12:41:49	◥	Coder206 (ptrottier@moz-eh3eo4.dsl.bell.ca) has joined #rust
2017-01-11 12:42:27	◣	Havvy (Havvy@moz-924fff.ptld.qwest.net) has quit (Connection closed)
2017-01-11 12:42:30	◣	aep (aep@moz-htb.j4r.120.37.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 12:43:27	◥	bluss (bluss@moz-9sooj3.dynamic.simnet.is) has joined #rust
2017-01-11 12:43:37	erdos	Does tokio or futures-rs have a good way to run an iterable of futures in parallel? I've seen join(), but that proves fairly nasty when applying to an unknown number of futures (hence why things like join5(), etc. are also not good options). Similarly, join_all() isn't a great choice because it runs the futures sequentially.
2017-01-11 12:43:44	erdos	Really, I'm looking for something like http://bluebirdjs.com/docs/api/promise.all.html
2017-01-11 12:44:00	erdos	If it doesn't exist already, I'll look into coding it up myself
2017-01-11 12:44:12	◥	jrozner_ (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-11 12:44:18	erdos	But I figured I'd first check to see if the wheel had already been invented
2017-01-11 12:44:23	carllerche	@erdos I'm *pretty* sure that join_all doesn't actually run sequentially
2017-01-11 12:44:28	◣	madmalik (uid13697@moz-mac7ts.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-11 12:44:36	carllerche	and that it is just an outdated doc
2017-01-11 12:45:02	carllerche	erdos: see this: https://github.com/alexcrichton/futures-rs/commit/558f736e80ce22c616914cab3dbd330b61f4c2ef
2017-01-11 12:45:07	◥	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has joined #rust
2017-01-11 12:45:34	erdos	carllerche: Ah, interesting
2017-01-11 12:45:37	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-11 12:45:38	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-11 12:45:38	Ixrec	the docs I see just say "The returned future will drive execution for all of its underlying futures" without specifying sequential or parallel
2017-01-11 12:45:44	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 12:45:44	Ixrec	ah
2017-01-11 12:45:58	erdos	Yeah - I think Google links to an old version before the current version
2017-01-11 12:47:21	erdos	Or maybe the docs were just updated, since I can't seem to find the old version in my history
2017-01-11 12:47:26	erdos	Either way, solves my problem. Thanks!
2017-01-11 12:47:37	◥	wallacoloo_____ (colin@moz-2ps3tb.dhcp4.washington.edu) has joined #rust
2017-01-11 12:49:26	Ixrec	https://github.com/alexcrichton/futures-rs/blob/master/src/future/join_all.rs yeah, the actual code seems to poll all of the futures that haven't already finished on each poll() call
2017-01-11 12:51:12	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-11 12:51:29	erdos	Yeah, not sure why the version I saw ~2 hours ago said sequential
2017-01-11 12:51:37	◣	kimundi (kimundi@moz-nj9oht.b3iv.ofag.57bc.2002.IP) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2017-01-11 12:52:17	◣	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has quit (Connection closed)
2017-01-11 12:52:28	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 12:52:43	◥	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2017-01-11 12:52:47	Phrohdoh	Has anyone here used the `cargo` crate as a lib in a project of theirs?
2017-01-11 12:53:01	Phrohdoh	Or have a pretty good understanding of the cargo code.
2017-01-11 12:53:28	◥	undeadleech (undeadleech@moz-utv8h6.dip0.t-ipconnect.de) has joined #rust
2017-01-11 12:53:39	◣	waffles (wafflespean@moz-f27.9u1.23.1.IP) has quit (Quit: C'yall later...)
2017-01-11 12:53:42	◥	ur5us (ur5us@moz-auuc0l.ihug.co.nz) has joined #rust
2017-01-11 12:53:53	◣	holgarB (holger@moz-ivdssg.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-11 12:54:11	◣	chandlerbing (chandlerbin@moz-l5fqmj.dynamic.ziggo.nl) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2017-01-11 12:54:20	◥	Devon (Mibbit@moz-qgvrhi.nh.comcast.net) has joined #rust
2017-01-11 12:55:38	◣	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has quit (Connection closed)
2017-01-11 12:55:41	◥	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has joined #rust
2017-01-11 12:55:44	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-11 12:56:10	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 12:56:32	◥	kimundi (kimundi@moz-nj9oht.b3iv.ofag.57bc.2002.IP) has joined #rust
2017-01-11 12:56:40	◣	jrozner_ (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 12:56:45	◣	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 12:56:48	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 12:57:13	◣	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has quit (Connection closed)
2017-01-11 12:57:50	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-11 12:58:50	◣	Chmmr (Tanmatra@moz-jdmcfg.domolink.tula.net) has quit (Quit: Leaving)
2017-01-11 12:58:54	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 12:59:25	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 12:59:46	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:00:54	◥	rest11 (Mibbit@moz-j7r.9l0.232.109.IP) has joined #rust
2017-01-11 13:01:24	◣	rest11 (Mibbit@moz-j7r.9l0.232.109.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 13:01:33	◣	xliiv (xliiv@moz-b6n0ql.icpnet.pl) has quit (Ping timeout: 121 seconds)
2017-01-11 13:02:23	◣	Douman (Douman@moz-0acsol.dynamic.mts-nn.ru) has quit (Quit: )
2017-01-11 13:02:23	◣	FlibberTGibbet (David@moz-9vh0a1.idnet.net) has quit (Quit: Leaving)
2017-01-11 13:03:27	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:04:44	◣	erdos (Mibbit@moz-3cn.7vj.212.150.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 13:04:51	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:04:53	◥	erdos (wil@moz-p5vppj.j3m1.qsh4.0102.2620.IP) has joined #rust
2017-01-11 13:05:49	◥	chandlerbing (chandlerbin@moz-l5fqmj.dynamic.ziggo.nl) has joined #rust
2017-01-11 13:05:53	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-11 13:08:14	◥	mib_3j3v6n (Mibbit@moz-d23.e78.98.156.IP) has joined #rust
2017-01-11 13:08:34	Phrohdoh	Anyone?
2017-01-11 13:08:51	badboy	maybe just ask a question regarding a problem you face
2017-01-11 13:09:14	Phrohdoh	I've asked this question about 5 times and never gotten a response, so trying to coax someone
2017-01-11 13:09:24	badboy	I did not know that
2017-01-11 13:09:38	sfackler	Phrohdoh: I have used libcargo before
2017-01-11 13:09:43	badboy	in that case it might be a good idea to open an issue on the cargo repo so maybe one of the devs can help out
2017-01-11 13:09:45	Phrohdoh	basically: https://gist.github.com/Phrohdoh/5957ad164f9aeb5f7d50001e7a30777d
2017-01-11 13:09:53	⚡	bholley is now known as bholley_away
2017-01-11 13:09:57	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:10:17	◣	muskox (muskox@moz-8mbs17.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 13:10:27	sfackler	Phrohdoh: I think the CompileOptions::spec field controls the package list
2017-01-11 13:10:39	◥	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has joined #rust
2017-01-11 13:10:50	Phrohdoh	So here's the fun bit of that:
2017-01-11 13:10:55	Phrohdoh	I've also tried with:             spec: &["file:///Users/thill/projects/play/rust/sentinel-cli#sentinel:0.1.0".into()],
2017-01-11 13:11:02	Phrohdoh	And that _still_ ran all of the tests
2017-01-11 13:11:19	◣	mib_3j3v6n (Mibbit@moz-d23.e78.98.156.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 13:11:27	Phrohdoh	I got that string via `cargo pkgid`
2017-01-11 13:11:35	◥	degausser (Thunderbird@moz-midec3.dyn.plus.net) has joined #rust
2017-01-11 13:11:46	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 13:11:49	sfackler	the cargo test command does something simpler to compile: https://github.com/rust-lang/cargo/blob/master/src/cargo/ops/cargo_test.rs#L67
2017-01-11 13:11:51	Phrohdoh	Of course I'd rather get that via some libcargo function, but hardcoded ^ for now
2017-01-11 13:12:08	Phrohdoh	It does... but I am building a TestOptions struct
2017-01-11 13:12:13	◣	chandlerbing (chandlerbin@moz-l5fqmj.dynamic.ziggo.nl) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2017-01-11 13:12:30	sfackler	https://github.com/rust-lang/cargo/blob/master/src/bin/test.rs#L119
2017-01-11 13:12:43	sfackler	the package flag is going to look for "sentinel:0.1.0"
2017-01-11 13:12:45	sfackler	not the full path
2017-01-11 13:13:21	Phrohdoh	no dice
2017-01-11 13:13:24	Phrohdoh	that still ran all the tests
2017-01-11 13:13:24	Pluppz	another small problem https://bpaste.net/show/a5208108c6c5 self.send_windows is a VecDeque<Option<SendWindow>>. I want to return that first SendWindow's  `seq` field. I am sure that it should be Some; that's why I unwrap it.
2017-01-11 13:13:50	talchas	.as_ref().unwrap()
2017-01-11 13:13:53	Phrohdoh	I'll cargo clean to be sure and retry.
2017-01-11 13:14:27	Phrohdoh	sfackler: How would I go about getting that portion of the pkgid given just a path to a manifest?
2017-01-11 13:14:37	◥	rakm (rakm@moz-prc.jsh.115.17.IP) has joined #rust
2017-01-11 13:14:48	Phrohdoh	Or a Workspace, I suppose
2017-01-11 13:15:23	sfackler	which one do you want to build?
2017-01-11 13:16:02	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:16:22	Phrohdoh	Well essentially I want to run `format!("cargo test --manifest-path={}", my_path_buf)`, but via ::ops etc
2017-01-11 13:16:55	Phrohdoh	Because my cli tool can take in the path to a manifest (technically a directory, but a manifest path is resolved from the path given)
2017-01-11 13:17:17	sfackler	when you say it ran "all" the tests, what do you mean by that?
2017-01-11 13:17:29	sfackler	all tests for the entire dependency graph?
2017-01-11 13:17:31	Phrohdoh	The tests of my crate's deps and their deps
2017-01-11 13:17:35	Phrohdoh	yes
2017-01-11 13:18:07	◣	Romster (Romster@moz-4g83e8.rev.eftel.com) has quit (Ping timeout: 121 seconds)
2017-01-11 13:18:19	◣	stephaneyfx (stephaneyfx@moz-bflle1.blocka-151.stargate.ca) has quit (Quit: Leaving)
2017-01-11 13:18:20	sfackler	dunno then. I'd probably just take the source of https://github.com/rust-lang/cargo/blob/master/src/bin/test.rs and strip out everything that you don't need
2017-01-11 13:18:32	◥	Romster (Romster@moz-4g83e8.rev.eftel.com) has joined #rust
2017-01-11 13:18:39	◥	euclio (euclio@moz-a1t.e0s.78.208.IP) has joined #rust
2017-01-11 13:18:52	◥	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-11 13:18:55	◥	jrozner_ (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-11 13:19:01	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 13:19:23	euclio	is there a way to use a trait in a macro without requiring the users of the macro to import it?
2017-01-11 13:19:43	◣	Ferreus (ferreus@moz-hkkdms.c13d.1nu3.2028.2a02.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 13:19:48	Ixrec	can the macro import it?
2017-01-11 13:20:06	◣	Naerbnic_ (Naerbnic@moz-ndnrq9.public.wayport.net) has quit (Client exited)
2017-01-11 13:20:11	◣	erdos (wil@moz-p5vppj.j3m1.qsh4.0102.2620.IP) has left #rust ("Thanks!")
2017-01-11 13:20:13	◣	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 13:20:27	euclio	I've tried that, but I'm getting errors saying the trait isn't imported
2017-01-11 13:20:38	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-11 13:20:45	euclio	I'm doing somethine like `pub extern crate serde; use $crate::serde::Serialize;`
2017-01-11 13:21:18	◥	UberLambda (uber@moz-e0kgdg.cust.vodafonedsl.it) has joined #rust
2017-01-11 13:21:22	misdreavus	is the pub extern crate outside the macro?
2017-01-11 13:21:39	euclio	no
2017-01-11 13:21:48	◣	Kreest_ (Kreest@moz-g2bnqo.globonet.hu) has quit (Connection closed)
2017-01-11 13:22:03	◣	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:22:19	misdreavus	either put the pub extern crate at your own crate root, or make the use path "self::serde::Serialize"
2017-01-11 13:23:00	misdreavus	that itself might not even work, depending on how the crate/use paths interact
2017-01-11 13:23:05	phaazon	 /win 11
2017-01-11 13:23:10	phaazon	oops sorry
2017-01-11 13:23:21	misdreavus	but exporting serde at your own crate root will work
2017-01-11 13:23:48	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-11 13:24:05	◣	meh (meh@moz-86tddh.nat.rutgers.edu) has quit (Ping timeout: 121 seconds)
2017-01-11 13:24:06	◣	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Ping timeout: 121 seconds)
2017-01-11 13:24:18	◣	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has quit (Connection closed)
2017-01-11 13:24:21	◥	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has joined #rust
2017-01-11 13:24:28	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:25:24	◣	bjz (bjz@moz-puppgq.tpgi.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 13:25:51	euclio	@misdreavus, that did it. Thanks!
2017-01-11 13:25:57	Hail_Spacecake	is there a rust builtin function
2017-01-11 13:25:58	misdreavus	(^^)b
2017-01-11 13:26:05	Hail_Spacecake	that will do something sort of like .expect()
2017-01-11 13:26:14	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Connection closed)
2017-01-11 13:26:18	⚡	bholley_away is now known as bholley
2017-01-11 13:26:24	Hail_Spacecake	but have some kind of reference to the underlying Err(e), so I can customize the message based on e?
2017-01-11 13:26:36	◥	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-11 13:26:40	nalexander	Could somebody give me keywords to search for documentation about turning Result into Option and vice-versa?
2017-01-11 13:26:42	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 13:26:44	Pluppz	when indexing a VecDeque, is it possible to return an Error (using error-chain) rather than panicing?
2017-01-11 13:26:51	Hail_Spacecake	nalexander: https://doc.rust-lang.org/std/option/enum.Option.html
2017-01-11 13:26:58	Hail_Spacecake	search on the page for "-> Result"
2017-01-11 13:27:09	nalexander	Hail_Spacecake: many thanks.
2017-01-11 13:27:12	misdreavus	nalexander: ok() is a Result -> Option method
2017-01-11 13:27:14	◥	madmalik (uid13697@moz-mac7ts.stonehaven.irccloud.com) has joined #rust
2017-01-11 13:27:15	Hail_Spacecake	you could also go to the Result page and search for "-> Option"
2017-01-11 13:27:18	misdreavus	i think err() is the other one
2017-01-11 13:27:29	nalexander	I would never have guessed "ok_or"
2017-01-11 13:27:34	misdreavus	and Option has ok_or
2017-01-11 13:27:49	Hail_Spacecake	yeah some of the specific names of teh Option <-> Result functions are a bit unintutive
2017-01-11 13:27:52	Hail_Spacecake	in my opinion
2017-01-11 13:28:01	misdreavus	don't remember what the "Some -> Err" one is
2017-01-11 13:28:07	Hail_Spacecake	honestly usually there's just one ok choice among several roughly equally ok choices
2017-01-11 13:28:09	Ixrec	Hail_Spacecake: so...you'd want something like Ok(...).sort_of_expect(...) to be a no-op but Err(...).sort_of_expect(|e| ...) to run a closure mapping the err to whatever and then "throw" what it returns?
2017-01-11 13:28:12	Hail_Spacecake	but you still have to remember
2017-01-11 13:28:16	◥	kristof (Mibbit@moz-nlsvri.rk.wavecable.com) has joined #rust
2017-01-11 13:28:26	Hail_Spacecake	Ixrec: yeah, basically
2017-01-11 13:28:30	Ixrec	I think doing map_err() followed by expect() might accomplish that?
2017-01-11 13:28:37	Hail_Spacecake	well, no, not a no-op, it should unwrap the Ok
2017-01-11 13:28:43	◣	Phrohdoh (Phrohdoh@moz-nv0.v7o.34.66.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-11 13:28:44	◥	gvandere_ (gvanderest@moz-5fpue6.ok.shawcable.net) has joined #rust
2017-01-11 13:28:46	Hail_Spacecake	bascially waht I'm trying to do is avoid ahving an explicit match statement
2017-01-11 13:28:58	Hail_Spacecake	when I want to print an error message for an Err(e), but make the exact text custom to that e
2017-01-11 13:29:04	◣	Psilidae (Psilidae@moz-kng1rg.at.cox.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:29:05	◣	gvanderest (gvanderest@moz-5fpue6.ok.shawcable.net) has quit (Connection closed)
2017-01-11 13:29:17	Hail_Spacecake	map_err might do that I guess
2017-01-11 13:29:30	Hail_Spacecake	map_err(|e| <string based on e>).unwrap()
2017-01-11 13:29:35	Ixrec	yeah
2017-01-11 13:29:38	Hail_Spacecake	because after map_err the type is Result<T, str>
2017-01-11 13:29:42	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-11 13:29:49	Hail_Spacecake	yeah I bet that would work
2017-01-11 13:30:08	Hail_Spacecake	maybe there's a reason to combine those two calls in a single convenience function
2017-01-11 13:30:12	Hail_Spacecake	or maybe it's not worth it
2017-01-11 13:30:15	Ixrec	oh wait
2017-01-11 13:30:17	Ixrec	even better: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or_else
2017-01-11 13:30:17	kazagistar	bad.unwrap_or(|e| { custom handling; panic!() })
2017-01-11 13:30:19	◥	skeuomorf (skeuomorf@moz-47b.3h9.211.156.IP) has joined #rust
2017-01-11 13:30:23	Hail_Spacecake	you could imagine adding a bunch of little convenience functions like that to std
2017-01-11 13:30:34	Ixrec	unwrap_or takes just a value, unwrap_or_else takes a closure
2017-01-11 13:30:36	jethroft	is there a way to make these lifetimes work out? https://is.gd/2OoTf8
2017-01-11 13:30:45	Hail_Spacecake	hm as long as the unwrap_or_else closure can panic
2017-01-11 13:30:48	Hail_Spacecake	and I guess it can
2017-01-11 13:30:53	Hail_Spacecake	so yeah that'd probably do it
2017-01-11 13:30:57	◣	bushidoboy (dbishop@moz-ok6.k7o.229.192.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 13:31:01	kazagistar	er, unwrap_or_else is right, my bad
2017-01-11 13:31:02	Ixrec	yeah come to think of it panicking from that is kinda weird
2017-01-11 13:31:11	Ixrec	but then so is calling map_err before expect
2017-01-11 13:31:16	Hail_Spacecake	it's  alittle werid to think about panicing from a lcosure
2017-01-11 13:31:19	Hail_Spacecake	but of course you can the language allows it
2017-01-11 13:31:23	Hail_Spacecake	and it's what I want to do here
2017-01-11 13:31:25	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 13:31:27	talchas	jethroft: fn handle<A: for<'a> Storage<'a>>()
2017-01-11 13:31:29	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-11 13:31:29	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-11 13:31:36	talchas	but I don't think that winds up working in calling handle
2017-01-11 13:31:42	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-11 13:31:43	kazagistar	there shouldn't be TOO many functions for panicking… you are supposed to not panic instead :D
2017-01-11 13:31:53	Hail_Spacecake	I find myself typing let a = match result { Ok(e) => e, Err(e) => { println!(something custom); panic!(); }}
2017-01-11 13:31:56	talchas	you probably want A<'a>: Storage<'a> which of course doesn't work
2017-01-11 13:32:00	◥	sssilver (textual@moz-bac.97e.122.38.IP) has joined #rust
2017-01-11 13:32:18	Hail_Spacecake	kazagistar: is there any reason to call the explicit thread::exit() function instead of panicking?
2017-01-11 13:32:25	jethroft	talchas: right i can't call handle with the HKL
2017-01-11 13:32:39	jethroft	handle::<P>(); // the trait `for<'a> Storage<'a>` is not implemented for `P<'_>`
2017-01-11 13:32:39	Hail_Spacecake	I thought that panics were totally okay if the way you want to handle the error is gracefully quitting the program
2017-01-11 13:32:51	Ixrec	the error I get from jethroft's code is that he's trying to persist a reference to a local variable, which I don't think is doable regardless of lifetime annotations
2017-01-11 13:33:05	Hail_Spacecake	usually I want to grafefully quit the program, and I just want a better error message than what .expect() would do automatically
2017-01-11 13:33:13	◣	denisg (denisg@moz-k19q37.dip0.t-ipconnect.de) has quit (Client exited)
2017-01-11 13:33:18	Ixrec	unless you Box<> or Vec the value so that its ownership can be moved into Storage
2017-01-11 13:33:26	talchas	jethroft: there's https://is.gd/gTdP3P but Storage::Output won't always substitute everywhere you'd want
2017-01-11 13:33:39	◥	mgottschlag (quassel@moz-up6m8k.dip0.t-ipconnect.de) has joined #rust
2017-01-11 13:33:44	◥	space-wizard (space-wizar@moz-2vatbh.res.rr.com) has joined #rust
2017-01-11 13:34:21	talchas	(whoops, forgot a change, but https://is.gd/C4JjjO )
2017-01-11 13:34:27	◣	santiago (santiago@moz-c25.53a.141.40.IP) has quit (Connection closed)
2017-01-11 13:34:29	jethroft	talchas: yeah already got it :)
2017-01-11 13:34:36	◥	santiago (santiago@moz-c25.53a.141.40.IP) has joined #rust
2017-01-11 13:34:58	jethroft	talchas: ok that is an interesting idea, I'll see if I can make that work in the real case :)
2017-01-11 13:34:59	◣	TheCycoONE (quassel@moz-d4s.1g6.223.162.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:35:04	◣	space-wi_ (space-wizar@moz-2vatbh.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 13:35:07	kazagistar	Hail_Spacecake: thats fine then. you can even write your own helper function or macro if your "something custom" is fairly predictable and boring
2017-01-11 13:35:24	◥	eazar001 (ebrahim@moz-6luan8.hutj.9gq1.0304.2602.IP) has joined #rust
2017-01-11 13:35:34	⚡	rail is now known as rail-away
2017-01-11 13:35:39	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:35:51	Ixrec	Hail_Spacecake: this sounds like a good use case for an extension trait
2017-01-11 13:36:17	sleffly	Does anyone have, like, a macros 1.1 template for a generic derivation like `Debug`?
2017-01-11 13:36:25	◣	johalun (johalun@moz-n0olpq.f1t1.3k89.0647.2601.IP) has quit (Connection closed)
2017-01-11 13:37:13	◥	johalun (johalun@moz-mkhcgs.f1t1.3k89.0647.2601.IP) has joined #rust
2017-01-11 13:37:58	◥	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust
2017-01-11 13:38:00	Hail_Spacecake	Ixrec: extension trait?
2017-01-11 13:38:30	◣	michas (michas@moz-ml2j49.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-11 13:38:35	◣	wallacoloo_____ (colin@moz-2ps3tb.dhcp4.washington.edu) has quit (Client exited)
2017-01-11 13:39:04	◣	tim_____ (tim_____@moz-d0c3ev.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-11 13:39:17	◣	safwan (uid93576@moz-nrps1k.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-11 13:39:23	◣	Trangar (Trangar@moz-scf.k7b.97.185.IP) has quit (Quit: Leaving)
2017-01-11 13:40:16	◣	jsgf (jsgf@moz-q61.9o0.201.199.IP) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-11 13:40:16	Ixrec	a trait you create in your own code whose sole purpose is to let you attach extra methods onto existing types
2017-01-11 13:40:36	◥	tim_____ (tim_____@moz-d0c3ev.dip0.t-ipconnect.de) has joined #rust
2017-01-11 13:40:43	Ixrec	trait ResultExt { fn expect_pretty(...) ... } impl ResultExt for Result { ... }
2017-01-11 13:40:56	bluss	sleffly: this one is not put into general components like libsyntax_ext's deriving, but it does implement derive debug https://github.com/mcarton/rust-derivative
2017-01-11 13:41:15	◣	Devon (Mibbit@moz-qgvrhi.nh.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 13:41:16	Hail_Spacecake	ah
2017-01-11 13:41:22	Hail_Spacecake	makes sense
2017-01-11 13:41:32	◣	jrozner_ (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 13:41:48	jethroft	talchas: I want to constraint the Output type, but that also doesn't work https://is.gd/9FDIJ3
2017-01-11 13:42:23	sleffly	bluss, whoa, that's a neat crate!
2017-01-11 13:42:30	◣	lholden (lholden@moz-76r5vv.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:42:34	◣	skeuomorf (skeuomorf@moz-47b.3h9.211.156.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:43:36	◣	steveire (quassel@moz-ljp807.jluj.36ij.8084.2a02.IP) has quit (Connection closed)
2017-01-11 13:43:38	◥	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has joined #rust
2017-01-11 13:43:54	◣	degausser (Thunderbird@moz-midec3.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2017-01-11 13:44:03	qz	why can't i make a local variable that hold slice (not reference to slice), compiler complains that size is not statically known, but isnt it two words (length and ptr)? even if it depends on size of items in slice, item size is perfecly known at compile time...
2017-01-11 13:44:06	talchas	jethroft: https://is.gd/TLVKoy, though I don't know if Storage<'a> is the bound you want in the end
2017-01-11 13:44:31	durka42	qz: it's the reference to the slice that is two words
2017-01-11 13:44:36	◥	wilfredh (user@moz-lafa9m.cable.virginm.net) has joined #rust
2017-01-11 13:44:41	◥	holgarB (holger@moz-ivdssg.dip0.t-ipconnect.de) has joined #rust
2017-01-11 13:44:58	qz	durka42: oh, thought reference to slice is a pointer to that struct of two words.
2017-01-11 13:45:26	◥	awygle (Mibbit@moz-no84m6.res.rr.com) has joined #rust
2017-01-11 13:45:41	Ixrec	reference to <dynamically sized type> is generally a "fat pointer", but the dynamically sized type itself is still dynamically sized
2017-01-11 13:46:00	◣	llambda (Mibbit@moz-6ma.301.186.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 13:46:47	⚡	bholley is now known as bholley_away
2017-01-11 13:47:33	misdreavus	it's helpful to think of the slice without a reference as the actual range of data in question
2017-01-11 13:48:01	qz	misdreavus: oh, if rust treats it like that it explains..
2017-01-11 13:48:01	◥	tyoc213 (tyoc@moz-44p.8oo.75.184.IP) has joined #rust
2017-01-11 13:48:20	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 13:48:29	◣	SiIky (SiIky@moz-dbrsl2.5ghr.hl2k.08a0.2001.IP) has quit (Quit: Leaving)
2017-01-11 13:48:29	misdreavus	same for trait objects that aren't behind a reference/Box - it's the actual struct in question, which could be anything
2017-01-11 13:48:45	misdreavus	i dunno if that's the actual implementation, but that's my mental shorthand
2017-01-11 13:48:55	◥	tyoc (tyoc@moz-44p.8oo.75.184.IP) has joined #rust
2017-01-11 13:49:00	◥	baby-bell (Mibbit@moz-46rbdr.dynamic.fusionbroadband.com) has joined #rust
2017-01-11 13:49:10	Ixrec	for trait objects it's basically a vtable, but I think it's reasonable to call vtables a kind of "fat pointer"
2017-01-11 13:49:39	misdreavus	right, the vtable is part of the fat pointer for trait objects
2017-01-11 13:49:44	◣	roc (chatzilla@moz-4vn.p7v.99.121.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:49:51	sfackler	a pointer to the vtable is part of the fat pointer, specifically
2017-01-11 13:49:56	Ixrec	oh right it's a vtable and a data pointer
2017-01-11 13:50:03	◥	tyoc__ (tyoc@moz-44p.8oo.75.184.IP) has joined #rust
2017-01-11 13:50:22	misdreavus	yeah, what sfackler said
2017-01-11 13:50:34	qz	vtable+data pointer is reference to trait object or trait object itself?
2017-01-11 13:50:39	jethroft	talchas: thanks!! I think this works (once I added some more 'static bounds to some of my other type parameters)
2017-01-11 13:50:46	◥	nicoch (nicoch@moz-9aslft.2utt.76f9.0e34.2a01.IP) has joined #rust
2017-01-11 13:50:49	baby-bell	I have a question about staticlib and linking
2017-01-11 13:51:13	misdreavus	qz: when using a &Trait or Box<Trait> it's a data ptr+vtable ptr
2017-01-11 13:51:29	baby-bell	my library depends on some C static libraries
2017-01-11 13:51:45	baby-bell	and I've built static versions of them, but I'm not sure how to force it to use static over dynamic
2017-01-11 13:51:53	qz	misdreavus: i see
2017-01-11 13:51:54	◣	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:52:05	◣	tyoc213 (tyoc@moz-44p.8oo.75.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:52:16	◣	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 13:52:22	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:52:28	_habnabit	baby-bell, how do you link them?
2017-01-11 13:52:35	◣	melleb (Thunderbird@moz-gkc7lr.direct-adsl.nl) has quit (Ping timeout: 121 seconds)
2017-01-11 13:52:45	misdreavus	baby-bell: build scripts are usually the method of getting something linked in like that
2017-01-11 13:53:11	◣	tyoc (tyoc@moz-44p.8oo.75.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:53:21	baby-bell	I think it's a crate dependency
2017-01-11 13:53:40	ElectroMetro	When using generic api views how can I modify the schema that gets generated for the response?
2017-01-11 13:53:49	baby-bell	and it has a build script that does linking
2017-01-11 13:54:10	baby-bell	would I just have to alter that?
2017-01-11 13:54:17	◣	tyoc__ (tyoc@moz-44p.8oo.75.184.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 13:54:23	◥	draghi (Mibbit@moz-uvrge2.dyn.telefonica.de) has joined #rust
2017-01-11 13:54:34	_habnabit	baby-bell, or make sure that the static library is ahead of the dynamic library on the library search path
2017-01-11 13:54:47	_habnabit	baby-bell, you might have to create a directory containing only the .a
2017-01-11 13:55:10	baby-bell	thanks, I'll try that 
2017-01-11 13:56:19	draghi	Greetings, is there a way to do a simple asm!("nop") without the #!feature(asm)?
2017-01-11 13:56:20	◥	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has joined #rust
2017-01-11 13:56:36	_habnabit	draghi, you want to do nothing, explicitly?
2017-01-11 13:56:46	Ixrec	pretty sure inline assembly is not stable so probably not
2017-01-11 13:56:53	Ixrec	and yeah, why?
2017-01-11 13:57:05	misdreavus	sometimes hardware is weird and inserting nops makes it better
2017-01-11 13:57:09	◥	muskox (muskox@moz-8mbs17.res.rr.com) has joined #rust
2017-01-11 13:58:00	bobross	but if you only wanted one instruction you wouldn't know how many instructions were being run before or after 
2017-01-11 13:58:00	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-11 13:58:01	draghi	i wrote a sleep function with nanosecond precision. works perectly fine with the asm!("nop") solution, but that is not very pretty.. /
2017-01-11 13:58:50	Pluppz	is there some nice way to apply a function on what's inside an Option? I want to do an action so it wouldn't return anything. Guess I could use and_then and return 0 at the end or something
2017-01-11 13:58:56	bobross	draghi that wouldn't give up the threads time in the OS though right?
2017-01-11 13:59:07	◥	narann (narann@moz-9g94em.ajg5.23ku.0e34.2a01.IP) has joined #rust
2017-01-11 13:59:22	◥	jsgf (jsgf@moz-q61.9o0.201.199.IP) has joined #rust
2017-01-11 13:59:25	⚡	bholley_away is now known as bholley
2017-01-11 13:59:26	_habnabit	Pluppz, Option::map?
2017-01-11 13:59:29	_habnabit	Pluppz, if let?
2017-01-11 13:59:32	draghi	correct. not neccessaryfor me
2017-01-11 13:59:43	Pluppz	oh right, map isn't lazy is it
2017-01-11 13:59:50	_habnabit	it can't be, no
2017-01-11 13:59:57	Pluppz	I see, thanks
2017-01-11 14:00:07	bobross	draghi are you working on a processor without an MMU ? 
2017-01-11 14:00:10	misdreavus	Pluppz: if you want to modify it in place, you could use as_mut before calling map
2017-01-11 14:00:13	Ixrec	Option isn't an iterator (unless you call .iter() on it) so most of its methods have no reason to be lazy
2017-01-11 14:00:23	◣	UberLambda (uber@moz-e0kgdg.cust.vodafonedsl.it) has quit (Quit: GTG)
2017-01-11 14:00:58	◥	meh (meh@moz-86tddh.nat.rutgers.edu) has joined #rust
2017-01-11 14:01:11	◣	ytain (ytain@moz-dsd9oq.lhgc.s942.f2c0.2607.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-11 14:01:56	misdreavus	Pluppz: alternately, if let Some(ref mut thing) = my_option { /* mess with thing */ }
2017-01-11 14:01:59	draghi	It's an allwinner H2+, it should have a MMU
2017-01-11 14:02:05	◥	Diggsey (uid120933@moz-ob9ou8.brockwell.irccloud.com) has joined #rust
2017-01-11 14:02:06	talchas	nop-sleep can maybe sorta work on embedded I guess, as long as it's not "embedded" with frequency scaling and stuff like new phones
2017-01-11 14:02:09	Pluppz	yeah
2017-01-11 14:02:16	Ixrec	most of the Option methods are wrappers for match statements like that
2017-01-11 14:02:29	Pluppz	is there also some built-in enum for when something can be one of two things?
2017-01-11 14:02:44	Pluppz	easy to make yourself but just wondering
2017-01-11 14:02:58	_habnabit	Pluppz, Result
2017-01-11 14:03:13	Ixrec	Result is the most common one, but obviously it assigns some semantics to its two variants
2017-01-11 14:03:23	◥	bjz (bjz@moz-q4evh9.optusnet.com.au) has joined #rust
2017-01-11 14:03:29	draghi	i disabled the frequency scaling of course. just the asm feature gate is a bit annoying.. :/
2017-01-11 14:03:30	◥	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has joined #rust
2017-01-11 14:03:37	Ixrec	I think a two-variant enum with no semantics on its variants at all probably wouldn't be very useful
2017-01-11 14:03:38	Pluppz	hm doesn't really make sense to use that 
2017-01-11 14:04:00	misdreavus	!crate either
2017-01-11 14:04:00	+rustbot	either (1.0.2) - The enum `Either`, with variants `Left` and `Right` and trait implementations including Iterator, Read, Write.  Either has methods that are similar to Option and Result.  Includes convenience macros `try_left!()` and `try_right!()` to use for short-circuiting logic. -> https://crates.io/crates/either <https://docs.rs/crate/either>
2017-01-11 14:04:01	Ixrec	otherwise we would just use Result for every two-variant enum
2017-01-11 14:04:09	@steveklabnik	we used to have Either nad Result
2017-01-11 14:04:15	@steveklabnik	literally no Rust code in existence used Either
2017-01-11 14:04:15	◣	kmicu (kmicu@moz-c3t.224.218.91.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 14:04:17	◣	tromey (tromey@moz-hn05ml.hlrn.qwest.net) has quit (Quit: ERC (IRC client for Emacs 25.1.91.1))
2017-01-11 14:04:18	@steveklabnik	so, we removed it
2017-01-11 14:04:25	◣	prz (prz@moz-8o4.tv0.129.66.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:04:29	◥	prz (prz@moz-8o4.tv0.129.66.IP) has joined #rust
2017-01-11 14:04:45	Ixrec	iirc even Haskell's "Either" is used more like Result a lot of the time
2017-01-11 14:04:46	@steveklabnik	(ahhh back in the days when there was like 75 projects on all of github :p)
2017-01-11 14:05:59	◥	danpker (danielparke@moz-v2q.b6v.26.176.IP) has joined #rust
2017-01-11 14:06:10	◥	solenodic (solenodic@moz-o2k.dlj.109.66.IP) has joined #rust
2017-01-11 14:06:33	Pluppz	I suppose you can't `break value;` in a loop to return the value? :P
2017-01-11 14:06:43	&mbrubeck	Pluppz: soon!
2017-01-11 14:06:50	Ixrec	would you believe an RFC to do exactly that got implemented within the last month?
2017-01-11 14:06:51	Pluppz	:O nice
2017-01-11 14:07:01	&mbrubeck	Pluppz: https://github.com/rust-lang/rfcs/blob/master/text/1624-loop-break-value.md
2017-01-11 14:07:13	◥	cengizIO (cengizIO@moz-sl0.31a.93.91.IP) has joined #rust
2017-01-11 14:07:13	Pluppz	that's great
2017-01-11 14:07:25	Pluppz	it's not in Nightly yet?
2017-01-11 14:07:32	&mbrubeck	Pluppz: It's in nightly with a feature gate
2017-01-11 14:07:49	draghi	instead of an asm!("nop") loop, i could loop across some dummy calculation. but i could'nt come up with a 1-2 step opteation that the loop optimization doesn't catch.
2017-01-11 14:07:56	◣	ShadowIce (pyoro@moz-d52f7k.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2017-01-11 14:08:02	Pluppz	mbrubeck: what do I have to do to use it?
2017-01-11 14:08:14	baby-bell	could you call out to a fake external function?
2017-01-11 14:08:23	◥	jjido (jjido@moz-dci.vpg.203.90.IP) has joined #rust
2017-01-11 14:08:35	&mbrubeck	Pluppz: https://is.gd/eqFTW2
2017-01-11 14:09:05	Pluppz	thanks
2017-01-11 14:09:20	jjido	Is there destructuring of arrays in 1.14.0?
2017-01-11 14:09:31	draghi	hum.. good idea.. i'll try that.
2017-01-11 14:09:44	Ixrec	if you mean slice patterns, we've had unstable slice patterns for a while but nothing stable
2017-01-11 14:10:03	◣	danpker (danielparke@moz-v2q.b6v.26.176.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:10:07	◥	eckhardt (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2017-01-11 14:10:11	jjido	Ixrec: I get an "experimental" error
2017-01-11 14:10:20	Ixrec	yep, it's unstable
2017-01-11 14:10:24	◥	eckhardt_ (eckhardt@moz-0b0.bm2.248.98.IP) has joined #rust
2017-01-11 14:10:33	&mbrubeck	also beware, slice patterns are not just unstable but buggy
2017-01-11 14:10:38	misdreavus	since it's unstable, it's not in 1.14
2017-01-11 14:10:44	&mbrubeck	(I have seen segfaults in safe code using slice patterns)
2017-01-11 14:10:48	jjido	Ixrec: is there a directive to allow executing the code?
2017-01-11 14:10:50	◥	jansegre (jan@moz-qt9.d9j.218.179.IP) has joined #rust
2017-01-11 14:11:08	&mbrubeck	jjido: https://doc.rust-lang.org/book/slice-patterns.html
2017-01-11 14:11:12	Ixrec	same as every unstable feature, you have to add a #![feature(feature_name)] attribute to your module
2017-01-11 14:11:22	misdreavus	(and use a nightly compiler)
2017-01-11 14:11:40	◣	vulpes (vulpes@moz-mlao6l.dcb1.8e10.2788.2a02.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:12:19	Ixrec	iirc there are also ways to segfault on stable rust with patterns because the borrow checker really does not get patterns
2017-01-11 14:12:33	◥	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 14:12:34	◣	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has quit (Connection closed)
2017-01-11 14:12:36	◥	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 14:12:37	◣	mgottschlag (quassel@moz-up6m8k.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-11 14:12:38	Ixrec	which should be fixed when it's ported to mir
2017-01-11 14:13:18	jjido	rustc 1.14.0 (e8a012324 2016-12-16)
2017-01-11 14:13:19	jjido	error[E0554]: #[feature] may not be used on the stable release channel
2017-01-11 14:13:28	Ixrec	[22:11:28] <misdreavus> (and use a nightly compiler)
2017-01-11 14:13:39	misdreavus	PM 041038 <misdreavus> since it's unstable, it's not in 1.14
2017-01-11 14:13:42	jjido	yes ok thanks all!
2017-01-11 14:13:44	Ixrec	lol
2017-01-11 14:13:51	◥	doener (doener@moz-4vno8d.unity-media.net) has joined #rust
2017-01-11 14:14:01	misdreavus	>_>
2017-01-11 14:14:26	◣	eckhardt_ (eckhardt@moz-0b0.bm2.248.98.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:14:32	◣	nicoch (nicoch@moz-9aslft.2utt.76f9.0e34.2a01.IP) has quit (Quit: *poof*)
2017-01-11 14:16:46	◣	bjz (bjz@moz-q4evh9.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 14:17:02	jjido	once I have an array slice, can I assign it back to an array?
2017-01-11 14:17:37	◥	JoshTriplett (josh@moz-4fb.r6t.134.134.IP) has joined #rust
2017-01-11 14:17:56	misdreavus	not directly, you'll have to make the array again
2017-01-11 14:17:56	&mbrubeck	jjido: One way is to do `array.copy_from_slice(slice)` https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.copy_from_slice
2017-01-11 14:18:05	&mbrubeck	if you still have the array
2017-01-11 14:19:19	◣	allight (allight@moz-pe5sad.k8q4.vk5s.0000.2620.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:19:37	◣	kwantam (kwantam@moz-kchoeo.stanford.edu) has quit (Quit: WeeChat 1.5)
2017-01-11 14:20:13	◥	asto (asto@moz-jc0pol.internode.on.net) has joined #rust
2017-01-11 14:21:20	◥	kwantam (kwantam@moz-kchoeo.stanford.edu) has joined #rust
2017-01-11 14:23:23	◥	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has joined #rust
2017-01-11 14:23:24	◣	slomo (slomo@moz-cr5.9m0.117.188.IP) has quit (Quit: Leaving)
2017-01-11 14:23:26	◣	meh (meh@moz-86tddh.nat.rutgers.edu) has quit (Ping timeout: 121 seconds)
2017-01-11 14:25:51	◣	hardenedapple (hardenedapp@moz-cu794c.range86-172.btcentralplus.com) has quit (Quit: WeeChat 1.6)
2017-01-11 14:25:51	jjido	ok I could use copy_from_slice. It is cumbersome though
2017-01-11 14:26:14	_habnabit	jjido, how so?
2017-01-11 14:26:20	jjido	guess it is better for function to take slices instead of arrays
2017-01-11 14:26:54	jjido	_habnabit: well I had to create and initialize a mutable array before I could use it
2017-01-11 14:27:24	◥	mskalski (mskalski@moz-8u45af.opt.im) has joined #rust
2017-01-11 14:27:24	_habnabit	jjido, that seems unrelated? if you were taking an array in your function, you'd have to do that anyway
2017-01-11 14:27:57	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-11 14:28:40	◣	grepherd (grepherd@moz-eal2t9.dyn.plus.net) has quit (Quit: Leaving.)
2017-01-11 14:28:50	◣	fridim (fridim@moz-tpfce5.dsl.ovh.fr) has quit (Ping timeout: 121 seconds)
2017-01-11 14:29:02	◣	baby-bell (Mibbit@moz-46rbdr.dynamic.fusionbroadband.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 14:29:24	jjido	_habnabit: I am a beginner. Going through Rust By Example. I made a function that takes a non-mutable array as argument. If I want to call it with data in a slice form, I have to jump through loops. That is what I found.
2017-01-11 14:29:50	jjido	where can I share the code?
2017-01-11 14:29:57	_habnabit	jjido, oh, sure. taking a slice as an argument is way easier
2017-01-11 14:30:01	_habnabit	jjido, https://play.rust-lang.org
2017-01-11 14:30:06	◣	florent (Thunderbird@moz-e6b8kf.7ru8.ktqg.cb14.2a01.IP) has quit (Client exited)
2017-01-11 14:30:22	◣	Trangar (Trangar@moz-f81vll.ftth.glasoperator.nl) has quit (Quit: Leaving)
2017-01-11 14:31:08	◥	allight (allight@moz-3u6mb1.k8q4.vk5s.0000.2620.IP) has joined #rust
2017-01-11 14:31:34	supercurio	Hello everyone!
2017-01-11 14:31:50	Ixrec	generally speaking, passing around a reference to something always involves "jumping through hoops" because you have to prove to the compiler that reference can't possibly dangle like it probably would in C or C++
2017-01-11 14:32:29	jjido	https://play.rust-lang.org/?gist=f5b0dc37d4606186e2e27950996cbc49&version=stable&backtrace=0
2017-01-11 14:32:52	Ixrec	it's often easier to Box<> and .clone() stuff at first until you know what your code is supposed to look like well enough to start commiting to references
2017-01-11 14:33:33	_habnabit	jjido, sure. so take &[i32] and pass &mut ys[1..6] if you wanted to mutate it
2017-01-11 14:33:37	supercurio	while reading the Rust book I'm finding a few errors (like typos or invalid examples), do you know what would be the best way to report these errors?
2017-01-11 14:33:43	◣	sparky (quassel@moz-vun.nn7.191.199.IP) has quit (Quit: Goodbye)
2017-01-11 14:33:55	_habnabit	supercurio, github.com/rust-lang/rust
2017-01-11 14:34:02	supercurio	one example: the last example on https://doc.rust-lang.org/book/patterns.html
2017-01-11 14:34:05	apx	hey, so I triedthe ? operator but cant get it to work. Isnt it supposed to work with Option and Result as well?
2017-01-11 14:34:12	durka42	apx: Result only
2017-01-11 14:34:17	durka42	apx: just like try!()
2017-01-11 14:34:23	apx	I see, ty
2017-01-11 14:34:25	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 14:35:16	Ixrec	there are proposals to generalize it to Option, but for now it's just Result
2017-01-11 14:35:27	apx	what I couldnt figure out is how ? can be used in chains
2017-01-11 14:35:38	supercurio	_habnabit, cool thanks, I see there's already "docs" related labels :)
2017-01-11 14:35:38	apx	wouldnt that require multiple return types?
2017-01-11 14:35:43	◣	draghi (Mibbit@moz-uvrge2.dyn.telefonica.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 14:35:56	◥	sscott (Thunderbird@moz-lksml6.stvt.i7og.0c7d.2a02.IP) has joined #rust
2017-01-11 14:37:00	Ixrec	it requires some implicit conversions
2017-01-11 14:37:04	Ixrec	which ? and try!() already do
2017-01-11 14:37:10	durka42	apx: well any expression using ? in a given function must have the same error type as in the function's return value, or one that can be converted to that by From
2017-01-11 14:37:16	Ixrec	^
2017-01-11 14:37:21	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 14:37:30	◣	jjido (jjido@moz-dci.vpg.203.90.IP) has quit (Connection closed)
2017-01-11 14:37:51	◣	Pursuit (josh@moz-6jfqvk.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 14:38:00	◣	YaLTeR (YaLTeR@moz-muk.do7.220.77.IP) has quit (Quit: WeeChat 1.6)
2017-01-11 14:38:04	apx	can I somehow abstract over multiple error types? I somewhat dislike having to wrap everything into a function that then abstracts the error type so that I can use it in one place
2017-01-11 14:38:17	apx	i.e. one crate implements Error, the other some other kind of Error
2017-01-11 14:38:32	durka42	generally you make an error enum for your library that contains all the possible error types
2017-01-11 14:38:38	apx	that makes it impossible to have a Result<(), foo + bar)
2017-01-11 14:38:50	◣	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2017-01-11 14:38:50	apx	I see
2017-01-11 14:38:51	apx	hm
2017-01-11 14:39:02	_habnabit	error_chain helps a lot for this
2017-01-11 14:39:08	durka42	yeah
2017-01-11 14:39:13	apx	is that a crate?
2017-01-11 14:39:18	apx	i see
2017-01-11 14:39:19	◣	mrutter (mrutter@moz-sl2fi3.cable.virginm.net) has quit (Quit: WeeChat 1.6)
2017-01-11 14:39:29	misdreavus	yes, that's a crate
2017-01-11 14:39:42	misdreavus	!crate error_chain
2017-01-11 14:39:42	+rustbot	error-chain (0.7.2) - Yet another error boilerplate library. -> https://crates.io/crates/error-chain <https://docs.rs/crate/error-chain>
2017-01-11 14:40:12	◣	kwantam (kwantam@moz-kchoeo.stanford.edu) has quit (Quit: WeeChat 1.5)
2017-01-11 14:40:23	◣	rafalm (ck@moz-n1o.975.79.79.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:40:29	misdreavus	you can manually implement the catch-all error enum, the book has an example https://doc.rust-lang.org/book/error-handling.html#composing-custom-error-types
2017-01-11 14:41:23	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:41:24	apx	thats a pretty fn genius crate
2017-01-11 14:41:25	apx	ty
2017-01-11 14:41:32	◥	kwantam (kwantam@moz-kchoeo.stanford.edu) has joined #rust
2017-01-11 14:42:05	◥	ubsandroid_ (ubsan@moz-nvdnvq.bin9.gd67.fb90.2607.IP) has joined #rust
2017-01-11 14:42:15	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2017-01-11 14:42:20	◣	brson (brson@moz-cfhap5.mtv2.mozilla.com) has quit (Ping timeout: 121 seconds)
2017-01-11 14:42:27	◥	CoderPuppy (cpup@moz-5sb.69g.218.32.IP) has joined #rust
2017-01-11 14:43:22	JoshTriplett	+1 for error-chain; quite awesome.
2017-01-11 14:43:26	◣	davs_ (davs@moz-tc8r0n.bratislava.digicable.sk) has quit (Ping timeout: 121 seconds)
2017-01-11 14:44:08	◣	ghosss (textual@moz-rr8npu.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-11 14:45:13	◣	cpup (cpup@moz-osl.ktm.218.32.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 14:45:14	◣	ubsandroid (ubsan@moz-0ahffk.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2017-01-11 14:45:29	◣	sepp2k (Sepp2k@moz-9kv9rr.dyn.telefonica.de) has quit (Connection closed)
2017-01-11 14:45:37	Ixrec	why are the libraries that describe themselves as "Yet another..." always good ones
2017-01-11 14:45:49	◥	roc (chatzilla@moz-5i3r2r.nd3p.kiip.e780.2400.IP) has joined #rust
2017-01-11 14:46:09	◥	sargas (sargas@moz-863roc.hfc.comcastbusiness.net) has joined #rust
2017-01-11 14:46:13	◣	Jackneill_ (Jackneill@moz-d5febd.pool.digikabel.hu) has quit (A TLS packet with unexpected length was received.)
2017-01-11 14:46:31	jethroft	Ixrec: makes them easy to find :)
2017-01-11 14:46:44	misdreavus	because they have a foundation to build from
2017-01-11 14:47:50	misdreavus	and something to differentiate themselves against
2017-01-11 14:48:39	◣	fabiand (fabiand@moz-emil3p.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2017-01-11 14:49:22	◣	aurora (uid151696@moz-hbpvgv.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2017-01-11 14:50:36	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-11 14:50:37	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-11 14:50:49	◣	dpyro (dpyro@moz-el40ti.tx.frontiernet.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2017-01-11 14:51:16	◥	dpyro (dpyro@moz-el40ti.tx.frontiernet.net) has joined #rust
2017-01-11 14:51:21	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-11 14:51:26	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-11 14:51:45	◥	brson (brson@moz-cfhap5.mtv2.mozilla.com) has joined #rust
2017-01-11 14:51:45	⚡	Mode #rust [+ao brson brson] by ChanServ
2017-01-11 14:51:57	◣	sargas (sargas@moz-863roc.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2017-01-11 14:52:09	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-11 14:52:13	◣	raichoo (raichoo@moz-gvtrsq.versanet.de) has quit (Ping timeout: 121 seconds)
2017-01-11 14:52:13	◥	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has joined #rust
2017-01-11 14:52:18	◥	Pursuit (josh@moz-6jfqvk.res.rr.com) has joined #rust
2017-01-11 14:52:44	◣	jdm (jdm@moz-0s2dra.dsl.teksavvy.com) has quit (Quit: )
2017-01-11 14:53:23	◣	cruor99 (cruor99@moz-0os33h.customer.cdi.no) has quit (Connection closed)
2017-01-11 14:54:43	◣	JoshTriplett (josh@moz-4fb.r6t.134.134.IP) has left #rust
2017-01-11 14:55:50	◣	mdarse (mdarse@moz-nfju5g.abo.wanadoo.fr) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 14:56:11	◣	hjr3 (hradtke@moz-p2dfkp.compute-1.amazonaws.com) has left #rust ("Textual IRC Client: www.textualapp.com")
2017-01-11 14:56:19	◣	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-11 14:57:32	◥	jdub_ (jdub@moz-mop2mo.iinet.net.au) has joined #rust
2017-01-11 14:58:31	◣	jdub (jdub@moz-kgdri9.iinet.net.au) has quit (Ping timeout: 121 seconds)
2017-01-11 14:58:38	◣	euclio (euclio@moz-a1t.e0s.78.208.IP) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2017-01-11 14:59:00	◥	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has joined #rust
2017-01-11 14:59:06	◣	ahal (ahal@moz-b8e0a0.cpe.pppoe.ca) has quit (A TLS packet with unexpected length was received.)
2017-01-11 14:59:31	◣	EoF (EoF@moz-h6i7lj.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2017-01-11 14:59:36	◣	djcb (user@moz-a1m7sq.elisa-mobile.fi) has quit (Connection closed)
2017-01-11 15:00:08	⚡	edunham is now known as edunham|pto
2017-01-11 15:00:44	◣	tim_____ (tim_____@moz-d0c3ev.dip0.t-ipconnect.de) has quit (Connection closed)
2017-01-11 15:01:04	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-11 15:01:17	◥	albel727 (albel727@moz-njmloa.academ.org) has joined #rust
2017-01-11 15:01:43	◣	cengizIO (cengizIO@moz-sl0.31a.93.91.IP) has quit (Quit: Leaving)
2017-01-11 15:01:53	Noldorin	hmm. is there any way to specify more than one trait bound in a Box?
2017-01-11 15:02:37	◥	lucian (lucian@moz-7hsb6f.cable.virginm.net) has joined #rust
2017-01-11 15:02:38	◣	sssilver (textual@moz-bac.97e.122.38.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 15:03:22	misdreavus	Box<SomeTrait + OtherTrait>
2017-01-11 15:03:27	durka42	no that doesn't work
2017-01-11 15:03:34	durka42	you have to use the "trait alias trick"
2017-01-11 15:03:51	misdreavus	ah, right
2017-01-11 15:03:54	prz	what's "trait alias trick"? just trait X : Y + Z ? 
2017-01-11 15:03:56	durka42	trait FooPlusBar: Foo + Bar {}    impl<T: Foo + Bar> FooPlusBar for T {}
2017-01-11 15:04:04	prz	ok ... 
2017-01-11 15:04:40	Noldorin	durka42, ah, clever. a bit hacky, but at least it will work.
2017-01-11 15:04:41	misdreavus	!trait alias
2017-01-11 15:04:41	+rustbot	trait alias is The "trait alias" pattern allows you to create an "alias" for a set of traits using supertraits and a blanket impl, e.g. `trait X: Y + Z + Everything + Under + The + Sun {} impl<T> X for T where T: Y + Z + Everything + Under + The + Sun {}`
2017-01-11 15:04:49	◥	Ketsuban (ketsuban@moz-iq9o85.abqe.tdt5.0c7d.2a02.IP) has joined #rust
2017-01-11 15:05:04	durka42	(see https://github.com/rust-lang/rfcs/pull/1733)
2017-01-11 15:05:29	Noldorin	ta
2017-01-11 15:05:32	Ixrec	ah right, because you can't bound a trait object directly because you don't know the concrete type of a trait objects (that's the whole point) so it needs to be the trait object of a trait that has both sets of methods
2017-01-11 15:05:33	◥	jrozner_ (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-11 15:05:50	◥	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2017-01-11 15:06:21	misdreavus	i thought it was much more mundane, where there's a limitation that Box<A + B> didn't have a proper impl for A or B
2017-01-11 15:06:33	misdreavus	there was an issue for Box<Read + Write> iirc
2017-01-11 15:06:39	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-11 15:06:56	durka42	Box<A + B> could be supported, the compiler would just have to make an invisible trait alias
2017-01-11 15:07:52	◣	Freyskeyd (Freyskeyd@moz-oa5cvm.abo.bbox.fr) has quit (Ping timeout: 121 seconds)
2017-01-11 15:08:11	◥	EoF (EoF@moz-h6i7lj.dynamic.kabel-deutschland.de) has joined #rust
2017-01-11 15:08:19	◣	jbradberry (jrb@moz-kpp3mi.biz.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 15:08:37	◣	SiegeLord (sl@moz-s8hpnn.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2017-01-11 15:08:43	◥	gyng (faux@moz-urnmhv.singnet.com.sg) has joined #rust
2017-01-11 15:09:09	◣	oln (smuxi@moz-h6kap0.customer.cdi.no) has quit (Connection closed)
2017-01-11 15:10:11	◣	narann (narann@moz-9g94em.ajg5.23ku.0e34.2a01.IP) has quit (Quit: Leaving)
2017-01-11 15:10:39	◣	espadrine (tyl@moz-l019mn.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2017-01-11 15:10:39	◣	Fanaen (Fanaen@moz-kjiu8m.6rfj.92aj.0e35.2a01.IP) has quit (Quit: Leaving)
2017-01-11 15:11:13	◣	skeet70 (skeet70@moz-1r774t.static.bresnan.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 15:11:18	◥	ghisvail___ (ghisvail@moz-8k797h.cable.virginm.net) has joined #rust
2017-01-11 15:12:46	◣	gyng (faux@moz-urnmhv.singnet.com.sg) has quit (Ping timeout: 121 seconds)
2017-01-11 15:13:07	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Connection closed)
2017-01-11 15:13:29	◥	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has joined #rust
2017-01-11 15:13:39	◣	rakm (rakm@moz-prc.jsh.115.17.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2017-01-11 15:14:26	pedrocr	shouldn't this be easy for the borrow checker to accept as safe? https://is.gd/icpukq
2017-01-11 15:14:32	◥	darthdeus_ (darthdeus@moz-2rmvf7.net.upcbroadband.cz) has joined #rust
2017-01-11 15:14:50	◥	ssebastianj (ssebastianj@moz-qs0mlm.telecom.net.ar) has joined #rust
2017-01-11 15:14:59	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 15:15:06	◣	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2017-01-11 15:15:08	◥	cengizIO (cengizIO@moz-7dj1nq.istanbulcoders.org) has joined #rust
2017-01-11 15:15:08	bluss	not easy, it's a method call (IndexMut::index_mut) on a library type
2017-01-11 15:15:50	pedrocr	bluss: but the thing it complains about (the second reference) is garanteed to be unreachable as I just redefined buf, no?
2017-01-11 15:16:28	Ixrec	you redefine buf after doing the second mutable borrow, so that logic alone isn't enough
2017-01-11 15:16:28	◥	dardevelin (dardevelin@moz-nsbqhh.rev.vodafone.pt) has joined #rust
2017-01-11 15:16:28	◥	siarheit (siarheit@moz-mga.06o.57.86.IP) has joined #rust
2017-01-11 15:16:28	◣	cengizIO (cengizIO@moz-7dj1nq.istanbulcoders.org) has quit (Quit: ZNC 1.6.3+deb1 - http://znc.in)
2017-01-11 15:16:28	pedrocr	Ixrec: ah, right
2017-01-11 15:16:32	Ixrec	but yeah in theory it could figure this sort of thing out if it tried hard enough
2017-01-11 15:16:45	Ixrec	but this is one of the examples where you can just add a pair of curly braces and then it's fine
2017-01-11 15:16:50	◥	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has joined #rust
2017-01-11 15:16:55	◣	simonoram (simonoram@moz-73kk99.cable.virginm.net) has quit (Client exited)
2017-01-11 15:17:02	pedrocr	Ixrec: but I didn't pass in buf to the rvalue so there shouldn't be a way to be unsafe
2017-01-11 15:17:07	◥	Cyderize (Cyderize@moz-7iot5a.tpgi.com.au) has joined #rust
2017-01-11 15:17:07	◥	cengizIO (cengizIO@moz-7dj1nq.istanbulcoders.org) has joined #rust
2017-01-11 15:17:09	pedrocr	Ixrec: yeah, that's what I did
2017-01-11 15:17:18	pedrocr	it just looks ugly
2017-01-11 15:17:21	Ixrec	yes I agree this code is safe and the borrow checker is giving a false negative
2017-01-11 15:17:31	◣	Fishrock123 (Fishrock123@moz-4ms40e.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2017-01-11 15:17:38	◣	holgarB (holger@moz-ivdssg.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2017-01-11 15:17:57	Ixrec	there is a lot of work going on to allow for a smarter, more thoroughly correct borrow checker that in the future won't have as many false negatives
2017-01-11 15:18:15	◥	skeuomorf (skeuomorf@moz-aop.vql.211.156.IP) has joined #rust
2017-01-11 15:18:23	◣	ToBeFree (tobefree@moz-782r3e.de) has quit (Ping timeout: 121 seconds)
2017-01-11 15:18:30	◣	staticassert (Mibbit@moz-dqq.uce.118.208.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2017-01-11 15:18:34	Ixrec	I can't recall if this is one of the cases that it should be able to accept in the future, probably because this is one of the least painful/easiest to work around examples
2017-01-11 15:19:11	pedrocr	sure, just checking if I hadn't missed a simpler way but I see the solution I came up with is the standard
2017-01-11 15:19:16	◥	caconym (caconym@moz-c1a.kpu.243.216.IP) has joined #rust
2017-01-11 15:20:14	◥	sargas (sargas@moz-863roc.hfc.comcastbusiness.net) has joined #rust
2017-01-11 15:20:52	◣	liyuan (liyuan@moz-3tr.gjq.42.59.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 15:21:14	◣	mskalski (mskalski@moz-8u45af.opt.im) has quit (Quit: bye)
2017-01-11 15:21:22	◣	Binary (Miranda6431@moz-1lhhb3.pools.vodafone-ip.de) has quit (Client exited)
2017-01-11 15:21:28	◥	mskalski (mskalski@moz-8u45af.opt.im) has joined #rust
2017-01-11 15:21:28	◣	Jayflux (Jayflux@moz-om2b67.dsl.as9105.com) has quit (Connection closed)
2017-01-11 15:23:05	◣	siarheit (siarheit@moz-mga.06o.57.86.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 15:23:16	◣	playbot-mini (playbot-min@moz-t76o6j.compute.amazonaws.com) has quit (Connection closed)
2017-01-11 15:23:16	◥	playbot-mini (playbot-min@moz-t76o6j.compute.amazonaws.com) has joined #rust
2017-01-11 15:23:16	⚡	Mode #rust [+v playbot-mini] by ChanServ
2017-01-11 15:23:20	◣	caconym (caconym@moz-c1a.kpu.243.216.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 15:23:54	◣	jrozner_ (joe@moz-hc2nbp.res.rr.com) has quit (Ping timeout: 121 seconds)
2017-01-11 15:23:56	◥	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust
2017-01-11 15:24:21	◣	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has quit (Connection closed)
2017-01-11 15:24:28	◥	dex (Thunderbird@moz-eopas9.dynamic.kabel-deutschland.de) has joined #rust
2017-01-11 15:25:03	◣	iamrohit7 (uid193791@moz-vdrtfk.kkpo.i718.8300.2604.IP) has quit (Quit: Connection closed for inactivity)
2017-01-11 15:25:14	◥	jrozner_ (joe@moz-hc2nbp.res.rr.com) has joined #rust
2017-01-11 15:25:21	◥	mchang (mchang@moz-786mcj.res.rr.com) has joined #rust
2017-01-11 15:25:25	◥	gyng (faux@moz-urnmhv.singnet.com.sg) has joined #rust
2017-01-11 15:25:43	◥	Ayey_ (rune@moz-3uqdma.customer.tdc.net) has joined #rust
2017-01-11 15:25:46	Noldorin	has anyone imeplemented dynamic dispatch in Rust yet?
2017-01-11 15:26:05	Ixrec	trait objects do dynamic dispatch
2017-01-11 15:26:08	est31	I think impl trait has it?
2017-01-11 15:26:17	Ixrec	impl trait is not dynamic dispatch
2017-01-11 15:26:46	◣	doener (doener@moz-4vno8d.unity-media.net) has quit (Quit: leaving)
2017-01-11 15:26:52	◥	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 15:26:53	◣	nicholasf (nicholasf@moz-15ofn8.iinet.net.au) has quit (Connection closed)
2017-01-11 15:26:54	◥	nicholas_ (nicholasf@moz-15ofn8.iinet.net.au) has joined #rust
2017-01-11 15:27:14	est31	so no then :)
2017-01-11 15:27:35	Ixrec	what's wrong with trait objects?
2017-01-11 15:27:41	prz	https://doc.rust-lang.org/1.0.0-beta/book/static-and-dynamic-dispatch.html
2017-01-11 15:27:47	◥	sbeckeriv (becker@moz-kngbbf.tukw.qwest.net) has joined #rust
2017-01-11 15:28:05	SpaceManiac	newer version: https://doc.rust-lang.org/book/trait-objects.html
2017-01-11 15:42:16	◥	d8v3 (d8v3@moz-00m.h73.195.66.IP) has joined #rust
2017-01-11 15:42:16	⚡	Topic for #rust is "Rust general discussion | Current release: 1.14 | Playground https://play.rust-lang.org/ | Forum https://users.rust-lang.org/ | New user channel: #rust-beginners | Conduct https://www.rust-lang.org/conduct.html | Logs https://botbot.me/mozilla/rust"
2017-01-11 15:42:16	⚡	Topic set by steveklabnik (root@moz-fft.uo8.55.45.IP) on Thu, 22 Dec 2016 11:22:27
2017-01-11 15:42:16	⚡	Channel #rust: 1312 nicks (17 ops, 0 halfops, 2 voices, 1293 normals)
2017-01-11 15:42:18	⚡	Channel created on Mon, 05 Dec 2011 20:19:50
2017-01-11 15:42:25	Ixrec	yeah trait fields would be great just to allow the borrow checker to be certain that field accesses are partial borrows
2017-01-11 15:42:25	prz	I understand that this would NOT be safe and it took me forever to figure out the match (object.fiedl1,object.field2) { ... pattern 
2017-01-11 15:42:35	prz	but I can't use it in traits AFAI saw ... 
2017-01-11 15:43:01	◥	mdarse (mdarse@moz-mkq.3jf.215.80.IP) has joined #rust
2017-01-11 15:43:06	◣	Binero (Binero@moz-tqrl52.sji7.g8ie.a03f.2a02.IP) has quit (Client exited)
2017-01-11 15:43:08	⚡	You are now known as boon
2017-01-11 15:43:10	Ixrec	this doesn't really have anything to do with traits but with the borrow checker and taking &mut self in getter methods for some reason
2017-01-11 15:43:12	prz	match (self.getField1(), self.getField2() ) { ... didn't work ... 
2017-01-11 15:43:21	kristof	Right, twice borrowed.
2017-01-11 15:43:52	prz	like I said, I'm coming from very long, long experience with OO, C++ and habits are hard to break ... 
2017-01-11 15:44:25	prz	I used PEAK heavily in Python which I extended to be proper interface & adapter inheritance but most languages still force you into an object inheritance design ... 
2017-01-11 15:44:26	◣	bennofs1 (benno@moz-dmv86e.qn0t.tnpg.c1a0.2a00.IP) has quit (Ping timeout: 121 seconds)
2017-01-11 15:44:42	◣	jansegre (jan@moz-qt9.d9j.218.179.IP) has quit (Quit: kthxbye)
2017-01-11 15:44:47	◣	Guest37 (textual@moz-edsm98.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2017-01-11 15:44:51	◣	lucian (lucian@moz-7hsb6f.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2017-01-11 15:44:52	◥	jansegre (jan@moz-qt9.d9j.218.179.IP) has joined #rust
2017-01-11 15:45:55	◣	ubsandroid_ (ubsan@moz-nvdnvq.bin9.gd67.fb90.2607.IP) has quit (Quit: <3)
